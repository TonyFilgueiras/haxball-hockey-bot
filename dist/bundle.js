!function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);throw(f=new Error("Cannot find module '"+i+"'")).code="MODULE_NOT_FOUND",f}c=n[i]={exports:{}},e[i][0].call(c.exports,function(r){return o(e[i][1][r]||r)},c,c.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(require,module,exports){var global,factory;global=this,factory=function(exports){"use strict";const Metadata=new WeakMap;function defineMetadata(metadataKey,metadataValue,target,propertyKey){return ordinaryDefineOwnMetadata(metadataKey,metadataValue,target,propertyKey)}function decorate(decorators,target,propertyKey,attributes){if(0===decorators.length)throw new TypeError;return"function"==typeof target?function(decorators,target){return decorators.reverse().forEach(decorator=>{decorator=decorator(target);decorator&&(target=decorator)}),target}(decorators,target):void 0!==propertyKey?function(decorators,target,propertyKey,descriptor){return decorators.reverse().forEach(decorator=>{descriptor=decorator(target,propertyKey,descriptor)||descriptor}),descriptor}(decorators,target,propertyKey,attributes):void 0}function metadata(metadataKey,metadataValue){return function(target,propertyKey){ordinaryDefineOwnMetadata(metadataKey,metadataValue,target,propertyKey)}}function getMetadata(metadataKey,target,propertyKey){return ordinaryGetMetadata(metadataKey,target,propertyKey)}function getOwnMetadata(metadataKey,target,propertyKey){return ordinaryGetOwnMetadata(metadataKey,target,propertyKey)}function hasOwnMetadata(metadataKey,target,propertyKey){return!!ordinaryGetOwnMetadata(metadataKey,target,propertyKey)}function hasMetadata(metadataKey,target,propertyKey){return!!ordinaryGetMetadata(metadataKey,target,propertyKey)}function ordinaryDefineOwnMetadata(metadataKey,metadataValue,target,propertyKey){if(propertyKey&&!["string","symbol"].includes(typeof propertyKey))throw new TypeError;(getMetadataMap(target,propertyKey)||function(target,propertyKey){var targetMetadata=Metadata.get(target)||new Map,target=(Metadata.set(target,targetMetadata),targetMetadata.get(propertyKey)||new Map);return targetMetadata.set(propertyKey,target),target}(target,propertyKey)).set(metadataKey,metadataValue)}function ordinaryGetMetadata(metadataKey,target,propertyKey){return ordinaryGetOwnMetadata(metadataKey,target,propertyKey)?ordinaryGetOwnMetadata(metadataKey,target,propertyKey):Object.getPrototypeOf(target)?ordinaryGetMetadata(metadataKey,Object.getPrototypeOf(target),propertyKey):void 0}function ordinaryGetOwnMetadata(metadataKey,target,propertyKey){if(void 0===target)throw new TypeError;target=getMetadataMap(target,propertyKey);return target&&target.get(metadataKey)}function getMetadataMap(target,propertyKey){return Metadata.get(target)&&Metadata.get(target).get(propertyKey)}var Reflection={decorate:decorate,defineMetadata:defineMetadata,getMetadata:getMetadata,getOwnMetadata:getOwnMetadata,hasMetadata:hasMetadata,hasOwnMetadata:hasOwnMetadata,metadata:metadata};Object.assign(Reflect,Reflection),exports.Reflection=Reflection,exports.decorate=decorate,exports.defineMetadata=defineMetadata,exports.getMetadata=getMetadata,exports.getOwnMetadata=getOwnMetadata,exports.hasMetadata=hasMetadata,exports.hasOwnMetadata=hasOwnMetadata,exports.metadata=metadata,Object.defineProperty(exports,"__esModule",{value:!0})},"object"==typeof exports&&void 0!==module?factory(exports):"function"==typeof define&&define.amd?define(["exports"],factory):factory((global=global||self)["@abraham/reflection"]={})},{}],2:[function(require,module,exports){"use strict";var R="object"==typeof Reflect?Reflect:null,ReflectApply=R&&"function"==typeof R.apply?R.apply:function(target,receiver,args){return Function.prototype.apply.call(target,receiver,args)};var ReflectOwnKeys=R&&"function"==typeof R.ownKeys?R.ownKeys:Object.getOwnPropertySymbols?function(target){return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target))}:function(target){return Object.getOwnPropertyNames(target)},NumberIsNaN=Number.isNaN||function(value){return value!=value};function EventEmitter(){EventEmitter.init.call(this)}module.exports=EventEmitter,module.exports.once=function(emitter,name){return new Promise(function(resolve,reject){function errorListener(err){emitter.removeListener(name,resolver),reject(err)}function resolver(){"function"==typeof emitter.removeListener&&emitter.removeListener("error",errorListener),resolve([].slice.call(arguments))}eventTargetAgnosticAddListener(emitter,name,resolver,{once:!0}),"error"!==name&&function(emitter,handler,flags){"function"==typeof emitter.on&&eventTargetAgnosticAddListener(emitter,"error",handler,flags)}(emitter,errorListener,{once:!0})})},(EventEmitter.EventEmitter=EventEmitter).prototype._events=void 0,EventEmitter.prototype._eventsCount=0,EventEmitter.prototype._maxListeners=void 0;var defaultMaxListeners=10;function checkListener(listener){if("function"!=typeof listener)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof listener)}function _getMaxListeners(that){return void 0===that._maxListeners?EventEmitter.defaultMaxListeners:that._maxListeners}function _addListener(target,type,listener,prepend){var events,existing;return checkListener(listener),void 0===(events=target._events)?(events=target._events=Object.create(null),target._eventsCount=0):(void 0!==events.newListener&&(target.emit("newListener",type,listener.listener||listener),events=target._events),existing=events[type]),void 0===existing?(existing=events[type]=listener,++target._eventsCount):("function"==typeof existing?existing=events[type]=prepend?[listener,existing]:[existing,listener]:prepend?existing.unshift(listener):existing.push(listener),0<(events=_getMaxListeners(target))&&existing.length>events&&!existing.warned&&(existing.warned=!0,(prepend=new Error("Possible EventEmitter memory leak detected. "+existing.length+" "+String(type)+" listeners added. Use emitter.setMaxListeners() to increase limit")).name="MaxListenersExceededWarning",prepend.emitter=target,prepend.type=type,prepend.count=existing.length,listener=prepend,console)&&console.warn&&console.warn(listener)),target}function _onceWrap(target,type,listener){target={fired:!1,wrapFn:void 0,target:target,type:type,listener:listener},type=function(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}.bind(target);return type.listener=listener,target.wrapFn=type}function _listeners(target,type,unwrap){target=target._events;if(void 0===target)return[];target=target[type];if(void 0===target)return[];if("function"==typeof target)return unwrap?[target.listener||target]:[target];if(unwrap){for(var arr=target,ret=new Array(arr.length),i=0;i<ret.length;++i)ret[i]=arr[i].listener||arr[i];return ret}return arrayClone(target,target.length)}function listenerCount(type){var events=this._events;if(void 0!==events){events=events[type];if("function"==typeof events)return 1;if(void 0!==events)return events.length}return 0}function arrayClone(arr,n){for(var copy=new Array(n),i=0;i<n;++i)copy[i]=arr[i];return copy}function eventTargetAgnosticAddListener(emitter,name,listener,flags){if("function"==typeof emitter.on)flags.once?emitter.once(name,listener):emitter.on(name,listener);else{if("function"!=typeof emitter.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof emitter);emitter.addEventListener(name,function wrapListener(arg){flags.once&&emitter.removeEventListener(name,wrapListener),listener(arg)})}}Object.defineProperty(EventEmitter,"defaultMaxListeners",{enumerable:!0,get:function(){return defaultMaxListeners},set:function(arg){if("number"!=typeof arg||arg<0||NumberIsNaN(arg))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+arg+".");defaultMaxListeners=arg}}),EventEmitter.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},EventEmitter.prototype.setMaxListeners=function(n){if("number"!=typeof n||n<0||NumberIsNaN(n))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+n+".");return this._maxListeners=n,this},EventEmitter.prototype.getMaxListeners=function(){return _getMaxListeners(this)},EventEmitter.prototype.emit=function(type){for(var args=[],i=1;i<arguments.length;i++)args.push(arguments[i]);var doError="error"===type,events=this._events;if(void 0!==events)doError=doError&&void 0===events.error;else if(!doError)return!1;if(doError){if((er=0<args.length?args[0]:er)instanceof Error)throw er;doError=new Error("Unhandled error."+(er?" ("+er.message+")":""));throw doError.context=er,doError}var er=events[type];if(void 0===er)return!1;if("function"==typeof er)ReflectApply(er,this,args);else for(var len=er.length,listeners=arrayClone(er,len),i=0;i<len;++i)ReflectApply(listeners[i],this,args);return!0},EventEmitter.prototype.on=EventEmitter.prototype.addListener=function(type,listener){return _addListener(this,type,listener,!1)},EventEmitter.prototype.prependListener=function(type,listener){return _addListener(this,type,listener,!0)},EventEmitter.prototype.once=function(type,listener){return checkListener(listener),this.on(type,_onceWrap(this,type,listener)),this},EventEmitter.prototype.prependOnceListener=function(type,listener){return checkListener(listener),this.prependListener(type,_onceWrap(this,type,listener)),this},EventEmitter.prototype.off=EventEmitter.prototype.removeListener=function(type,listener){var list,events,position,i,originalListener;if(checkListener(listener),void 0!==(events=this._events)&&void 0!==(list=events[type]))if(list===listener||list.listener===listener)0==--this._eventsCount?this._events=Object.create(null):(delete events[type],events.removeListener&&this.emit("removeListener",type,list.listener||listener));else if("function"!=typeof list){for(position=-1,i=list.length-1;0<=i;i--)if(list[i]===listener||list[i].listener===listener){originalListener=list[i].listener,position=i;break}if(position<0)return this;0===position?list.shift():function(list,index){for(;index+1<list.length;index++)list[index]=list[index+1];list.pop()}(list,position),1===list.length&&(events[type]=list[0]),void 0!==events.removeListener&&this.emit("removeListener",type,originalListener||listener)}return this},EventEmitter.prototype.removeAllListeners=function(type){var listeners,events=this._events;if(void 0!==events)if(void 0===events.removeListener)0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==events[type]&&(0==--this._eventsCount?this._events=Object.create(null):delete events[type]);else if(0===arguments.length){for(var key,keys=Object.keys(events),i=0;i<keys.length;++i)"removeListener"!==(key=keys[i])&&this.removeAllListeners(key);this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0}else if("function"==typeof(listeners=events[type]))this.removeListener(type,listeners);else if(void 0!==listeners)for(i=listeners.length-1;0<=i;i--)this.removeListener(type,listeners[i]);return this},EventEmitter.prototype.listeners=function(type){return _listeners(this,type,!0)},EventEmitter.prototype.rawListeners=function(type){return _listeners(this,type,!1)},EventEmitter.listenerCount=function(emitter,type){return"function"==typeof emitter.listenerCount?emitter.listenerCount(type):listenerCount.call(emitter,type)},EventEmitter.prototype.listenerCount=listenerCount,EventEmitter.prototype.eventNames=function(){return 0<this._eventsCount?ReflectOwnKeys(this._events):[]}},{}],3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AbstractDisc=void 0,require("./headless");exports.AbstractDisc=class{constructor(room){this._room=room}distanceTo(disc){var r1,y2,x1,x2,y1;return isNaN(parseInt(this.x+""))||isNaN(parseInt(this.y+""))||isNaN(parseInt(disc.x+""))||isNaN(parseInt(disc.y+""))||isNaN(parseInt(this.radius+""))||isNaN(parseInt(disc.x+""))?null:(x1=this.x,y1=this.y,r1=this.radius,x2=disc.x,y2=disc.y,disc=disc.radius,x1=x1-x2,x2=y1-y2,y1=Math.sqrt(x1*x1+x2*x2),Math.max(0,y1-r1-disc))}collidingWith(disc){disc=this.distanceTo(disc);return!!disc&&disc<=0}get x(){var _a;return null==(_a=this._discObject)?void 0:_a.x}set x(value){this._discObject={x:value}}get y(){var _a;return null==(_a=this._discObject)?void 0:_a.y}set y(value){this._discObject={y:value}}get xspeed(){var _a;return null==(_a=this._discObject)?void 0:_a.xspeed}set xspeed(value){this._discObject={xspeed:value}}get yspeed(){var _a;return null==(_a=this._discObject)?void 0:_a.yspeed}set yspeed(value){this._discObject={yspeed:value}}get xgravity(){var _a;return null==(_a=this._discObject)?void 0:_a.xgravity}set xgravity(value){this._discObject={xgravity:value}}get ygravity(){var _a;return null==(_a=this._discObject)?void 0:_a.ygravity}set ygravity(value){this._discObject={ygravity:value}}get radius(){var _a;return null==(_a=this._discObject)?void 0:_a.radius}set radius(value){this._discObject={radius:value}}get bCoeff(){var _a;return null==(_a=this._discObject)?void 0:_a.bCoeff}set bCoeff(value){this._discObject={bCoeff:value}}get invMass(){var _a;return null==(_a=this._discObject)?void 0:_a.invMass}set invMass(value){this._discObject={invMass:value}}get damping(){var _a;return null==(_a=this._discObject)?void 0:_a.damping}set damping(value){this._discObject={damping:value}}get cMask(){var _a;return null==(_a=this._discObject)?void 0:_a.cMask}set cMask(value){this._discObject={cMask:value}}get cGroup(){var _a;return null==(_a=this._discObject)?void 0:_a.cGroup}set cGroup(value){this._discObject={cGroup:value}}}},{"./headless":19}],4:[function(require,module,exports){"use strict";function getRGB(color){return[(color="string"==typeof color?Number.parseInt(color.replace("#","")):color)>>16&255,color>>8&255,255&color]}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getRGBString=exports.isLight=exports.shadeColor=exports.getRGB=void 0,exports.getRGB=getRGB,exports.shadeColor=function(color,percent){return getRGB(color).map(c=>{c=c*(100+percent)/100;return c<255?c:255})},exports.isLight=function(color){return 128<=(299*(color=getRGB(color))[0]+587*color[1]+114*color[2])/1e3},exports.getRGBString=function(rgb){return"rgb("+rgb.join()+")"}},{}],5:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Command=void 0;const Role_1=require("./Role");exports.Command=class{constructor(options){var _a;this.aliases=[],this.roles=[],this.deleteMessage=!0,this.name=options.name,this.aliases=null!=(_a=options.aliases)?_a:this.aliases,this.desc=null!=(_a=options.desc)?_a:"",this.usage=null!=(_a=options.usage)?_a:"",this.roles=null!=(_a=options.roles)?_a:this.roles,this.deleteMessage=null!=(_a=options.deleteMessage)?_a:this.deleteMessage,this.func=options.func}isAllowed(player){return!(!this.roles.includes(Role_1.AdminRole)||!player.admin)||!(!player.roles.find(r=>r.override)&&0<this.roles.length)||this.roles.some(role=>player.hasRole(role))}run(info){try{this.func(info)}catch(e){console.error(e)}}}},{"./Role":15}],6:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CommandArgument=exports.parameterTypes=void 0,exports.parameterTypes={number:/^\d+$/,yesno:/^(y(es)?|n(o)?)/i,nickname:/^(?=.{1,25}$).*/i,password:/^[a-zA-Z0-9_@.!*$?&%-]{1,16}$/i,extended:/^[a-zA-Z0-9\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u024F]*$/i,specialExtended:/^[a-zA-Z0-9\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u024F_@.!*$?&%-]*$/i};exports.CommandArgument=class{constructor(argument){this._value=argument,this.number=function(argument){return exports.parameterTypes.number.test(argument)}(argument),this.yesno=function(argument){return exports.parameterTypes.yesno.test(argument)}(argument),this.password=function(argument){return exports.parameterTypes.password.test(argument)}(argument),this.extended=function(argument){return exports.parameterTypes.extended.test(argument)}(argument),this.specialExtended=function(argument){return exports.parameterTypes.specialExtended.test(argument)}(argument)}toNumber(){return parseInt(this._value)}toString(){return this._value}}},{}],7:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CommandList=void 0;exports.CommandList=class{constructor(prefix,...items){this._list=[],this._prefix=prefix,items.forEach(c=>this._list.push(c))}get list(){return this._list}get prefix(){return this._prefix}set prefix(value){this._prefix=value}add(command){command.aliases.forEach(a=>{this.remove(a)}),this.remove(command.name),this._list.push(command)}get(search){return this._list.find(cmd=>cmd.name===search)||this._list.find(cmd=>{return-1!==(null==(cmd=cmd.aliases)?void 0:cmd.indexOf(search))})}remove(command){this._list=this._list.filter(cmd=>{return cmd.name!==command&&cmd.name!==(null==(cmd=command)?void 0:cmd.name)})}}},{}],8:[function(require,module,exports){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P=P||Promise)(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):((value=result.value)instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})},require=(Object.defineProperty(exports,"__esModule",{value:!0}),exports.keys=exports.clear=exports.remove=exports.set=exports.get=void 0,require("idb"));const connStorage="connections";const db=require.openDB("haxball-extended-room",1,{upgrade(db){db.createObjectStore(connStorage,{keyPath:"ip"})}});exports.get=function(key){return __awaiter(this,void 0,void 0,function*(){return(yield db).get(connStorage,key)})},exports.set=function(val){return __awaiter(this,void 0,void 0,function*(){return(yield db).put(connStorage,val)})},exports.remove=function(key){return __awaiter(this,void 0,void 0,function*(){return(yield db).delete(connStorage,key)})},exports.clear=function(){return __awaiter(this,void 0,void 0,function*(){return(yield db).clear(connStorage)})},exports.keys=function(){return __awaiter(this,void 0,void 0,function*(){return(yield db).getAllKeys(connStorage)})}},{idb:22}],9:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Disc=void 0;var AbstractDisc_1=require("./AbstractDisc");const Settings_1=require("./Settings");class Disc extends AbstractDisc_1.AbstractDisc{constructor(room,discIndex){super(room),this.settings=new Settings_1.Settings,this.index=discIndex}get _discObject(){return this._room.native.getDiscProperties(this.index)}set _discObject(properties){this._room.native.setDiscProperties(this.index,properties)}get color(){return this._discObject.color}set color(value){this._discObject={color:value}}}exports.Disc=Disc},{"./AbstractDisc":3,"./Settings":18}],10:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RoomGeoList=exports.Colors=exports.ChatStyle=exports.ChatSounds=exports.Stadiums=exports.Teams=void 0,function(Teams){Teams[Teams.Spectators=0]="Spectators",Teams[Teams.Red=1]="Red",Teams[Teams.Blue=2]="Blue"}(exports.Teams||(exports.Teams={})),function(Stadiums){Stadiums.Classic="Classic",Stadiums.Easy="Easy",Stadiums.Small="Small",Stadiums.Big="Big",Stadiums.Rounded="Rounded",Stadiums.Hockey="Hockey",Stadiums.BigHockey="BigHockey",Stadiums.BigEasy="BigEasy",Stadiums.BigRounded="BigRounded",Stadiums.Huge="Huge"}(exports.Stadiums||(exports.Stadiums={})),function(ChatSounds){ChatSounds[ChatSounds.None=0]="None",ChatSounds[ChatSounds.Normal=1]="Normal",ChatSounds[ChatSounds.Notification=2]="Notification"}(exports.ChatSounds||(exports.ChatSounds={})),function(ChatStyle){ChatStyle.Normal="normal",ChatStyle.Bold="bold",ChatStyle.Italic="italic",ChatStyle.Small="small",ChatStyle.SmallBold="small-bold",ChatStyle.SmallItalic="small-italic"}(exports.ChatStyle||(exports.ChatStyle={})),function(Colors){Colors[Colors.AliceBlue=15792383]="AliceBlue",Colors[Colors.AntiqueWhite=16444375]="AntiqueWhite",Colors[Colors.Aqua=65535]="Aqua",Colors[Colors.AquaMarine=8388564]="AquaMarine",Colors[Colors.Azure=15794175]="Azure",Colors[Colors.Beige=16119260]="Beige",Colors[Colors.Bisque=16770244]="Bisque",Colors[Colors.Black=0]="Black",Colors[Colors.BlancheDalmond=16772045]="BlancheDalmond",Colors[Colors.Blue=255]="Blue",Colors[Colors.BlueViolet=9055202]="BlueViolet",Colors[Colors.Brown=10824234]="Brown",Colors[Colors.Burlywood=14596231]="Burlywood",Colors[Colors.CadetBlue=6266528]="CadetBlue",Colors[Colors.Chartreuse=8388352]="Chartreuse",Colors[Colors.Chocolate=13789470]="Chocolate",Colors[Colors.Coral=16744272]="Coral",Colors[Colors.CornflowerBlue=6591981]="CornflowerBlue",Colors[Colors.Cornsilk=16775388]="Cornsilk",Colors[Colors.Crimson=14423100]="Crimson",Colors[Colors.Cyan=65535]="Cyan",Colors[Colors.DarkBlue=139]="DarkBlue",Colors[Colors.DarkCyan=35723]="DarkCyan",Colors[Colors.DarkGoldenRod=12092939]="DarkGoldenRod",Colors[Colors.DarkGray=11119017]="DarkGray",Colors[Colors.DarkGreen=25600]="DarkGreen",Colors[Colors.DarkKhaki=12433259]="DarkKhaki",Colors[Colors.DarkMagenta=9109643]="DarkMagenta",Colors[Colors.DarkOliveGreen=5597999]="DarkOliveGreen",Colors[Colors.DarkOrange=16747520]="DarkOrange",Colors[Colors.DarkOrchid=10040012]="DarkOrchid",Colors[Colors.DarkRed=9109504]="DarkRed",Colors[Colors.DarkSalmon=15308410]="DarkSalmon",Colors[Colors.DarkseaGreen=9419919]="DarkseaGreen",Colors[Colors.DarkSlateBlue=4734347]="DarkSlateBlue",Colors[Colors.DarkSlateGray=3100495]="DarkSlateGray",Colors[Colors.DarkTurquoise=52945]="DarkTurquoise",Colors[Colors.DarkViolet=9699539]="DarkViolet",Colors[Colors.DeepPink=16716947]="DeepPink",Colors[Colors.DeepSkyBlue=49151]="DeepSkyBlue",Colors[Colors.DimGray=6908265]="DimGray",Colors[Colors.DodgerBlue=2003199]="DodgerBlue",Colors[Colors.Firebrick=11674146]="Firebrick",Colors[Colors.FloralWhite=16775920]="FloralWhite",Colors[Colors.ForestGreen=2263842]="ForestGreen",Colors[Colors.Fuchsia=16711935]="Fuchsia",Colors[Colors.Gainsboro=14474460]="Gainsboro",Colors[Colors.GhostWhite=16316671]="GhostWhite",Colors[Colors.Gold=16766720]="Gold",Colors[Colors.GoldenRod=14329120]="GoldenRod",Colors[Colors.Gray=8421504]="Gray",Colors[Colors.Green=32768]="Green",Colors[Colors.GreenYellow=11403055]="GreenYellow",Colors[Colors.Honeydew=15794160]="Honeydew",Colors[Colors.HotPink=16738740]="HotPink",Colors[Colors.IndianRed=13458524]="IndianRed",Colors[Colors.Indigo=4915330]="Indigo",Colors[Colors.Ivory=16777200]="Ivory",Colors[Colors.Khaki=15787660]="Khaki",Colors[Colors.Lavender=15132410]="Lavender",Colors[Colors.Lavenderblush=16773365]="Lavenderblush",Colors[Colors.LawnGreen=8190976]="LawnGreen",Colors[Colors.LemonChiffon=16775885]="LemonChiffon",Colors[Colors.LightBlue=11393254]="LightBlue",Colors[Colors.Lightcoral=15761536]="Lightcoral",Colors[Colors.LightCyan=14745599]="LightCyan",Colors[Colors.LightGoldenRodYellow=16448210]="LightGoldenRodYellow",Colors[Colors.LightGrey=13882323]="LightGrey",Colors[Colors.LightGreen=9498256]="LightGreen",Colors[Colors.LightPink=16758465]="LightPink",Colors[Colors.LightSalmon=16752762]="LightSalmon",Colors[Colors.LightSeaGreen=2142890]="LightSeaGreen",Colors[Colors.LightSkyBlue=8900346]="LightSkyBlue",Colors[Colors.LightSlateGray=7833753]="LightSlateGray",Colors[Colors.LightSteelBlue=11584734]="LightSteelBlue",Colors[Colors.LightYellow=16777184]="LightYellow",Colors[Colors.Lime=65280]="Lime",Colors[Colors.LimeGreen=3329330]="LimeGreen",Colors[Colors.Linen=16445670]="Linen",Colors[Colors.Magenta=16711935]="Magenta",Colors[Colors.Maroon=8388608]="Maroon",Colors[Colors.MediumAquamarine=6737322]="MediumAquamarine",Colors[Colors.MediumBlue=205]="MediumBlue",Colors[Colors.Mediumorchid=12211667]="Mediumorchid",Colors[Colors.MediumPurple=9662680]="MediumPurple",Colors[Colors.MediumSeaGreen=3978097]="MediumSeaGreen",Colors[Colors.MediumSlateBlue=8087790]="MediumSlateBlue",Colors[Colors.MediumspringGreen=64154]="MediumspringGreen",Colors[Colors.MediumTurquoise=4772300]="MediumTurquoise",Colors[Colors.MediumVioletRed=13047173]="MediumVioletRed",Colors[Colors.MidnightBlue=1644912]="MidnightBlue",Colors[Colors.MintCream=16121850]="MintCream",Colors[Colors.MistyRose=16770273]="MistyRose",Colors[Colors.Moccasin=16770229]="Moccasin",Colors[Colors.NavajoWhite=16768685]="NavajoWhite",Colors[Colors.Navy=128]="Navy",Colors[Colors.OldLace=16643558]="OldLace",Colors[Colors.Olive=8421376]="Olive",Colors[Colors.OliveDrab=7048739]="OliveDrab",Colors[Colors.Orange=16753920]="Orange",Colors[Colors.OrangeRed=16729344]="OrangeRed",Colors[Colors.Orchid=14315734]="Orchid",Colors[Colors.PaleGoldenRod=15657130]="PaleGoldenRod",Colors[Colors.PaleGreen=10025880]="PaleGreen",Colors[Colors.PaleTurquoise=11529966]="PaleTurquoise",Colors[Colors.PaleVioletRed=14184595]="PaleVioletRed",Colors[Colors.PapayaWhip=16773077]="PapayaWhip",Colors[Colors.Peachpuff=16767673]="Peachpuff",Colors[Colors.Peru=13468991]="Peru",Colors[Colors.Pink=16761035]="Pink",Colors[Colors.Plum=14524637]="Plum",Colors[Colors.PowderBlue=11591910]="PowderBlue",Colors[Colors.Purple=8388736]="Purple",Colors[Colors.RebeccaPurple=6697881]="RebeccaPurple",Colors[Colors.Red=16711680]="Red",Colors[Colors.RosyBrown=12357519]="RosyBrown",Colors[Colors.RoyalBlue=4286945]="RoyalBlue",Colors[Colors.SaddleBrown=9127187]="SaddleBrown",Colors[Colors.Salmon=16416882]="Salmon",Colors[Colors.SandyBrown=16032864]="SandyBrown",Colors[Colors.SeaGreen=3050327]="SeaGreen",Colors[Colors.Seashell=16774638]="Seashell",Colors[Colors.Sienna=10506797]="Sienna",Colors[Colors.Silver=12632256]="Silver",Colors[Colors.SkyBlue=8900331]="SkyBlue",Colors[Colors.SlateBlue=6970061]="SlateBlue",Colors[Colors.SlateGray=7372944]="SlateGray",Colors[Colors.Snow=16775930]="Snow",Colors[Colors.SpringGreen=65407]="SpringGreen",Colors[Colors.SteelBlue=4620980]="SteelBlue",Colors[Colors.Tan=13808780]="Tan",Colors[Colors.Teal=32896]="Teal",Colors[Colors.Thistle=14204888]="Thistle",Colors[Colors.Tomato=16737095]="Tomato",Colors[Colors.Turquoise=4251856]="Turquoise",Colors[Colors.Violet=15631086]="Violet",Colors[Colors.Wheat=16113331]="Wheat",Colors[Colors.White=16777215]="White",Colors[Colors.WhiteSmoke=16119285]="WhiteSmoke",Colors[Colors.Yellow=16776960]="Yellow",Colors[Colors.YellowGreen=10145074]="YellowGreen",Colors[Colors.Haxball=9360043]="Haxball"}(exports.Colors||(exports.Colors={})),exports.RoomGeoList={SaoPaulo:{code:"br",lat:-23.533773,lon:-46.62529},RiodeJaneiro:{code:"br",lat:-22.970722,lon:-43.182365},Curitiba:{code:"br",lat:-25.423164974,lon:-49.270998916},PortoAlegre:{code:"br",lat:-30.03306,lon:-51.23},Salvador:{code:"br",lat:-12.97111,lon:-38.51083},Brasilia:{code:"br",lat:-15.77972,lon:-47.92972},BeloHorizonte:{code:"br",lat:-19.92083,lon:-43.93778},Montevideu:{code:"uy",lat:-34.90328,lon:-56.18816},BuenosAires:{code:"ar",lat:-34.61315,lon:-58.37723},Cordoba:{code:"ar",lat:-31.4135,lon:-64.18105},Rosario:{code:"ar",lat:-32.94682,lon:-60.63932},Santiago:{code:"cl",lat:-33.45694,lon:-70.64827},Bogota:{code:"co",lat:4.60971,lon:-74.08175},Lisbon:{code:"pt",lat:38.71667,lon:-9.13333},Porto:{code:"pt",lat:41.14961,lon:-8.61099},NewYorkCity:{code:"us",lat:40.71427,lon:-74.00597},LosAngeles:{code:"us",lat:34.05223,lon:-118.24368},Chicago:{code:"us",lat:41.85003,lon:-87.65005},Houston:{code:"us",lat:29.76328,lon:-95.36327},Washington:{code:"us",lat:38.89511,lon:-77.03637},Boston:{code:"us",lat:42.35843,lon:-71.05977},Miami:{code:"us",lat:25.77427,lon:-80.19366},Toronto:{code:"ca",lat:43.70011,lon:-79.4163},Montreal:{code:"ca",lat:45.50884,lon:-73.58781},Madrid:{code:"es",lat:40.4165,lon:-3.70256},Barcelona:{code:"es",lat:41.38879,lon:2.15899},Valencia:{code:"es",lat:39.46975,lon:-.37739},Seville:{code:"es",lat:37.38283,lon:-5.97317},Paris:{code:"fr",lat:48.85341,lon:2.3488},Marseille:{code:"fr",lat:43.29695,lon:5.38107},Lyon:{code:"fr",lat:45.74846,lon:4.84671},Toulouse:{code:"fr",lat:43.60426,lon:1.44367},Nantes:{code:"fr",lat:47.21725,lon:-1.55336},Rome:{code:"it",lat:41.89193,lon:12.51133},Milan:{code:"it",lat:45.46427,lon:9.18951},Naples:{code:"it",lat:40.85631,lon:14.24641},Turin:{code:"it",lat:45.07049,lon:7.68682},Palermo:{code:"it",lat:38.13205,lon:13.33561},London:{code:"uk",lat:51.50853,lon:-.12574},Birmingham:{code:"uk",lat:52.48142,lon:-1.89983},Liverpool:{code:"uk",lat:53.41058,lon:-2.97794},Berlin:{code:"de",lat:52.52437,lon:13.41053},Hamburg:{code:"de",lat:53.57532,lon:10.01534},Munich:{code:"de",lat:48.13743,lon:11.57549},Cologne:{code:"de",lat:50.93333,lon:6.95},Frankfurt:{code:"de",lat:50.11552,lon:8.68417},Athens:{code:"gr",lat:38.2749497,lon:23.8102717},Zagreb:{code:"hr",lat:45.81444,lon:15.97798},Sarajevo:{code:"ba",lat:43.84864,lon:18.35644},Moscow:{code:"ru",lat:55.75222,lon:37.61556},SaintPetersburg:{code:"ru",lat:59.93863,lon:30.31413},Belgrade:{code:"rs",lat:44.80401,lon:20.46513},Amsterdam:{code:"nl",lat:52.37403,lon:4.88969},Istanbul:{code:"tr",lat:41.01384,lon:28.94966},Ankara:{code:"tr",lat:39.91987,lon:32.85427},Izmir:{code:"tr",lat:38.41273,lon:27.13838},Bursa:{code:"tr",lat:40.19559,lon:29.06013},Adana:{code:"tr",lat:37.00167,lon:35.32889},Gaziantep:{code:"tr",lat:37.05944,lon:37.3825},Konya:{code:"tr",lat:37.87135,lon:32.48464},Antalya:{code:"tr",lat:36.90812,lon:30.69556},Warsaw:{code:"pl",lat:52.22977,lon:21.01178},Lodz:{code:"pl",lat:51.75,lon:19.46667},Krakow:{code:"pl",lat:50.06143,lon:19.93658},Wroclaw:{code:"pl",lat:51.1,lon:17.03333},Poznan:{code:"pl",lat:52.40692,lon:16.92993},Gdansk:{code:"pl",lat:54.35205,lon:18.64637},Bucharest:{code:"ro",lat:44.43225,lon:26.10626},Jerusalem:{code:"il",lat:31.76904,lon:35.21633},TelAviv:{code:"il",lat:32.08088,lon:34.78057},Tbilisi:{code:"ge",lat:41.69411,lon:44.83368},Mumbai:{code:"in",lat:19.07283,lon:72.88261},Delhi:{code:"in",lat:28.65195,lon:77.23149},Sydney:{code:"au",lat:-33.86785,lon:151.20732},Melbourne:{code:"au",lat:-37.814,lon:144.96332},Brisbane:{code:"au",lat:-27.46794,lon:153.02809},Singapore:{code:"sg",lat:1.28967,lon:103.85007},Seoul:{code:"kr",lat:37.566,lon:126.9784},Tokyo:{code:"jp",lat:35.6895,lon:139.69171}}},{}],11:[function(require,module,exports){"use strict";var ChatStyleCSS,__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){o[k2=void 0===k2?k:k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.log=exports.admin=exports.chat=exports.direct=exports.announcement=exports.anonymous=void 0,require("./types");const Color=__importStar(require("./Color")),Global_1=require("./Global"),template="%c%s%c %c%s%c %c%s",tag="display: inline-block;color: black; font-weight: bold; padding: 3px 7px 3px 7px; border-radius: 3px 3px 3px 3px;",announcementTag=formatTag(Global_1.Colors.Gold),privateTag=formatTag(Global_1.Colors.SkyBlue),chatTag=formatTag(Global_1.Colors.LightGreen),adminTag=formatTag(Global_1.Colors.Gold),timestampTag=formatTag(Global_1.Colors.LightGrey),announcementTagText="📢",privateTagText="📥 ";function formatTag(color){return tag+`background-color: ${Color.getRGBString(Color.getRGB(color))};`}function customLog(options){var _b,_a=null!=(_a=options.message.color)?_a:Global_1.Colors.Black,_a="color: "+(Color.isLight(_a)?Color.getRGBString(Color.shadeColor(_a,-40)):Color.getRGBString(Color.getRGB(_a)))+";";let messageStyle="";options.message.style===Global_1.ChatStyle.Bold&&(messageStyle=ChatStyleCSS.Bold),options.message.style===Global_1.ChatStyle.Italic&&(messageStyle=ChatStyleCSS.Italic),options.message.style===Global_1.ChatStyle.Small&&(messageStyle=ChatStyleCSS.Small),options.message.style===Global_1.ChatStyle.SmallBold&&(messageStyle=ChatStyleCSS.SmallBold),options.message.style===Global_1.ChatStyle.SmallItalic&&(messageStyle=ChatStyleCSS.SmallItalic),anonymous(null!=(_b=options.template)?_b:template,null!=(_b=options.timestampTag)?_b:timestampTag,""+new Date(Date.now()-6e4*new Date(Date.now()).getTimezoneOffset()).toISOString().substr(11,8),"",null!=(_b=options.tag)?_b:"",null!=(_b=options.tagContent)?_b:"","",_a+messageStyle,options.message.message)}function anonymous(...params){setTimeout(console.log.bind(console,...params))}!function(ChatStyleCSS){ChatStyleCSS.Bold="font-weight: bold;",ChatStyleCSS.Italic="font-style: italic;",ChatStyleCSS.Small="font-size: small;",ChatStyleCSS.SmallBold="font-size: small; font-weight: bold;",ChatStyleCSS.SmallItalic="font-size: small; font-style: italic;"}(ChatStyleCSS=ChatStyleCSS||{}),exports.anonymous=anonymous,exports.announcement=function(message){customLog({tag:announcementTag,tagContent:announcementTagText,message:message})},exports.direct=function(message,player){customLog({tag:privateTag,tagContent:privateTagText+(null==player?void 0:player.tag),message:message})},exports.chat=function(message,player){customLog({tag:chatTag,tagContent:null==player?void 0:player.tag,message:message})},exports.admin=function(message,player){customLog({tag:adminTag,tagContent:null==player?void 0:player.tag,message:message})},exports.log=function(message){customLog({message:message})}},{"./Color":4,"./Global":10,"./types":21}],12:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){o[k2=void 0===k2?k:k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P=P||Promise)(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):((value=result.value)instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})},AbstractDisc_1=(Object.defineProperty(exports,"__esModule",{value:!0}),exports.Player=void 0,require("./types"),require("./AbstractDisc"));const Settings_1=require("./Settings"),ConnectionHistory=__importStar(require("./ConnectionHistory")),RoleList_1=require("./RoleList");class Player extends AbstractDisc_1.AbstractDisc{constructor(room,playerObject){super(room),this._kickLimitDistance=4,this._roles=new RoleList_1.RoleList,this.settings=new Settings_1.Settings,this.commandsCooldown=0,this.canReadChat=!0,this.canUseCommands=!0,this._lastCommandTime=0,this.name=playerObject.name,this.id=playerObject.id,this.auth=playerObject.auth,this.conn=playerObject.conn,this.ip=this._decodeConn(this.conn)}fetchGeoLocation(){return __awaiter(this,void 0,void 0,function*(){var connHistory=yield ConnectionHistory.get(this.ip);return connHistory&&connHistory.geo?this._geo=connHistory.geo:(connHistory=yield(yield fetch(`https://ipapi.co/${this.ip}/json/`)).json(),this._geo={city:connHistory.city,continent:connHistory.continent_code,country:connHistory.country,language:connHistory.languages.split(",")[0],org:connHistory.org,region:connHistory.region,timezone:connHistory.timezone}),this._geo})}_decodeConn(str){return decodeURIComponent(str.replace(/(..)/g,"%$1"))}setAvatar(avatar){this._room.native.setPlayerAvatar(this.id,avatar)}clearAvatar(){this._room.native.setPlayerAvatar(this.id,null)}kick(reason){this._room.native.kickPlayer(this.id,null!=reason?reason:"",!1)}ban(reason){this._room.native.kickPlayer(this.id,null!=reason?reason:"",!0)}reply(message){this.canReadChat&&(message.targetID=this.id,this._room.send(message))}canKick(disc){disc=disc.distanceTo(this);return!!disc&&disc<this._kickLimitDistance}canRunCommandsCooldown(){return Date.now()-this._lastCommandTime>1e3*this.commandsCooldown}updateCooldown(){this._lastCommandTime=Date.now()}addRole(role){this._roles.add(role)}removeRole(role){this._roles.remove(role)}hasRole(role){return this._roles.has(role)}get _playerObject(){return this._room.native.getPlayer(this.id)}get _discObject(){return this._room.native.getPlayerDiscProperties(this.id)}set _discObject(properties){this._room.native.setPlayerDiscProperties(this.id,properties)}get team(){var _a;return null==(_a=this._playerObject)?void 0:_a.team}set team(team){this._room.native.setPlayerTeam(this.id,team)}get roles(){return this._roles.roles}get topRole(){return this.roles.sort((a,b)=>b.position-a.position)[0]}get admin(){var _a;return null==(_a=this._playerObject)?void 0:_a.admin}set admin(value){this._room.native.setPlayerAdmin(this.id,value)}get position(){var _a;return null==(_a=this._playerObject)?void 0:_a.position}set position(pos){this._discObject={x:pos.x,y:pos.y}}get tag(){return this.name+" #"+this.id}get mention(){return"@"+this.name.replace(/ /g,"_")}get geolocation(){return this._geo||null}}exports.Player=Player},{"./AbstractDisc":3,"./ConnectionHistory":8,"./RoleList":16,"./Settings":18,"./types":21}],13:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PlayerList=void 0,require("./types");const Global_1=require("./Global");class PlayerList{constructor(...items){items.forEach(p=>this.add(p))}[Symbol.iterator](){let i=0;const arr=this.values();return{next:()=>({value:arr[i++],done:i>arr.length})}}get size(){return this.values().length}add(player){this[player.id]=player}remove(player){delete this["number"==typeof player?player:player.id]}get(predicate){if(void 0!==predicate){if("number"==typeof predicate)return this[predicate];for(const player of this)if(predicate(player))return player}}getAll(predicate){var players=new PlayerList;for(const player of this)predicate(player)&&players.add(player);return players}values(){return Object.values(this)}order(room){var orderedList=this.values();const playerList=room.native.getPlayerList();return orderedList.sort((a,b)=>playerList.findIndex(p=>p.id===a.id)-playerList.findIndex(p=>p.id===b.id)),[...orderedList]}first(){return this.values()[0]}last(){return this.values().pop()}getByName(name){return this.getAll(player=>player.name===name)}getByAuth(auth){return this.getAll(player=>player.auth===auth)}getByConnOrIP(connOrIP){var _a;return null!=(_a=this.getAll(player=>player.conn===connOrIP))?_a:this.getAll(player=>player.ip===connOrIP)}kick(reason){this.values().forEach(player=>player.kick(reason))}ban(reason){this.values().forEach(player=>player.ban(reason))}spectators(){return this.getAll(player=>player.team===Global_1.Teams.Spectators)}red(){return this.getAll(player=>player.team===Global_1.Teams.Red)}blue(){return this.getAll(player=>player.team===Global_1.Teams.Blue)}teams(){return this.getAll(player=>player.team!==Global_1.Teams.Spectators)}admins(){return this.getAll(player=>player.admin)}reply(message){for(const player of this)player.reply(message)}toString(){return this.values().map(p=>`${p.name} (${p.id})`).join(", ")}}exports.PlayerList=PlayerList},{"./Global":10,"./types":21}],14:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createEvent=exports.createCommand=exports.createPlugin=void 0,require("@abraham/reflection"),exports.createPlugin=function(target){Reflect.defineMetadata("her:plugin",!0,target)},exports.createCommand=function(options){return(target,key,descriptor)=>{var commands=Reflect.getMetadata("her:commands",target),key=Object.assign({name:key,func:descriptor.value},options);commands?commands.push(key):Reflect.defineMetadata("her:commands",[key],target)}};exports.createEvent=(target,key,descriptor)=>{var events=Reflect.getMetadata("her:events",target),key={name:key,func:descriptor.value};events?events.push(key):Reflect.defineMetadata("her:events",[key],target)}},{"@abraham/reflection":1}],15:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Role=exports.AdminRole=void 0;const Global_1=require("./Global"),Settings_1=require("./Settings");exports.AdminRole="admin";exports.Role=class{constructor(name){this.admin=!1,this.color=Global_1.Colors.White,this.prefix="",this.override=!1,this.position=0,this.settings=new Settings_1.Settings,this.name=null!=name?name:""}setName(name){return this.name=name,this}setAdmin(){return this.admin=!0,this}setColor(color){return this.color=color,this}setPrefix(prefix){return this.prefix=prefix,this}setOverride(){return this.override=!0,this}setPosition(position){return this.position=position,this}}},{"./Global":10,"./Settings":18}],16:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RoleList=void 0,require("./types");exports.RoleList=class{constructor(){this.adminRoles=[],this.playerRoles=[]}get roles(){return[...this.adminRoles,...this.playerRoles]}add(role){return(role.admin?this.adminRoles:this.playerRoles).push(role),this}remove(role){const roleName="string"==typeof role?role:role.name;this.adminRoles=this.adminRoles.filter(r=>r.name!==roleName),this.playerRoles=this.playerRoles.filter(r=>r.name!==roleName)}get(role){const roleName="string"==typeof role?role:role.name;return this.roles.find(r=>r.name===roleName)}has(role){const roleName="string"==typeof role?role:role.name;return!!this.roles.find(r=>r.name===roleName)}}},{"./types":21}],17:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){o[k2=void 0===k2?k:k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Room=void 0,require("@abraham/reflection"),require("./types");const Logger=__importStar(require("./Logger")),Player_1=require("./Player"),Command_1=require("./Command"),Disc_1=require("./Disc"),PlayerList_1=require("./PlayerList"),CommandList_1=require("./CommandList"),CommandArgument_1=require("./CommandArgument"),ConnHistory=__importStar(require("./ConnectionHistory")),Global_1=require("./Global"),Settings_1=require("./Settings"),events_1=require("events");exports.Room=class{constructor(roomConfig){var _a;if(this._discs=[],this._plugins=[],this.CollisionFlags={all:63,ball:1,blue:4,blueKO:16,c0:268435456,c1:536870912,c2:1073741824,c3:-2147483648,kick:64,red:2,redKO:8,score:128,wall:32},this.settings=new Settings_1.Settings,this.customEvents=new events_1.EventEmitter,this.logging=!0,this._insufficientPermissionsMessage={message:"You're not allowed to use this command!",color:Global_1.Colors.Red,style:Global_1.ChatStyle.Bold,sound:Global_1.ChatSounds.Notification},this._playerCommandCooldownMessage={message:"Don't type commands too fast!",color:Global_1.Colors.Red,style:Global_1.ChatStyle.Bold,sound:Global_1.ChatSounds.Notification},this._defaultPrefix="!",this._paused=!1,this._desconstructMessage=message=>message.slice(this.prefix.length).trim().split(/ +/),this._getCommandName=message=>this._desconstructMessage(message)[0].toLowerCase(),this._getArguments=message=>this._desconstructMessage(message).slice(1),void 0!==window.room)throw new Error("Cannot instantiate twice!");null==roomConfig.noPlayer&&(roomConfig.noPlayer=!0),this._room=window.HBInit(roomConfig),this.name=roomConfig.roomName,this.playerName=roomConfig.playerName,this.maxPlayers=roomConfig.maxPlayers,this.geo=roomConfig.geo,this.token=roomConfig.token,this.noPlayer=null==(_a=roomConfig.noPlayer)||_a,this._password=null!=(_a=roomConfig.password)?_a:null,this._players=new PlayerList_1.PlayerList,this._commands=new CommandList_1.CommandList(this._defaultPrefix),this.prefix=this._defaultPrefix,this._setAllEvents(),this._initialMessage(),window.room=this,window.Colors=Global_1.Colors,window.ChatSounds=Global_1.ChatSounds,window.ChatStyle=Global_1.ChatStyle,window.Teams=Global_1.Teams,window.Stadiums=Global_1.Stadiums}_setKickEvent(){this._room.onPlayerKicked=(kickedPlayer,reason,ban,byPlayer)=>{this.logging&&Logger.log({message:kickedPlayer.name+` was ${ban?"banned":"kicked"} `+(byPlayer?`by ${byPlayer.name} `:"")+(reason?`(${reason})`:""),color:Global_1.Colors.Haxball}),ban?this._runEvent("onPlayerBanned",this._onPlayerBannedFunction,kickedPlayer,reason,byPlayer):this._runEvent("onPlayerKicked",this._onPlayerKickedFunction,kickedPlayer,reason,byPlayer)}}_setAllEvents(){this.onGamePause=()=>{},this.onGameStart=()=>{},this.onGameStop=()=>{},this.onGameTick=()=>{},this.onGameUnpause=()=>{},this.onKickRateLimitSet=()=>{},this.onPlayerActivity=()=>{},this.onPlayerAdminChange=()=>{},this.onPlayerBallKick=()=>{},this.onPlayerBanned=()=>{},this.onPlayerChat=()=>!0,this.onPlayerJoin=()=>{},this.onPlayerKicked=()=>{},this.onPlayerLeave=()=>{},this.onPlayerTeamChange=()=>{},this.onPositionsReset=()=>{},this.onRoomLink=()=>{},this.onStadiumChange=()=>{},this.onTeamGoal=()=>{},this.onTeamVictory=()=>{},this.onPlayerGeoLocationFetch=()=>{},this.onPlayerRunCommand=()=>{}}_runEvent(name,func,...args){this._plugins.forEach(plugin=>{plugin.events.forEach(event=>{event.name===name&&event.func(...args)})}),func(...args)}_initialMessage(){Logger.anonymous("%cHaxball Extended Room","color:#233E82; display: block;font-weight:bold; font-size:38px; background:#fff;"),Logger.anonymous("%cA better API for Haxball","color:#222; font-family:'Ubuntu'; font-weight:100; font-size:24px; background:#fff;")}set onPlayerBallKick(func){this._room.onPlayerBallKick=p=>this._runEvent("onPlayerBallKick",func,this.players[p.id])}set onPlayerKicked(func){this._onPlayerKickedFunction=func,this._setKickEvent()}set onPlayerBanned(func){this._onPlayerBannedFunction=func,this._setKickEvent()}set onGameTick(func){this._room.onGameTick=()=>this._runEvent("onGameTick",func)}set onTeamGoal(func){this._room.onTeamGoal=team=>this._runEvent("onTeamGoal",func,team)}set onPositionsReset(func){this._room.onPositionsReset=()=>this._runEvent("onPositionsReset",func)}set onPlayerActivity(func){this._room.onPlayerActivity=p=>this._runEvent("onPlayerActivity",func,this.players[p.id])}set onRoomLink(func){this._room.onRoomLink=link=>this._runEvent("onRoomLink",func,link)}set onKickRateLimitSet(func){this._room.onKickRateLimitSet=(m,r,b,bP)=>this._runEvent("onKickRateLimitSet",func,m,r,b,this.players[null==bP?void 0:bP.id])}set onPlayerJoin(func){this._room.onPlayerJoin=p=>{const player=new Player_1.Player(this,p);this.players.add(player),player.fetchGeoLocation().then(()=>{const playerInfo={id:player.id,auth:player.auth,name:player.name,joinedAt:new Date(Date.now())};ConnHistory.get(player.ip).then(history=>{history?(history.players.push(playerInfo),ConnHistory.set(history)):ConnHistory.set({ip:player.ip,geo:player.geolocation,players:[playerInfo]})}),this._onPlayerGeoLocationFetchFunction(player)}).catch(e=>{console.error("Unable to fetch player's geolocation",e)}),this.logging&&Logger.log({message:player.name+" has joined",color:Global_1.Colors.Haxball}),this._runEvent("onPlayerJoin",func,player)}}set onPlayerLeave(func){this._room.onPlayerLeave=p=>{p=this.players[p.id];this.players.remove(p),this.logging&&Logger.log({message:p.name+" has left",color:Global_1.Colors.Haxball}),this._runEvent("onPlayerLeave",func,p)}}set onTeamVictory(func){this._room.onTeamVictory=scores=>{var teamWon;this.logging&&(teamWon=scores.red>scores.blue?"Red":"Blue",Logger.log({message:teamWon+" team won the match",color:Global_1.Colors.Haxball})),this._runEvent("onTeamVictory",func,scores)}}set onPlayerChat(func){this._room.onPlayerChat=(p,msg)=>{const player=this.players[p.id],command=this._commands.get(this._getCommandName(msg));let commandRun=null;if(msg[0]===this.prefix&&command&&player.canUseCommands){if(!player.canRunCommandsCooldown())return player.reply(this._playerCommandCooldownMessage),!1;if(!command.isAllowed(player))return player.reply(this._insufficientPermissionsMessage),!1;const args=this._getArguments(msg).map(arg=>new CommandArgument_1.CommandArgument(arg));if(commandRun=()=>{var execInfo={player:player,at:new Date(Date.now()),message:msg,room:this,arguments:args};command.run(execInfo),this._onPlayerRunCommandFunction(player,command,execInfo)},player.updateCooldown(),command.deleteMessage)return commandRun(),!1}for(const plugin of this._plugins)for(const event of plugin.events)if("onPlayerChat"===event.name&&!1===event.func(player,msg))return commandRun&&commandRun(),!1;if(!1===func(player,msg))return commandRun&&commandRun(),!1;this.logging&&(player.admin?Logger.admin({message:msg},player):Logger.chat({message:msg},player)),commandRun&&commandRun()}}set onGameStart(func){this._room.onGameStart=p=>{p=this.players[null==p?void 0:p.id];this.logging&&Logger.log({message:"Game started "+(p?"by "+p.name:""),color:Global_1.Colors.Haxball});for(let i=0;i<this.discCount-this.players.teams().size;i++)this._discs.push(new Disc_1.Disc(this,i));this._runEvent("onGameStart",func,p)}}set onGameStop(func){this._room.onGameStop=bP=>{this._paused=!1;bP=this.players[null==bP?void 0:bP.id];this.logging&&Logger.log({message:"Game stopped "+(bP?"by "+bP.name:""),color:Global_1.Colors.Haxball}),this._discs=[],this._runEvent("onGameStop",func,bP)}}set onPlayerAdminChange(func){this._room.onPlayerAdminChange=(cP,bP)=>{cP=this.players[cP.id],bP=this.players[null==bP?void 0:bP.id];this.logging&&(cP.admin?Logger.log({message:cP.name+" was given admin rights "+(bP?"by "+bP.name:""),color:Global_1.Colors.Haxball}):Logger.log({message:cP.name+"'s admin rights were taken away "+(bP?"by "+bP.name:""),color:Global_1.Colors.Haxball})),this._runEvent("onPlayerAdminChange",func,cP,bP)}}set onPlayerTeamChange(func){this._room.onPlayerTeamChange=(cP,bP)=>{cP=this.players[cP.id],bP=this.players[null==bP?void 0:bP.id];if(this.logging){let team="";cP.team===Global_1.Teams.Red&&(team="Red"),cP.team===Global_1.Teams.Blue&&(team="Blue"),cP.team===Global_1.Teams.Spectators&&(team="Spectators"),Logger.log({message:`${cP.name} was moved to ${team} `+(bP?"by "+bP.name:""),color:Global_1.Colors.Haxball})}this._runEvent("onPlayerTeamChange",func,cP,bP)}}set onGamePause(func){this._room.onGamePause=bP=>{this._paused=!0;bP=this.players[null==bP?void 0:bP.id];this.logging&&Logger.log({message:"Game paused "+(bP?"by "+bP.name:""),color:Global_1.Colors.Haxball}),this._runEvent("onGamePause",func,bP)}}set onGameUnpause(func){this._room.onGameUnpause=bP=>{this._paused=!1,this._runEvent("onGameUnpause",func,this.players[null==bP?void 0:bP.id])}}set onStadiumChange(func){this._room.onStadiumChange=(newStadiumName,bP)=>{bP=this.players[null==bP?void 0:bP.id];this.logging&&Logger.log({message:`Stadium "${newStadiumName}" loaded `+(bP?"by "+bP.name:""),color:Global_1.Colors.Haxball}),this._runEvent("onStadiumChange",func,newStadiumName,bP)}}set onPlayerGeoLocationFetch(func){this._onPlayerGeoLocationFetchFunction=player=>this._runEvent("onPlayerGeoLocationFetch",func,player)}set onPlayerRunCommand(func){this._onPlayerRunCommandFunction=(player,command,info)=>this._runEvent("onPlayerRunCommand",func,player,command,info)}set noPermissionMessage(message){this._insufficientPermissionsMessage=message}set commandCooldownMessage(message){this._playerCommandCooldownMessage=message}get players(){return this._players}get discs(){return this._discs}get scores(){return this._room.getScores()}get ball(){return this.discs[0]}get discCount(){return this._room.getDiscCount()}get commands(){return this._commands.list}get password(){return this._password}get prefix(){return this._commands.prefix}set prefix(value){this._commands.prefix=value}get plugins(){return this._plugins}get native(){return this._room}get paused(){return this._paused}command(options){this._commands.add(new Command_1.Command(options))}removeCommand(name){this._commands.remove(name)}plugin(Plugin,options){if(!Reflect.getMetadata("her:plugin",Plugin))throw new Error("The given argument is not a valid plugin.");const plugin=new Plugin(this,null==options?void 0:options.settings,(original,name,...params)=>{if(null!=options&&options.languagePack)for(var[strName,str]of Object.entries(options.languagePack))if(strName===name)return[str,...params].reduce((p,c)=>p.replace(/%%/,c));return[original,...params].reduce((p,c)=>p.replace(/%%/,c))});var commands=Reflect.getMetadata("her:commands",Plugin.prototype)||[],events=Reflect.getMetadata("her:events",Plugin.prototype)||[];return events.map(e=>(e.func=e.func.bind(plugin),e)),commands.forEach(command=>{command.func=command.func.bind(plugin),this.command(command)}),this._plugins.push({name:Plugin.name,commands:commands,events:events}),this}removePlugin(pluginOrName){const name="string"!=typeof pluginOrName?pluginOrName.name:pluginOrName;null!=(pluginOrName=this._plugins.find(p=>p.name===name))&&pluginOrName.commands.forEach(c=>{var cmd=this._commands.get(c.name);cmd&&c.name===(null==cmd?void 0:cmd.name)&&c.func===(null==cmd?void 0:cmd.func)&&this._commands.remove(c.name)}),this._plugins=this._plugins.filter(p=>p.name!==name)}isGameInProgress(){return null!=this.scores}chat(message,playerID){var _a;if(playerID&&null!=(_a=this.players[playerID])&&_a.canReadChat&&this._room.sendChat(message,playerID),!playerID)for(const player of this.players)player.canReadChat&&this._room.sendChat(message,player.id)}unban(id){this._room.clearBan(id)}unbanAll(){this._room.clearBans()}setScoreLimit(limit){this._room.setScoreLimit(limit)}setTimeLimit(limit){this._room.setTimeLimit(limit)}setStadium(stadium){"object"==typeof stadium&&this._room.setCustomStadium(JSON.stringify(stadium)),"string"==typeof stadium&&this._room.setDefaultStadium(stadium)}lockTeams(){this._room.setTeamsLock(!0)}unlockTeams(){this._room.setTeamsLock(!1)}setTeamColors(team,teamColors){"all"===team?(this._room.setTeamColors(Global_1.Teams.Red,teamColors.angle,teamColors.textColor,teamColors.colors),this._room.setTeamColors(Global_1.Teams.Blue,teamColors.angle,teamColors.textColor,teamColors.colors)):this._room.setTeamColors(team,teamColors.angle,teamColors.textColor,teamColors.colors)}start(){this._room.startGame()}stop(){this._room.stopGame()}pause(){this._room.pauseGame(!0)}unpause(){this._room.pauseGame(!1)}startRecording(){this._room.startRecording()}stopRecording(){return this._room.stopRecording()}setPassword(password){this._password=password,this._room.setPassword(password)}clearPassword(){this._password=null,this._room.setPassword(null)}enableCaptcha(){this._room.setRequireRecaptcha(!0)}disableCaptcha(){this._room.setRequireRecaptcha(!1)}reorderPlayers(ids,moveToTop){this._room.reorderPlayers(ids,moveToTop)}send(options){var _a;if(options.targetID&&null!=(_a=this.players[options.targetID])&&_a.canReadChat&&this._room.sendAnnouncement(options.message,options.targetID,options.color,options.style,options.sound),!options.targetID)for(const player of this.players)player.canReadChat&&this._room.sendAnnouncement(options.message,player.id,options.color,options.style,options.sound);this.logging&&(options.targetID&&null!=(_a=this.players[options.targetID])&&_a.canReadChat?Logger.direct(options,this.players[options.targetID]):Logger.announcement(options))}setKickRateLimit(min,rate,burst){this._room.setKickRateLimit(min,rate,burst)}}},{"./Command":5,"./CommandArgument":6,"./CommandList":7,"./ConnectionHistory":8,"./Disc":9,"./Global":10,"./Logger":11,"./Player":12,"./PlayerList":13,"./Settings":18,"./types":21,"@abraham/reflection":1,events:2}],18:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Settings=void 0;class Settings{[Symbol.iterator](){let i=0;const arr=Object.values(this);return{next:()=>({value:arr[i++],done:i>arr.length})}}}exports.Settings=Settings},{}],19:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0})},{}],20:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){o[k2=void 0===k2?k:k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)},__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Logger=void 0,__exportStar(require("./Room"),exports),__exportStar(require("./Command"),exports),__exportStar(require("./CommandList"),exports),__exportStar(require("./Player"),exports),__exportStar(require("./PlayerList"),exports),__exportStar(require("./CommandList"),exports),__exportStar(require("./Disc"),exports),__exportStar(require("./Global"),exports),exports.Logger=__importStar(require("./Logger")),__exportStar(require("./Plugin"),exports),__exportStar(require("./Color"),exports)},{"./Color":4,"./Command":5,"./CommandList":7,"./Disc":9,"./Global":10,"./Logger":11,"./Player":12,"./PlayerList":13,"./Plugin":14,"./Room":17}],21:[function(require,module,exports){},{}],22:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var wrapIdbValue=require("./wrap-idb-value.js");const readMethods=["get","getKey","getAll","getAllKeys","count"],writeMethods=["put","add","delete","clear"],cachedMethods=new Map;function getMethod(target,prop){if(target instanceof IDBDatabase&&!(prop in target)&&"string"==typeof prop){if(cachedMethods.get(prop))return cachedMethods.get(prop);const targetFuncName=prop.replace(/FromIndex$/,""),useIndex=prop!==targetFuncName,isWrite=writeMethods.includes(targetFuncName);return targetFuncName in(useIndex?IDBIndex:IDBObjectStore).prototype&&(isWrite||readMethods.includes(targetFuncName))?(target=async function(storeName,...args){storeName=this.transaction(storeName,isWrite?"readwrite":"readonly");let target=storeName.store;return useIndex&&(target=target.index(args.shift())),(await Promise.all([target[targetFuncName](...args),isWrite&&storeName.done]))[0]},cachedMethods.set(prop,target),target):void 0}}wrapIdbValue.replaceTraps(oldTraps=>({...oldTraps,get:(target,prop,receiver)=>getMethod(target,prop)||oldTraps.get(target,prop,receiver),has:(target,prop)=>!!getMethod(target,prop)||oldTraps.has(target,prop)})),exports.unwrap=wrapIdbValue.unwrap,exports.wrap=wrapIdbValue.wrap,exports.deleteDB=function(name,{blocked}={}){return name=indexedDB.deleteDatabase(name),blocked&&name.addEventListener("blocked",()=>blocked()),wrapIdbValue.wrap(name).then(()=>{})},exports.openDB=function(name,version,{blocked,upgrade,blocking,terminated}={}){const request=indexedDB.open(name,version);return name=wrapIdbValue.wrap(request),upgrade&&request.addEventListener("upgradeneeded",event=>{upgrade(wrapIdbValue.wrap(request.result),event.oldVersion,event.newVersion,wrapIdbValue.wrap(request.transaction))}),blocked&&request.addEventListener("blocked",()=>blocked()),name.then(db=>{terminated&&db.addEventListener("close",()=>terminated()),blocking&&db.addEventListener("versionchange",()=>blocking())}).catch(()=>{}),name}},{"./wrap-idb-value.js":23}],23:[function(require,module,exports){"use strict";const instanceOfAny=(object,constructors)=>constructors.some(c=>object instanceof c);let idbProxyableTypes,cursorAdvanceMethods;const cursorRequestMap=new WeakMap,transactionDoneMap=new WeakMap,transactionStoreNamesMap=new WeakMap,transformCache=new WeakMap,reverseTransformCache=new WeakMap;let idbProxyTraps={get(target,prop,receiver){if(target instanceof IDBTransaction){if("done"===prop)return transactionDoneMap.get(target);if("objectStoreNames"===prop)return target.objectStoreNames||transactionStoreNamesMap.get(target);if("store"===prop)return receiver.objectStoreNames[1]?void 0:receiver.objectStore(receiver.objectStoreNames[0])}return wrap(target[prop])},set(target,prop,value){return target[prop]=value,!0},has(target,prop){return target instanceof IDBTransaction&&("done"===prop||"store"===prop)||prop in target}};function wrapFunction(func){return func!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(cursorAdvanceMethods=cursorAdvanceMethods||[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey]).includes(func)?function(...args){return func.apply(unwrap(this),args),wrap(cursorRequestMap.get(this))}:function(...args){return wrap(func.apply(unwrap(this),args))}:function(storeNames,...args){args=func.call(unwrap(this),storeNames,...args);return transactionStoreNamesMap.set(args,storeNames.sort?storeNames.sort():[storeNames]),wrap(args)}}function transformCachableValue(value){var tx,done;return"function"==typeof value?wrapFunction(value):(value instanceof IDBTransaction&&(tx=value,transactionDoneMap.has(tx)||(done=new Promise((resolve,reject)=>{const unlisten=()=>{tx.removeEventListener("complete",complete),tx.removeEventListener("error",error),tx.removeEventListener("abort",error)},complete=()=>{resolve(),unlisten()},error=()=>{reject(tx.error||new DOMException("AbortError","AbortError")),unlisten()};tx.addEventListener("complete",complete),tx.addEventListener("error",error),tx.addEventListener("abort",error)}),transactionDoneMap.set(tx,done))),instanceOfAny(value,idbProxyableTypes=idbProxyableTypes||[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])?new Proxy(value,idbProxyTraps):value)}function wrap(value){var request,promise;return value instanceof IDBRequest?(request=value,(promise=new Promise((resolve,reject)=>{const unlisten=()=>{request.removeEventListener("success",success),request.removeEventListener("error",error)},success=()=>{resolve(wrap(request.result)),unlisten()},error=()=>{reject(request.error),unlisten()};request.addEventListener("success",success),request.addEventListener("error",error)})).then(value=>{value instanceof IDBCursor&&cursorRequestMap.set(value,request)}).catch(()=>{}),reverseTransformCache.set(promise,request),promise):transformCache.has(value)?transformCache.get(value):((promise=transformCachableValue(value))!==value&&(transformCache.set(value,promise),reverseTransformCache.set(promise,value)),promise)}const unwrap=value=>reverseTransformCache.get(value);exports.instanceOfAny=instanceOfAny,exports.replaceTraps=function(callback){idbProxyTraps=callback(idbProxyTraps)},exports.reverseTransformCache=reverseTransformCache,exports.unwrap=unwrap,exports.wrap=wrap},{}],24:[function(require,module,exports){"use strict";var __createBinding=Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&("get"in desc?m.__esModule:!desc.writable&&!desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){o[k2=void 0===k2?k:k2]=m[k]},__setModuleDefault=Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v},__importStar=function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},haxball_extended_room_1=(Object.defineProperty(exports,"__esModule",{value:!0}),require("haxball-extended-room")),hockey_json_1=__importDefault(require("./maps/hockey.json")),insideBlueBox_1=__importDefault(require("./functions/insideBlueBox")),insideRedBox_1=__importDefault(require("./functions/insideRedBox")),Commands_1=__importDefault(require("./commands/Commands")),touchedDisc_1=__importDefault(require("./functions/touchedDisc")),penaltyDetected_1=__importDefault(require("./functions/penaltyDetected")),players_1=require("./players/players"),redTeam_1=require("./players/redTeam"),blueTeam_1=require("./players/blueTeam"),goalieIllegalTouch_1=__importStar(require("./functions/goalieIllegalTouch")),detectLastTeamTouch_1=__importDefault(require("./functions/detectLastTeamTouch")),illegalTouchInRedBox_1=__importDefault(require("./functions/illegalTouchInRedBox")),illegalTouchInBlueBox_1=__importDefault(require("./functions/illegalTouchInBlueBox")),kickoffAfterMissedPenalty_1=__importDefault(require("./functions/kickoffAfterMissedPenalty")),kickoff_1=__importDefault(require("./functions/kickoff")),room=new haxball_extended_room_1.Room({public:!1,maxPlayers:16,roomName:"Hockey com bot"});room.onPlayerJoin=function(player){0==room.players.admins().size&&(player.admin=!0,room.setStadium(hockey_json_1.default)),player.admin=!0,players_1.playersList.push(player)},room.onPlayerLeave=function(player){0==room.players.admins().size&&(player.id==players_1.playersList[0].id?players_1.playersList[1].admin=!0:players_1.playersList[0].admin=!0),player.settings.goalie="",player.clearAvatar(),(0,players_1.removePlayer)(player.id)},room.onPlayerTeamChange=function(player){player.settings.goalie="",player.clearAvatar(),(0,redTeam_1.updateRedTeamPlayers)(room),(0,blueTeam_1.updateBlueTeamPlayers)(room)},room.onGameTick=function(){for(var i=0;i<redTeam_1.redTeam.length;i++)(0,goalieIllegalTouch_1.default)(redTeam_1.redTeam[i],room),(0,illegalTouchInRedBox_1.default)(redTeam_1.redTeam[i],room),(0,touchedDisc_1.default)(room,redTeam_1.redTeam[i]);for(var _i=0;_i<blueTeam_1.blueTeam.length;_i++)(0,goalieIllegalTouch_1.default)(blueTeam_1.blueTeam[_i],room),(0,illegalTouchInBlueBox_1.default)(blueTeam_1.blueTeam[_i],room),(0,touchedDisc_1.default)(room,blueTeam_1.blueTeam[_i]);"penred"===room.settings.mode?760<=room.discs[0].x?!(97<room.discs[0].y||room.discs[0].y<-97)||room.settings.penalty||room.settings.disabledPenaltys||(0,kickoffAfterMissedPenalty_1.default)(500,room):!(210<room.discs[0].y||room.discs[0].y<-210||room.discs[0].xspeed<0&&room.discs[0].x<760&&!(0,insideBlueBox_1.default)(room.discs[0].x,room.discs[0].y))||room.settings.penalty||room.settings.disabledPenaltys||(0,kickoffAfterMissedPenalty_1.default)(500,room):"penblue"===room.settings.mode&&(room.discs[0].x<=-760?!(97<room.discs[0].y||room.discs[0].y<-97)||room.settings.penalty||room.settings.disabledPenaltys||(0,kickoffAfterMissedPenalty_1.default)(-500,room):!(210<room.discs[0].y||room.discs[0].y<-210||0<room.discs[0].xspeed&&-760<room.discs[0].x&&!(0,insideRedBox_1.default)(room.discs[0].x,room.discs[0].y))||room.settings.penalty||room.settings.disabledPenaltys||(0,kickoffAfterMissedPenalty_1.default)(-500,room))},room.onPlayerChat=function(player,message){return message.startsWith("!")?((0,Commands_1.default)(message,player,room),!1):!room.settings.chatmuted&&void 0},room.onPlayerBallKick=function(player){1==player.team?player.settings.goalie?(player.settings.goalie||player.settings.penaltyGoalie)&&(0,goalieIllegalTouch_1.goalieOutsideBox)(player)&&(0,penaltyDetected_1.default)(player,"O animal tocou no disco fora da area de goleiro apos o toque do adversário",room,1):(0,insideRedBox_1.default)(player.x,player.y)&&(0,penaltyDetected_1.default)(player,"O animal pegou a bola dentro da área sem ser goleiro!",room,1):2==player.team&&(player.settings.goalie?(player.settings.goalie||player.settings.penaltyGoalie)&&(0,goalieIllegalTouch_1.goalieOutsideBox)(player)&&(0,penaltyDetected_1.default)(player,"O animal tocou no disco fora da area de goleiro apos o toque do adversário",room,2):(0,insideBlueBox_1.default)(player.x,player.y)&&(0,penaltyDetected_1.default)(player,"O animal pegou a bola dentro da área sem ser goleiro!",room,2)),(0,detectLastTeamTouch_1.default)(player.team)},room.onTeamGoal=function(team){room.settings.penalty&&(room.send({message:"Gol! Segue o jogo!",color:1==team?haxball_extended_room_1.Colors.Crimson:haxball_extended_room_1.Colors.CornflowerBlue,style:"bold"}),room.settings.penalty=0),room.settings.disabledPenaltys=!0},room.onGameStart=function(){(0,kickoff_1.default)(room),room.pause(),room.send({message:"Cada time tem direito a um GO.... digite !go para ser o goleiro",color:haxball_extended_room_1.Colors.Gold,style:"bold"}),room.send({message:"Ou joga sem goleiro e fdc eu não ligo...",color:haxball_extended_room_1.Colors.Gray,style:"italic"})},room.onPositionsReset=function(){(0,kickoff_1.default)(room)}},{"./commands/Commands":25,"./functions/detectLastTeamTouch":27,"./functions/goalieIllegalTouch":29,"./functions/illegalTouchInBlueBox":30,"./functions/illegalTouchInRedBox":31,"./functions/insideBlueBox":32,"./functions/insideRedBox":33,"./functions/kickoff":34,"./functions/kickoffAfterMissedPenalty":35,"./functions/penaltyDetected":36,"./functions/touchedDisc":37,"./maps/hockey.json":38,"./players/blueTeam":39,"./players/players":40,"./players/redTeam":41,"haxball-extended-room":20}],25:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},haxball_extended_room_1=(Object.defineProperty(exports,"__esModule",{value:!0}),require("haxball-extended-room")),checkForGoaliesetting_1=__importDefault(require("../functions/checkForGoaliesetting")),penaltyDetected_1=require("../functions/penaltyDetected"),kickoffAfterMissedPenalty_1=__importDefault(require("../functions/kickoffAfterMissedPenalty")),kickoff_1=__importDefault(require("../functions/kickoff"));exports.default=function(message,player,room){switch(message.toLowerCase()){case"!go":case"!gk":case"!goalie":1==player.team?(0,checkForGoaliesetting_1.default)(room.players.red(),1)?player.reply({message:"Ja tem goleiro no Red",color:haxball_extended_room_1.Colors.HotPink}):(player.settings.goalie=1,player.setAvatar("go"),player.reply({message:"Para remover a posição de goalie digite !li",color:haxball_extended_room_1.Colors.HotPink}),room.send({message:"".concat(player.name," é o Goalie do Red"),color:haxball_extended_room_1.Colors.Crimson})):2==player.team?(0,checkForGoaliesetting_1.default)(room.players.blue(),2)?player.reply({message:"Ja tem goleiro no Blue",color:haxball_extended_room_1.Colors.DodgerBlue}):(player.settings.goalie=2,player.setAvatar("go"),player.reply({message:"Para remover a posição de goalie digite !li",color:haxball_extended_room_1.Colors.DodgerBlue}),room.send({message:"".concat(player.name," é o Goalie do Blue"),color:haxball_extended_room_1.Colors.CornflowerBlue})):player.reply({message:"Tu ta no spec doidão",color:haxball_extended_room_1.Colors.DarkGoldenRod});break;case"!li":player.settings.goalie?(player.settings.goalie="",player.clearAvatar()):player.reply({message:"Tu nem era goleiro.. xiu",color:haxball_extended_room_1.Colors.DarkGoldenRod});break;case"!penred":player.admin&&(0,penaltyDetected_1.setPenaltyRed)(room);break;case"!penblue":player.admin&&(0,penaltyDetected_1.setPenaltyBlue)(room);break;case"!help":case"!commands":player.reply({message:"Comandos disponiveis: !go, !li, !penred, !penblue, !help, !disc, !resetball,!rules",color:haxball_extended_room_1.Colors.DarkGoldenRod});break;case"!resetball":case"!reset":player.admin&&(room.discs[0].x<0?(0,kickoffAfterMissedPenalty_1.default)(-500,room):0<room.discs[0].x?(0,kickoffAfterMissedPenalty_1.default)(500,room):(0,kickoff_1.default)(room));break;case"!disc":case"!discord":player.reply({message:"https://discord.gg/SHbvtrt8",color:haxball_extended_room_1.Colors.Azure,style:"bold"});break;case"!rules":case"!regras":player.reply({message:"Cada time tem direito a um(a) Goalie.",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"Goalie - Só pode pegar o disco dentro de sua própria área:",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"         - na zona de ataque (à frente do meio-campo),",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"         - na zona atrás de seu próprio gol,",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"         - ou após o toque de um(a) companheiro(a) de time.",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"Jogador(a) de linha - Não pode pegar o disco dentro da área defensiva,",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"Não pode interferir com o(a) goleiro(a) adversário(a) caso esteja dentro de sua própria área.",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"Qualquer infração causada resultará em um 'penal' para o adversário.",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"Obs.: 1 pixel do(a) jogador(a) dentro da área é considerado dentro.",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"         1 pixel do(a) Goalie à frente do meio-campo ou atrás do gol também é o suficiente para não ser penalizado(a).",color:haxball_extended_room_1.Colors.MistyRose});break;case"!bb":player.kick();break;default:player.reply({message:"Não entendi teu comando brother",color:haxball_extended_room_1.Colors.DarkGoldenRod})}}},{"../functions/checkForGoaliesetting":26,"../functions/kickoff":34,"../functions/kickoffAfterMissedPenalty":35,"../functions/penaltyDetected":36,"haxball-extended-room":20}],26:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(players,teamId){for(var playerId in players){playerId=players[playerId];if(playerId.settings&&playerId.settings.goalie===teamId)return!0}return!1}},{}],27:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.lastTeamTouched=void 0,exports.lastTeamTouched=0,exports.default=function(team){exports.lastTeamTouched=team}},{}],28:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(x1,y1,x2,y2){return Math.sqrt(Math.pow(x2-x1,2)+Math.pow(y2-y1,2))}},{}],29:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},touchedDisc_1=(Object.defineProperty(exports,"__esModule",{value:!0}),exports.goalieOutsideBox=void 0,__importDefault(require("./touchedDisc"))),penaltyDetected_1=__importDefault(require("./penaltyDetected")),detectLastTeamTouch_1=require("./detectLastTeamTouch"),insideRedBox_1=__importDefault(require("./insideRedBox")),insideBlueBox_1=__importDefault(require("./insideBlueBox"));function goalieOutsideBox(player){switch(player.team){case 1:return!(0,insideRedBox_1.default)(player.x,player.y)&&player.x<16&&-744<=player.x;case 2:return!(0,insideBlueBox_1.default)(player.x,player.y)&&-16<player.x&&player.x<=744;default:return!1}}exports.default=function(player,room){var previousTouchOnDisc=detectLastTeamTouch_1.lastTeamTouched;(player.settings.goalie||player.settings.penaltyGoalie)&&(0,touchedDisc_1.default)(room,player)&&goalieOutsideBox(player)&&previousTouchOnDisc!==player.team&&(2===player.team?(0,penaltyDetected_1.default)(player,"O animal tocou no disco fora da area de goleiro apos o toque do adversário",room,2):1===player.team&&(0,penaltyDetected_1.default)(player,"O animal tocou no disco fora da area de goleiro apos o toque do adversário",room,1))},exports.goalieOutsideBox=goalieOutsideBox},{"./detectLastTeamTouch":27,"./insideBlueBox":32,"./insideRedBox":33,"./penaltyDetected":36,"./touchedDisc":37}],30:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},insideBlueBox_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importDefault(require("./insideBlueBox"))),penaltyDetected_1=__importDefault(require("./penaltyDetected")),touchedDisc_1=__importDefault(require("./touchedDisc"));exports.default=function(player,room){!(0,insideBlueBox_1.default)(player.x,player.y)||player.settings.goalie||2===player.settings.penaltyGoalie||(0,touchedDisc_1.default)(room,player)&&(0,penaltyDetected_1.default)(player,"O animal pegou a bola dentro da área sem ser goleiro!",room,2)}},{"./insideBlueBox":32,"./penaltyDetected":36,"./touchedDisc":37}],31:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},insideRedBox_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importDefault(require("./insideRedBox"))),penaltyDetected_1=__importDefault(require("./penaltyDetected")),touchedDisc_1=__importDefault(require("./touchedDisc"));exports.default=function(player,room){!(0,insideRedBox_1.default)(player.x,player.y)||player.settings.goalie||1===player.settings.penaltyGoalie||(0,touchedDisc_1.default)(room,player)&&(0,penaltyDetected_1.default)(player,"O animal pegou a bola dentro da área sem ser goleiro!",room,1)}},{"./insideRedBox":33,"./penaltyDetected":36,"./touchedDisc":37}],32:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},distanceBetweenDots_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importDefault(require("./distanceBetweenDots")));exports.default=function(x,y){return!(760<x)&&(0,distanceBetweenDots_1.default)(x,y,757,0)<=124}},{"./distanceBetweenDots":28}],33:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},distanceBetweenDots_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importDefault(require("./distanceBetweenDots")));exports.default=function(x,y){return!(x<-760)&&(0,distanceBetweenDots_1.default)(x,y,-757,0)<=124}},{"./distanceBetweenDots":28}],34:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var blueTeam_1=require("../players/blueTeam"),redTeam_1=require("../players/redTeam");exports.default=function(room){var redPlayerSorted=0,bluePlayerSorted=0,disc=(room.settings.mode="game",room.settings.disabledPenaltys=!1,room.discs[0]);for(disc.x=0,disc.y=0,disc.xspeed=0,disc.yspeed=0;0<redTeam_1.redTeam.length;){var randomIndex=Math.floor(Math.random()*redTeam_1.redTeam.length),randomIndex=redTeam_1.redTeam.splice(randomIndex,1)[0];randomIndex.settings.penaltyGoalie&&(randomIndex.clearAvatar(),randomIndex.settings.penaltyGoalie=0),randomIndex.settings.goalie?(randomIndex.x=-666,randomIndex.y=0,randomIndex.xspeed=0,randomIndex.yspeed=0):(0==redPlayerSorted?(randomIndex.x=-40,randomIndex.y=0,randomIndex.xspeed=0,randomIndex.yspeed=0):1==redPlayerSorted?(randomIndex.x=-20,randomIndex.y=-150,randomIndex.xspeed=0,randomIndex.yspeed=0):2==redPlayerSorted?(randomIndex.x=-20,randomIndex.y=150,randomIndex.xspeed=0,randomIndex.yspeed=0):3==redPlayerSorted?(randomIndex.x=-150,randomIndex.y=0,randomIndex.xspeed=0,randomIndex.yspeed=0):4==redPlayerSorted&&(randomIndex.x=-600,randomIndex.y=0,randomIndex.xspeed=0,randomIndex.yspeed=0),redPlayerSorted++)}for((0,redTeam_1.updateRedTeamPlayers)(room);0<blueTeam_1.blueTeam.length;){var _randomIndex=Math.floor(Math.random()*blueTeam_1.blueTeam.length),_randomIndex=blueTeam_1.blueTeam.splice(_randomIndex,1)[0];_randomIndex.settings.penaltyGoalie&&(_randomIndex.clearAvatar(),_randomIndex.settings.penaltyGoalie=0),_randomIndex.settings.goalie?(_randomIndex.x=666,_randomIndex.y=0,_randomIndex.xspeed=0,_randomIndex.yspeed=0):(0==bluePlayerSorted?(_randomIndex.x=40,_randomIndex.y=0,_randomIndex.xspeed=0,_randomIndex.yspeed=0):1==bluePlayerSorted?(_randomIndex.x=20,_randomIndex.y=150,_randomIndex.xspeed=0,_randomIndex.yspeed=0):2==bluePlayerSorted?(_randomIndex.x=20,_randomIndex.y=-150,_randomIndex.xspeed=0,_randomIndex.yspeed=0):3==bluePlayerSorted?(_randomIndex.x=150,_randomIndex.y=0,_randomIndex.xspeed=0,_randomIndex.yspeed=0):4==bluePlayerSorted&&(_randomIndex.x=600,_randomIndex.y=0,_randomIndex.xspeed=0,_randomIndex.yspeed=0),bluePlayerSorted++)}(0,blueTeam_1.updateBlueTeamPlayers)(room)}},{"../players/blueTeam":39,"../players/redTeam":41}],35:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var haxball_extended_room_1=require("haxball-extended-room"),redTeam_1=require("../players/redTeam"),blueTeam_1=require("../players/blueTeam");exports.default=function(xAxis,room){var redPlayerSorted=0,bluePlayerSorted=0,topOrBottom=(room.settings.mode="game",room.pause(),room.send({message:"Penalty perdido!",color:0<xAxis?haxball_extended_room_1.Colors.Crimson:haxball_extended_room_1.Colors.CornflowerBlue}),room.unpause(),.5<=Math.random()?1:-1),disc=room.discs[0];switch(xAxis){case 500:for(disc.x=500,disc.y=210*topOrBottom,disc.xspeed=0,disc.yspeed=0;0<redTeam_1.redTeam.length;){var randomIndex=Math.floor(Math.random()*redTeam_1.redTeam.length),randomIndex=redTeam_1.redTeam.splice(randomIndex,1)[0];randomIndex.settings.goalie?(randomIndex.x=0,randomIndex.y=130*topOrBottom,randomIndex.xspeed=0,randomIndex.yspeed=0):(0==redPlayerSorted?(randomIndex.x=460,randomIndex.y=210*topOrBottom,randomIndex.xspeed=0,randomIndex.yspeed=0):1==redPlayerSorted?(randomIndex.x=390,randomIndex.y=100*topOrBottom,randomIndex.xspeed=0,randomIndex.yspeed=0):2==redPlayerSorted?(randomIndex.x=380,randomIndex.y=310*topOrBottom,randomIndex.xspeed=0,randomIndex.yspeed=0):3==redPlayerSorted?(randomIndex.x=220,randomIndex.y=210*topOrBottom,randomIndex.xspeed=0,randomIndex.yspeed=0):4==redPlayerSorted&&(randomIndex.x=0,randomIndex.y=130*topOrBottom,randomIndex.xspeed=0,randomIndex.yspeed=0),redPlayerSorted++)}for((0,redTeam_1.updateRedTeamPlayers)(room);0<blueTeam_1.blueTeam.length;){var _randomIndex=Math.floor(Math.random()*blueTeam_1.blueTeam.length),_randomIndex=blueTeam_1.blueTeam.splice(_randomIndex,1)[0];_randomIndex.settings.penaltyGoalie&&(_randomIndex.clearAvatar(),_randomIndex.settings.penaltyGoalie=0),_randomIndex.settings.goalie?(_randomIndex.x=670,_randomIndex.y=55*topOrBottom,_randomIndex.xspeed=0,_randomIndex.yspeed=0):(0==bluePlayerSorted?(_randomIndex.x=540,_randomIndex.y=210*topOrBottom,_randomIndex.xspeed=0,_randomIndex.yspeed=0):1==bluePlayerSorted?(_randomIndex.x=610,_randomIndex.y=100*topOrBottom,_randomIndex.xspeed=0,_randomIndex.yspeed=0):2==bluePlayerSorted?(_randomIndex.x=620,_randomIndex.y=310*topOrBottom,_randomIndex.xspeed=0,_randomIndex.yspeed=0):3==bluePlayerSorted?(_randomIndex.x=510,_randomIndex.y=50*topOrBottom,_randomIndex.xspeed=0,_randomIndex.yspeed=0):4==bluePlayerSorted&&(_randomIndex.x=640,_randomIndex.y=130*topOrBottom,_randomIndex.xspeed=0,_randomIndex.yspeed=0),bluePlayerSorted++)}(0,blueTeam_1.updateBlueTeamPlayers)(room);break;case-500:for(disc.x=-500,disc.y=210*topOrBottom,disc.xspeed=0,disc.yspeed=0;0<blueTeam_1.blueTeam.length;){var _randomIndex2=Math.floor(Math.random()*blueTeam_1.blueTeam.length),_randomIndex2=blueTeam_1.blueTeam.splice(_randomIndex2,1)[0];_randomIndex2.settings.goalie?(_randomIndex2.x=0,_randomIndex2.y=130*topOrBottom,_randomIndex2.xspeed=0,_randomIndex2.yspeed=0):(0==bluePlayerSorted?(_randomIndex2.x=-460,_randomIndex2.y=210*topOrBottom,_randomIndex2.xspeed=0,_randomIndex2.yspeed=0):1==bluePlayerSorted?(_randomIndex2.x=-390,_randomIndex2.y=100*topOrBottom,_randomIndex2.xspeed=0,_randomIndex2.yspeed=0):2==bluePlayerSorted?(_randomIndex2.x=-380,_randomIndex2.y=310*topOrBottom,_randomIndex2.xspeed=0,_randomIndex2.yspeed=0):3==bluePlayerSorted?(_randomIndex2.x=-220,_randomIndex2.y=210*topOrBottom,_randomIndex2.xspeed=0,_randomIndex2.yspeed=0):4==bluePlayerSorted&&(_randomIndex2.x=0,_randomIndex2.y=130*topOrBottom,_randomIndex2.xspeed=0,_randomIndex2.yspeed=0),bluePlayerSorted++)}for((0,blueTeam_1.updateBlueTeamPlayers)(room);0<redTeam_1.redTeam.length;){var _randomIndex3=Math.floor(Math.random()*redTeam_1.redTeam.length),_randomIndex3=redTeam_1.redTeam.splice(_randomIndex3,1)[0];_randomIndex3.settings.penaltyGoalie&&(_randomIndex3.settings.penaltyGoalie=0,_randomIndex3.clearAvatar()),_randomIndex3.settings.goalie?(_randomIndex3.x=-670,_randomIndex3.y=55*topOrBottom,_randomIndex3.xspeed=0,_randomIndex3.yspeed=0):(0==redPlayerSorted?(_randomIndex3.x=-540,_randomIndex3.y=210*topOrBottom,_randomIndex3.xspeed=0,_randomIndex3.yspeed=0):1==redPlayerSorted?(_randomIndex3.x=-610,_randomIndex3.y=100*topOrBottom,_randomIndex3.xspeed=0,_randomIndex3.yspeed=0):2==redPlayerSorted?(_randomIndex3.x=-620,_randomIndex3.y=310*topOrBottom,_randomIndex3.xspeed=0,_randomIndex3.yspeed=0):3==redPlayerSorted?(_randomIndex3.x=-510,_randomIndex3.y=50*topOrBottom,_randomIndex3.xspeed=0,_randomIndex3.yspeed=0):4==redPlayerSorted&&(_randomIndex3.x=-640,_randomIndex3.y=130*topOrBottom,_randomIndex3.xspeed=0,_randomIndex3.yspeed=0),redPlayerSorted++)}(0,redTeam_1.updateRedTeamPlayers)(room)}}},{"../players/blueTeam":39,"../players/redTeam":41,"haxball-extended-room":20}],36:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},haxball_extended_room_1=(Object.defineProperty(exports,"__esModule",{value:!0}),exports.setPenaltyBlue=exports.setPenaltyRed=void 0,require("haxball-extended-room")),redTeam_1=require("../players/redTeam"),blueTeam_1=require("../players/blueTeam"),checkForGoaliesetting_1=__importDefault(require("./checkForGoaliesetting"));function setPenaltyRed(room){room.settings.mode="penred";var disc=room.discs[0];disc.x=130,disc.y=0,disc.xspeed=0;for(var i=disc.yspeed=0;i<redTeam_1.redTeam.length;i++)redTeam_1.redTeam[i].x=-70,redTeam_1.redTeam[i].y=50*(i-2);if((0,checkForGoaliesetting_1.default)(room.players.blue(),2))for(var _i=0;_i<blueTeam_1.blueTeam.length;_i++)blueTeam_1.blueTeam[_i].settings.goalie?(blueTeam_1.blueTeam[_i].y=0,blueTeam_1.blueTeam[_i].x=666,blueTeam_1.blueTeam[_i].xspeed=666,blueTeam_1.blueTeam[_i].yspeed=666):blueTeam_1.blueTeam[_i].y=500;else{for(var _i2=0;_i2<blueTeam_1.blueTeam.length;_i2++)blueTeam_1.blueTeam[_i2].y=500;disc=Math.floor(Math.random()*redTeam_1.redTeam.length);blueTeam_1.blueTeam[disc].x=666,blueTeam_1.blueTeam[disc].y=0,blueTeam_1.blueTeam[disc].xspeed=666,blueTeam_1.blueTeam[disc].yspeed=666,blueTeam_1.blueTeam[disc].settings.penaltyGoalie=2,blueTeam_1.blueTeam[disc].setAvatar("g.")}}function setPenaltyBlue(room){room.settings.mode="penblue";var disc=room.discs[0];disc.x=-130,disc.y=0,disc.xspeed=0;for(var i=disc.yspeed=0;i<blueTeam_1.blueTeam.length;i++)blueTeam_1.blueTeam[i].x=70,blueTeam_1.blueTeam[i].y=50*(i-2);if((0,checkForGoaliesetting_1.default)(room.players.red(),1))for(var _i3=0;_i3<redTeam_1.redTeam.length;_i3++)redTeam_1.redTeam[_i3].settings.goalie?(redTeam_1.redTeam[_i3].y=0,redTeam_1.redTeam[_i3].x=-666,redTeam_1.redTeam[_i3].xspeed=-666,redTeam_1.redTeam[_i3].yspeed=-666):redTeam_1.redTeam[_i3].y=500;else{for(var _i4=0;_i4<redTeam_1.redTeam.length;_i4++)redTeam_1.redTeam[_i4].y=500;disc=Math.floor(Math.random()*redTeam_1.redTeam.length);redTeam_1.redTeam[disc].x=-666,redTeam_1.redTeam[disc].y=0,redTeam_1.redTeam[disc].xspeed=-666,redTeam_1.redTeam[disc].yspeed=-666,redTeam_1.redTeam[disc].settings.penaltyGoalie=1,redTeam_1.redTeam[disc].setAvatar("g.")}}exports.default=function(player,penalty,room,team){room.settings.penalty||room.settings.disabledPenaltys||(room.send({message:"Penalty by ".concat(player.name,"!"),color:1==team?haxball_extended_room_1.Colors.Crimson:haxball_extended_room_1.Colors.CornflowerBlue,style:"bold"}),room.send({message:"".concat(penalty),color:1==team?haxball_extended_room_1.Colors.Crimson:haxball_extended_room_1.Colors.CornflowerBlue,style:"bold"})),room.settings.penalty=team,room.settings.disabledPenaltys||setTimeout(function(){2===room.settings.penalty?setPenaltyRed(room):1===room.settings.penalty&&setPenaltyBlue(room),room.pause(),room.unpause(),room.settings.penalty=0},2e3)},exports.setPenaltyRed=setPenaltyRed,exports.setPenaltyBlue=setPenaltyBlue},{"../players/blueTeam":39,"../players/redTeam":41,"./checkForGoaliesetting":26,"haxball-extended-room":20}],37:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},detectLastTeamTouch_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importDefault(require("./detectLastTeamTouch")));exports.default=function(room,player){return room.discs[0].distanceTo(player)<1&&((0,detectLastTeamTouch_1.default)(player.team),!0)}},{"./detectLastTeamTouch":27}],38:[function(require,module,exports){module.exports={name:"NHL    Staples Center 1G from HaxMaps",width:1040,height:550,spawnDistance:170,bg:{type:"hockey",height:470,width:1e3,cornerRadius:200,kickOffRadius:0},vertexes:[{x:-800,y:-470,bCoef:-1.4,cMask:["ball"],curve:0,color:"CC3300"},{x:800,y:-470,bCoef:.5,cMask:["red"],curve:90},{x:-800,y:470,bCoef:-1.4,cMask:["ball"],color:"CC3300"},{x:800,y:470,bCoef:-1.4,cMask:["ball"],curve:-90},{x:-1e3,y:-270,bCoef:-1.4,cMask:["ball"],curve:0},{x:-1e3,y:270,bCoef:-1.4,cMask:["ball"],curve:0},{x:1e3,y:-270,bCoef:-1.4,cMask:["ball"],curve:90},{x:1e3,y:270,bCoef:-1.4,cMask:["ball"],curve:-90},{x:-757,y:97,bCoef:-.7,cMask:["ball"]},{x:-790,y:97,bCoef:-.7,cMask:["ball"],curve:-90,color:"000000"},{x:-757,y:-97,bCoef:-.7,cMask:["ball"]},{x:-790,y:-97,bCoef:-.7,cMask:["ball"],curve:90,color:"000000"},{x:-810,y:-70,bCoef:-.7,cMask:["ball"],curve:90,color:"000000"},{x:-810,y:70,bCoef:-.7,cMask:["ball"],curve:-90,color:"000000"},{x:-760,y:-467,cMask:["none"],color:"000000"},{x:-760,y:467,cMask:["none"],color:"000000"},{x:757,y:-97,bCoef:-.7,cMask:["ball"],p0:[760,-90],p1:[760,90]},{x:790,y:-97,bCoef:-.7,cMask:["ball"],curve:-90,color:"000000"},{x:757,y:97,bCoef:-.7,cMask:["ball"],p0:[760,-90],p1:[760,90]},{x:790,y:97,bCoef:-.7,cMask:["ball"],curve:90,color:"000000"},{x:810,y:70,bCoef:-.7,cMask:["ball"],curve:90,color:"000000"},{x:810,y:-70,bCoef:-.7,cMask:["ball"],curve:-90,color:"000000"},{x:760,y:-467,cMask:["none"],color:"000000"},{x:760,y:467,cMask:["none"],color:"000000"},{x:0,y:-470,cMask:["none"],color:"000000"},{x:0,y:470,cMask:["none"],color:"000000"},{x:-230,y:-470,cMask:["none"],color:"818181"},{x:-230,y:470,cMask:["none"],color:"818181"},{x:0,y:-130,cMask:["none"],color:"818181",curve:-180},{x:0,y:130,cMask:["none"],color:"818181",curve:-180},{x:-500,y:80,cMask:["none"],color:"000000",curve:-180},{x:-500,y:340,cMask:["none"],color:"000000",curve:-180},{x:500,y:-340,cMask:["none"],color:"000000",curve:-180},{x:500,y:-80,cMask:["none"],color:"000000",curve:-180},{x:500,y:80,cMask:["none"],color:"000000",curve:-180},{x:500,y:340,cMask:["none"],color:"000000",curve:-180},{x:-500,y:-340,cMask:["none"],color:"000000",curve:-180},{x:-500,y:-80,cMask:["none"],color:"000000",curve:-180},{x:500,y:-214,cMask:["none"],color:"000000",curve:-180},{x:500,y:-206,cMask:["none"],color:"000000",curve:-180},{x:500,y:-212,cMask:["none"],color:"000000",curve:-180},{x:500,y:-208,cMask:["none"],color:"000000",curve:-180},{x:500,y:-212,cMask:["none"],color:"000000",curve:-180},{x:500,y:-208,cMask:["none"],color:"000000",curve:-180},{x:501,y:206,cMask:["none"],color:"000000",curve:-180},{x:501,y:214,cMask:["none"],color:"000000",curve:-180},{x:501,y:208,cMask:["none"],color:"000000",curve:-180},{x:501,y:212,cMask:["none"],color:"000000",curve:-180},{x:501,y:208,cMask:["none"],color:"000000",curve:-180},{x:501,y:212,cMask:["none"],color:"000000",curve:-180},{x:-499,y:-214,cMask:["none"],color:"000000",curve:-180},{x:-499,y:-206,cMask:["none"],color:"000000",curve:-180},{x:-499,y:-212,cMask:["none"],color:"000000",curve:-180},{x:-499,y:-208,cMask:["none"],color:"000000",curve:-180},{x:-499,y:-212,cMask:["none"],color:"000000",curve:-180},{x:-499,y:-208,cMask:["none"],color:"000000",curve:-180},{x:-497,y:207,cMask:["none"],color:"000000",curve:-180},{x:-497,y:215,cMask:["none"],color:"000000",curve:-180},{x:-497,y:209,cMask:["none"],color:"000000",curve:-180},{x:-497,y:213,cMask:["none"],color:"000000",curve:-180},{x:-497,y:209,cMask:["none"],color:"000000",curve:-180},{x:-497,y:213,cMask:["none"],color:"000000",curve:-180},{x:0,y:-2,cMask:["none"],color:"818181",curve:-180},{x:0,y:6,cMask:["none"],color:"818181",curve:-180},{x:0,y:0,cMask:["none"],color:"818181",curve:-180},{x:0,y:4,cMask:["none"],color:"818181",curve:-180},{x:0,y:0,cMask:["none"],color:"818181",curve:-180},{x:0,y:4,cMask:["none"],color:"818181",curve:-180},{x:-757,y:-90,cMask:["none"],curve:180},{x:-757,y:110,cMask:["none"],curve:180},{x:-757,y:-107,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-107,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-107,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:107,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-104,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:104,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-101,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:101,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-98,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:98,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-95,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:95,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-92,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:92,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-89,cMask:["none"],curve:180,color:"0850A2"},{x:757,y:101.536516602,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:-100.463423548,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:98.5365174904,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:-97.4634244364,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:95.5365183793,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:-94.4634253253,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:92.5365192682,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:-91.4634262142,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:103,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:-103,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:106,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:-106,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:109,cMask:["none"],curve:180,color:"000088",p0:[760,-90],p1:[760,90]},{x:757,y:-109,cMask:["none"],curve:180,color:"000088",p0:[760,-90],p1:[760,90]},{x:800,y:-470,bCoef:-1.2,cMask:["ball"],curve:0,color:"818181",vis:!0},{x:1e3,y:-270,bCoef:.5,cMask:["red","blue"],curve:90,color:"818181",vis:!0},{x:1e3,y:-270,bCoef:.5,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:1e3,y:270,bCoef:.5,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:800,y:470,bCoef:.5,cMask:["red","blue"],curve:-90,color:"818181",vis:!0},{x:1e3,y:270,bCoef:.5,cMask:["red","blue"],curve:-90,color:"818181",vis:!0},{x:-800,y:470,bCoef:.5,cMask:["red","blue"],color:"818181",curve:0,vis:!0},{x:800,y:470,bCoef:.5,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:-800,y:470,bCoef:.5,cMask:["red","blue"],color:"818181",curve:-90,vis:!0},{x:-1e3,y:270,bCoef:.5,cMask:["red","blue"],curve:-90,color:"818181",vis:!0},{x:-1e3,y:-270,bCoef:0,cMask:["red","blue"],curve:0},{x:-800,y:-470,bCoef:.5,cMask:["blue"],curve:-90,color:"818181",vis:!1},{x:-1e3,y:-270,bCoef:.5,cMask:["red","blue"],curve:-90,color:"818181",vis:!0},{x:-757,y:97,bCoef:.7,cMask:["red","blue"],curve:0},{x:-790,y:97,bCoef:.7,cMask:["red","blue"],curve:-90,color:"000000"},{x:-757,y:-97,bCoef:.7,cMask:["red","blue"],curve:0},{x:-790,y:-97,bCoef:.7,cMask:["red","blue"],curve:90,color:"000000"},{x:-810,y:-70,bCoef:.7,cMask:["red","blue"],curve:0,color:"000000"},{x:-810,y:70,bCoef:.7,cMask:["red","blue"],curve:-90,color:"000000"},{x:757,y:-97,bCoef:.7,cMask:["red","blue"],p0:[760,-90],p1:[760,90],curve:0},{x:790,y:-97,bCoef:.7,cMask:["red","blue"],curve:-90,color:"000000"},{x:757,y:97,bCoef:.7,cMask:["red","blue"],p0:[760,-90],p1:[760,90],curve:0},{x:790,y:97,bCoef:.7,cMask:["red","blue"],curve:90,color:"000000"},{x:810,y:70,bCoef:.7,cMask:["red","blue"],curve:90,color:"000000"},{x:810,y:-70,bCoef:.7,cMask:["red","blue"],curve:-90,color:"000000"},{x:230,y:-470,cMask:["none"],color:"818181"},{x:230,y:470,cMask:["none"],color:"818181"},{x:-757,y:109,cMask:["none"],curve:-180,color:"880000",p0:[760,-90],p1:[760,90]},{x:-757,y:-109,cMask:["none"],curve:-180,color:"880000",p0:[760,-90],p1:[760,90]},{x:-1e3,y:-270,bCoef:.5,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:-1e3,y:270,bCoef:.5,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:-800,y:470,cMask:["ball"]},{x:800,y:470,cMask:["ball"]},{x:799,y:-470,bCoef:.5,cMask:["red"],curve:0,color:"000000",vis:!1},{x:-750,y:-470,bCoef:0,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:750,y:-470,bCoef:0,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:-750,y:-550,bCoef:0,cMask:["red","blue"],vis:!0},{x:750,y:-550,bCoef:0,cMask:["red","blue"],vis:!0},{x:-750,y:470,bCoef:0,cMask:["ball"]},{x:-750,y:550,bCoef:0,cMask:["ball"]},{x:750,y:470,bCoef:0,cMask:["ball"]},{x:750,y:550,bCoef:0,cMask:["ball"]},{x:-1001,y:64,bCoef:0,cMask:["red","blue"],color:"818181",curve:90},{x:-1042,y:61,bCoef:0,cMask:["red","blue"],color:"818181",curve:90},{x:-1040,y:-273,bCoef:0,cMask:["red","blue"],curve:90,color:"818181"},{x:-796,y:-505,bCoef:0,cMask:["wall"],curve:0,color:"818181"},{x:-751,y:-503,bCoef:0,cMask:["wall"],curve:90,color:"818181"},{x:750,y:-470,bCoef:0,cMask:["red","blue"],curve:-90,color:"818181",vis:!0},{x:751,y:-503,bCoef:0,cMask:["red","blue"],curve:-90,color:"818181"},{x:796,y:-505,bCoef:0,cMask:["wall"],curve:0,color:"000000"},{x:751,y:-503,bCoef:0,cMask:["wall"],curve:90,color:"000000"},{x:1040,y:-273,bCoef:0,cMask:["red","blue"],curve:-90,color:"818181"},{x:796,y:-505,bCoef:0,cMask:["red","blue"],curve:-90,color:"818181"},{x:1042,y:61,bCoef:0,cMask:["red","blue"],color:"818181",curve:90},{x:1040,y:-273,bCoef:0,cMask:["red","blue"],curve:90,color:"818181"},{x:1001,y:64,bCoef:0,cMask:["red","blue"],color:"818181",curve:-90},{x:1042,y:61,bCoef:0,cMask:["red","blue"],color:"818181",curve:-90},{x:-744,y:-475,bCoef:-.6,cMask:["ball"],curve:97,color:"EEDD82"},{x:743,y:-474,bCoef:-.6,cMask:["ball"],curve:-95,color:"818181"},{x:-800,y:475,bCoef:-.6,cMask:["ball"],curve:90,color:"818181"},{x:800,y:475,bCoef:-.6,cMask:["ball"],color:"818181"},{x:-1007,y:267,bCoef:-.6,cMask:["ball"],curve:0,color:"818181"},{x:800,y:475,bCoef:-.6,cMask:["ball"],curve:-90,color:"818181"},{x:1007,y:267,bCoef:-.6,cMask:["ball"],curve:0,color:"818181"},{x:-1007,y:68,bCoef:-.6,cMask:["ball"],curve:0,color:"818181"},{x:1007,y:68,bCoef:-.6,cMask:["ball"],curve:0,color:"818181"},{x:1007,y:-266},{x:1007,y:-68},{x:-1006,y:-271,bCoef:-.6,cMask:["ball"],curve:97,color:"EEDD82"},{x:1006,y:-271,bCoef:-.6,cMask:["ball"],curve:-95,color:"818181"},{x:-745,y:478},{x:745,y:478},{x:-15,y:-485,cMask:["ball"],color:"818181"},{x:15,y:-485,cMask:["ball"],color:"818181"},{x:-20,y:485,cMask:["ball"]},{x:20,y:485,cMask:["ball"]},{x:-25,y:-485,cMask:["ball"],color:"818181"},{x:25,y:-485,cMask:["ball"],color:"818181"},{x:-29,y:483,cMask:["ball"]},{x:29,y:483,cMask:["ball"]},{x:-55,y:-485,cMask:["ball"],color:"818181"},{x:55,y:-485,cMask:["ball"],color:"818181"},{x:-57,y:483,cMask:["ball"]},{x:57,y:483,cMask:["ball"]},{x:-55,y:-525,cMask:["ball"],color:"818181"},{x:-25,y:-525,cMask:["ball"],color:"818181"},{x:-15,y:-525,cMask:["ball"],color:"818181"},{x:15,y:-525,cMask:["ball"],color:"818181"},{x:25,y:-525,cMask:["ball"],color:"818181"},{x:15,y:-505,cMask:["ball"],color:"818181"},{x:-15,y:-505,cMask:["ball"],color:"818181"},{x:65,y:-485,cMask:["ball"],color:"000000",curve:0},{x:65,y:-515,cMask:["ball"],color:"000000",curve:220},{x:65,y:-500,cMask:["ball"],color:"000000",curve:0},{x:90,y:-485,cMask:["ball"],color:"000000",curve:260},{x:90,y:-515,cMask:["ball"],color:"000000",curve:220},{x:90,y:-500,cMask:["ball"],color:"000000",curve:260},{x:115,y:-485,cMask:["ball"],color:"000000",curve:260},{x:115,y:-515,cMask:["ball"],color:"000000",curve:220},{x:115,y:-500,cMask:["ball"],color:"000000",curve:25},{x:125,y:-485,cMask:["ball"],color:"000000",curve:25},{x:85,y:-485,cMask:["ball"],color:"000000",curve:0},{x:110,y:-485,cMask:["ball"],color:"000000",curve:260},{x:110,y:-500,cMask:["ball"],color:"000000",curve:260},{x:110,y:-515,cMask:["ball"],color:"000000",curve:220},{x:85,y:-500,cMask:["ball"],color:"000000",curve:0},{x:90,y:-485,cMask:["ball"],color:"000000",curve:0},{x:91,y:-516,cMask:["ball"],color:"000000",curve:220},{x:90,y:-500,cMask:["ball"],color:"000000",curve:0},{x:115,y:-485,cMask:["ball"],color:"000000",curve:260},{x:115,y:-515,cMask:["ball"],color:"000000",curve:220},{x:115,y:-500,cMask:["ball"],color:"000000",curve:260},{x:110,y:-485,cMask:["ball"],color:"000000",curve:0},{x:110,y:-500,cMask:["ball"],color:"000000",curve:0},{x:135,y:-515,cMask:["ball"]},{x:135,y:-485,cMask:["ball"],color:"000000",curve:260},{x:-700,y:350,cMask:[],curve:0,color:"ffff00"},{x:700,y:350,cMask:[],curve:0,color:"ffff00"},{x:700,y:480,cMask:[]},{x:-700,y:480,cMask:[]}],segments:[{v0:2,v1:3,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:4,v1:5,curve:0,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"],x:-1e3},{v0:6,v1:7,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:0,v1:4,curve:-90,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:5,v1:2,curve:-90,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:3,v1:7,curve:-90,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:1,v1:6,curve:90,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:8,v1:9,vis:!0,bCoef:-.7,cMask:["ball"],y:97},{v0:10,v1:11,vis:!0,bCoef:-.7,cMask:["ball"],y:-97},{v0:12,v1:13,vis:!0,color:"000000",bCoef:-.7,cMask:["ball"]},{v0:13,v1:9,curve:-90,vis:!0,color:"000000",bCoef:-.7,cMask:["ball"]},{v0:12,v1:11,curve:90,vis:!0,color:"000000",bCoef:-.7,cMask:["ball"]},{v0:14,v1:15,curve:0,vis:!0,color:"000000",cMask:["none"]},{v0:16,v1:17,vis:!0,bCoef:-.7,cMask:["ball"],y:-97},{v0:18,v1:19,vis:!0,bCoef:-.7,cMask:["ball"],y:97},{v0:20,v1:21,vis:!0,color:"000000",bCoef:-.7,cMask:["ball"],x:810},{v0:21,v1:17,curve:-90,vis:!0,color:"000000",bCoef:-.7,cMask:["ball"]},{v0:20,v1:19,curve:90,vis:!0,color:"000000",bCoef:-.7,cMask:["ball"]},{v0:22,v1:23,curve:0,vis:!0,color:"000000",cMask:["none"],x:760},{v0:24,v1:25,curve:0,vis:!0,color:"000000",cMask:["none"],x:0},{v0:26,v1:27,curve:0,vis:!0,color:"818181",cMask:["none"],x:-230},{v0:28,v1:29,curve:-180,vis:!0,color:"818181",cMask:["none"],x:-230},{v0:28,v1:29,curve:180,vis:!0,color:"818181",cMask:["none"]},{v0:30,v1:31,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:30,v1:31,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:32,v1:33,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:32,v1:33,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:34,v1:35,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:34,v1:35,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:36,v1:37,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:36,v1:37,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:38,v1:39,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:38,v1:39,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:40,v1:41,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:40,v1:41,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:42,v1:43,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:42,v1:43,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:44,v1:45,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:44,v1:45,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:46,v1:47,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:46,v1:47,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:48,v1:49,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:48,v1:49,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:50,v1:51,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:50,v1:51,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:52,v1:53,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:52,v1:53,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:54,v1:55,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:54,v1:55,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:56,v1:57,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:56,v1:57,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:58,v1:59,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:58,v1:59,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:60,v1:61,curve:-180,vis:!0,color:"000000",cMask:["none"],x:-230},{v0:60,v1:61,curve:180,vis:!0,color:"000000",cMask:["none"]},{v0:62,v1:63,curve:-180,vis:!0,color:"818181",cMask:["none"],x:0},{v0:62,v1:63,curve:180,vis:!0,color:"818181",cMask:["none"],x:0},{v0:64,v1:65,curve:-180,vis:!0,color:"818181",cMask:["none"],x:0},{v0:64,v1:65,curve:180,vis:!0,color:"818181",cMask:["none"],x:0},{v0:66,v1:67,curve:-180,vis:!0,color:"818181",cMask:["none"],x:0},{v0:66,v1:67,curve:180,vis:!0,color:"818181",cMask:["none"],x:0},{v0:97,v1:98,curve:180,vis:!0,color:"000088",cMask:["c0"],x:757,p0:[760,-90],p1:[760,90]},{v0:99,v1:100,curve:90,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:101,v1:102,curve:0,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:103,v1:104,curve:-90,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:105,v1:106,curve:0,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:108,v1:107,curve:-90,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:110,v1:111,curve:-90,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:112,v1:113,curve:0,vis:!0,bCoef:0,cMask:["red","blue"],y:97},{v0:114,v1:115,curve:0,vis:!0,bCoef:0,cMask:["red","blue"],y:-97},{v0:116,v1:117,curve:0,vis:!0,color:"000000",bCoef:0,cMask:["red","blue"]},{v0:117,v1:113,curve:-90,vis:!0,color:"000000",bCoef:0,cMask:["red","blue"]},{v0:116,v1:115,curve:90,vis:!0,color:"000000",bCoef:.7,cMask:["red","blue"]},{v0:118,v1:119,curve:0,vis:!0,bCoef:0,cMask:["red","blue"],y:-97},{v0:120,v1:121,curve:0,vis:!0,bCoef:0,cMask:["red","blue"],y:97},{v0:122,v1:123,curve:0,vis:!0,color:"000000",bCoef:0,cMask:["red","blue"],x:810},{v0:123,v1:119,curve:-90,vis:!0,color:"000000",bCoef:0,cMask:["red","blue"]},{v0:122,v1:121,curve:90,vis:!0,color:"000000",bCoef:.7,cMask:["red","blue"]},{v0:124,v1:125,curve:0,vis:!0,color:"818181",cMask:["none"],x:230},{v0:126,v1:127,curve:-180,vis:!0,color:"880000",cMask:["c0"],x:-757,p0:[760,-90],p1:[760,90]},{v0:128,v1:129,curve:0,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"],x:-1e3},{v0:107,v1:130,vis:!1,color:"FF0000",cMask:["ball"]},{v0:106,v1:131,vis:!1,color:"FF0000",cMask:["ball"]},{v0:0,v1:99,curve:0,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:133,v1:134,curve:0,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:134,v1:132,curve:0,vis:!0,color:"000000",bCoef:.5,cMask:["red"]},{v0:110,v1:133,curve:0,vis:!0,color:"000000",bCoef:.5,cMask:["blue"]},{v0:141,v1:142,curve:90,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:142,v1:143,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:143,v1:144,curve:90,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:144,v1:145,curve:0,vis:!0,color:"000000",bCoef:0,cMask:["wall"]},{v0:145,v1:133,curve:90,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:147,v1:146,curve:-90,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:148,v1:149,curve:0,vis:!0,color:"000000",bCoef:0,cMask:["wall"]},{v0:150,v1:151,curve:-90,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:152,v1:153,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:154,v1:155,curve:-90,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:156,v1:157,vis:!0,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:158,v1:159,vis:!0,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:158,v1:160,curve:90,vis:!0,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:161,v1:162,curve:-90,vis:!0,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:160,v1:163,curve:0,vis:!0,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:162,v1:164,curve:0,vis:!0,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:163,v1:167,curve:0,vis:!1,color:"006400",bCoef:-.6,cMask:["ball"]},{v0:164,v1:168,curve:0,vis:!1,color:"006400",bCoef:-.6,cMask:["ball"]},{v0:167,v1:156,curve:97,vis:!1,color:"EEDD82",bCoef:-.6,cMask:["ball"]},{v0:168,v1:157,curve:-95,vis:!1,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:183,v1:179,curve:0,vis:!0,color:"818181"},{v0:183,v1:175,curve:0,vis:!0,color:"818181"},{v0:175,v1:184,curve:0,vis:!0,color:"818181"},{v0:185,v1:171,curve:0,vis:!0,color:"818181",cMask:["ball"]},{v0:186,v1:172,curve:0,vis:!0,color:"818181",cMask:["ball"]},{v0:176,v1:180,curve:0,vis:!0,color:"818181",cMask:["ball"]},{v0:189,v1:188,curve:0,vis:!0,color:"818181",cMask:["ball"]},{v0:187,v1:176,curve:0,vis:!0,color:"818181",cMask:["ball"]},{v0:197,v1:196,curve:0,vis:!0,color:"000000",x:115},{v0:207,v1:212,curve:220,vis:!0,color:"000000",cMask:["ball"]},{v0:207,v1:205,curve:0,vis:!0,color:"000000",cMask:["ball"]},{v0:212,v1:211,curve:0,vis:!0,color:"000000",cMask:["ball"]},{v0:207,v1:212,curve:0,vis:!0,color:"000000",cMask:["ball"]},{v0:191,v1:190,vis:!0,color:"000000",cMask:["ball"]},{v0:190,v1:200,vis:!0,color:"000000",cMask:["ball"]},{v0:210,v1:213,vis:!0,color:"000000",cMask:["ball"]},{v0:210,v1:214,vis:!0,color:"000000",cMask:["ball"]},{v0:215,v1:216,curve:0,vis:!1,color:"ffff00",cMask:[],y:350},{v0:216,v1:217,curve:0,vis:!1,color:"ffff00",cMask:[]},{v0:215,v1:218,curve:0,vis:!1,color:"ffff00",cMask:[]}],goals:[{p0:[-760,95],p1:[-760,-95],team:"red",cMask:["ball"],bCoef:1,x:-757},{p0:[760,97],p1:[760,-97],team:"blue",cMask:["ball"],bCoef:1}],discs:[{radius:6,invMass:0,pos:[-760,-97],color:"C0C0C0",bCoef:-.7,cMask:["ball"],x:-757},{radius:6,invMass:0,pos:[-760,97],color:"C0C0C0",bCoef:-.7,cMask:["ball"],x:-757},{radius:6,invMass:0,pos:[760,97],color:"C0C0C0",bCoef:-.7,cMask:["ball"]},{radius:6,invMass:0,pos:[760,-97],color:"C0C0C0",bCoef:-.7,cMask:["ball"]},{radius:6,invMass:0,pos:[-760,-97],color:"C0C0C0",bCoef:.7,cMask:["red","blue"],x:-757},{radius:6,invMass:0,pos:[-760,97],color:"C0C0C0",bCoef:.7,cMask:["red","blue"],x:-757},{radius:6,invMass:0,pos:[760,97],color:"C0C0C0",bCoef:.7,cMask:["red","blue"]},{radius:6,invMass:0,pos:[760,-97],color:"C0C0C0",bCoef:.7,cMask:["red","blue"]}],planes:[{normal:[0,1],dist:-473,bCoef:-1.2,cMask:["ball"],color:"EEDD82"},{normal:[0,-1],dist:-472,bCoef:-1.2,cMask:["ball"],color:"EEDD82"},{normal:[0,-1],dist:-549,bCoef:-.6,cMask:["ball"]},{normal:[0,1],dist:-547,bCoef:-.6,cMask:["ball"]},{normal:[.99990162134,-.0140266760509],dist:-998.098191562,bCoef:-1.2,cMask:["ball"],color:"EEDD82"},{normal:[-1,0],dist:-1039,bCoef:-.6,cMask:["ball"]},{normal:[1,0],dist:-1039,bCoef:-.6,cMask:["ball"]},{normal:[-1,0],dist:-1001,bCoef:-1.2,cMask:["ball"],color:"EEDD82"},{normal:[.5,.5],dist:-960,cMask:["ball"]},{normal:[-.5,.5],dist:-960,cMask:["ball"]},{normal:[-.5,-.5],dist:-960,cMask:["ball"]},{normal:[.5,-.5],dist:-960,cMask:["ball"]}],traits:{ballArea:{vis:!1,bCoef:1,cMask:["ball"]},goalPost:{radius:8,invMass:0,bCoef:.5},goalNet:{vis:!0,bCoef:.1,cMask:["ball"]},kickOffBarrier:{vis:!1,bCoef:.1,cGroup:["redKO","blueKO"],cMask:["red","blue"]}},ballPhysics:{color:"000000",radius:6.5,damping:.996,invMass:1.5,bCoef:-.5},playerPhysics:{damping:.982,kickStrength:3.5,kickingDamping:.974,kickingAcceleration:.069,bCoef:1,acceleration:.079}}},{}],39:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.updateBlueTeamPlayers=exports.blueTeam=void 0,exports.blueTeam=[],exports.updateBlueTeamPlayers=function(room){for(var playerId in exports.blueTeam=[],room.players.blue()){playerId=room.players.blue()[playerId];exports.blueTeam.push(playerId)}}},{}],40:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.removePlayer=exports.playersList=void 0,exports.playersList=[],exports.removePlayer=function(id){exports.playersList=exports.playersList.filter(function(item){return item.id!==id})}},{}],41:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.updateRedTeamPlayers=exports.redTeam=void 0,exports.redTeam=[],exports.updateRedTeamPlayers=function(room){for(var playerId in exports.redTeam=[],room.players.red()){playerId=room.players.red()[playerId];exports.redTeam.push(playerId)}}},{}]},{},[24]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
