!function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);throw(f=new Error("Cannot find module '"+i+"'")).code="MODULE_NOT_FOUND",f}c=n[i]={exports:{}},e[i][0].call(c.exports,function(r){return o(e[i][1][r]||r)},c,c.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(require,module,exports){var global,factory;global=this,factory=function(exports){"use strict";const Metadata=new WeakMap;function defineMetadata(metadataKey,metadataValue,target,propertyKey){return ordinaryDefineOwnMetadata(metadataKey,metadataValue,target,propertyKey)}function decorate(decorators,target,propertyKey,attributes){if(0===decorators.length)throw new TypeError;return"function"==typeof target?function(decorators,target){return decorators.reverse().forEach(decorator=>{decorator=decorator(target);decorator&&(target=decorator)}),target}(decorators,target):void 0!==propertyKey?function(decorators,target,propertyKey,descriptor){return decorators.reverse().forEach(decorator=>{descriptor=decorator(target,propertyKey,descriptor)||descriptor}),descriptor}(decorators,target,propertyKey,attributes):void 0}function metadata(metadataKey,metadataValue){return function(target,propertyKey){ordinaryDefineOwnMetadata(metadataKey,metadataValue,target,propertyKey)}}function getMetadata(metadataKey,target,propertyKey){return ordinaryGetMetadata(metadataKey,target,propertyKey)}function getOwnMetadata(metadataKey,target,propertyKey){return ordinaryGetOwnMetadata(metadataKey,target,propertyKey)}function hasOwnMetadata(metadataKey,target,propertyKey){return!!ordinaryGetOwnMetadata(metadataKey,target,propertyKey)}function hasMetadata(metadataKey,target,propertyKey){return!!ordinaryGetMetadata(metadataKey,target,propertyKey)}function ordinaryDefineOwnMetadata(metadataKey,metadataValue,target,propertyKey){if(propertyKey&&!["string","symbol"].includes(typeof propertyKey))throw new TypeError;(getMetadataMap(target,propertyKey)||function(target,propertyKey){var targetMetadata=Metadata.get(target)||new Map,target=(Metadata.set(target,targetMetadata),targetMetadata.get(propertyKey)||new Map);return targetMetadata.set(propertyKey,target),target}(target,propertyKey)).set(metadataKey,metadataValue)}function ordinaryGetMetadata(metadataKey,target,propertyKey){return ordinaryGetOwnMetadata(metadataKey,target,propertyKey)?ordinaryGetOwnMetadata(metadataKey,target,propertyKey):Object.getPrototypeOf(target)?ordinaryGetMetadata(metadataKey,Object.getPrototypeOf(target),propertyKey):void 0}function ordinaryGetOwnMetadata(metadataKey,target,propertyKey){if(void 0===target)throw new TypeError;target=getMetadataMap(target,propertyKey);return target&&target.get(metadataKey)}function getMetadataMap(target,propertyKey){return Metadata.get(target)&&Metadata.get(target).get(propertyKey)}var Reflection={decorate:decorate,defineMetadata:defineMetadata,getMetadata:getMetadata,getOwnMetadata:getOwnMetadata,hasMetadata:hasMetadata,hasOwnMetadata:hasOwnMetadata,metadata:metadata};Object.assign(Reflect,Reflection),exports.Reflection=Reflection,exports.decorate=decorate,exports.defineMetadata=defineMetadata,exports.getMetadata=getMetadata,exports.getOwnMetadata=getOwnMetadata,exports.hasMetadata=hasMetadata,exports.hasOwnMetadata=hasOwnMetadata,exports.metadata=metadata,Object.defineProperty(exports,"__esModule",{value:!0})},"object"==typeof exports&&void 0!==module?factory(exports):"function"==typeof define&&define.amd?define(["exports"],factory):factory((global=global||self)["@abraham/reflection"]={})},{}],2:[function(require,module,exports){"use strict";var R="object"==typeof Reflect?Reflect:null,ReflectApply=R&&"function"==typeof R.apply?R.apply:function(target,receiver,args){return Function.prototype.apply.call(target,receiver,args)};var ReflectOwnKeys=R&&"function"==typeof R.ownKeys?R.ownKeys:Object.getOwnPropertySymbols?function(target){return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target))}:function(target){return Object.getOwnPropertyNames(target)},NumberIsNaN=Number.isNaN||function(value){return value!=value};function EventEmitter(){EventEmitter.init.call(this)}module.exports=EventEmitter,module.exports.once=function(emitter,name){return new Promise(function(resolve,reject){function errorListener(err){emitter.removeListener(name,resolver),reject(err)}function resolver(){"function"==typeof emitter.removeListener&&emitter.removeListener("error",errorListener),resolve([].slice.call(arguments))}eventTargetAgnosticAddListener(emitter,name,resolver,{once:!0}),"error"!==name&&function(emitter,handler,flags){"function"==typeof emitter.on&&eventTargetAgnosticAddListener(emitter,"error",handler,flags)}(emitter,errorListener,{once:!0})})},(EventEmitter.EventEmitter=EventEmitter).prototype._events=void 0,EventEmitter.prototype._eventsCount=0,EventEmitter.prototype._maxListeners=void 0;var defaultMaxListeners=10;function checkListener(listener){if("function"!=typeof listener)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof listener)}function _getMaxListeners(that){return void 0===that._maxListeners?EventEmitter.defaultMaxListeners:that._maxListeners}function _addListener(target,type,listener,prepend){var events,existing;return checkListener(listener),void 0===(events=target._events)?(events=target._events=Object.create(null),target._eventsCount=0):(void 0!==events.newListener&&(target.emit("newListener",type,listener.listener||listener),events=target._events),existing=events[type]),void 0===existing?(existing=events[type]=listener,++target._eventsCount):("function"==typeof existing?existing=events[type]=prepend?[listener,existing]:[existing,listener]:prepend?existing.unshift(listener):existing.push(listener),0<(events=_getMaxListeners(target))&&existing.length>events&&!existing.warned&&(existing.warned=!0,(prepend=new Error("Possible EventEmitter memory leak detected. "+existing.length+" "+String(type)+" listeners added. Use emitter.setMaxListeners() to increase limit")).name="MaxListenersExceededWarning",prepend.emitter=target,prepend.type=type,prepend.count=existing.length,listener=prepend,console)&&console.warn&&console.warn(listener)),target}function _onceWrap(target,type,listener){target={fired:!1,wrapFn:void 0,target:target,type:type,listener:listener},type=function(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}.bind(target);return type.listener=listener,target.wrapFn=type}function _listeners(target,type,unwrap){target=target._events;if(void 0===target)return[];target=target[type];if(void 0===target)return[];if("function"==typeof target)return unwrap?[target.listener||target]:[target];if(unwrap){for(var arr=target,ret=new Array(arr.length),i=0;i<ret.length;++i)ret[i]=arr[i].listener||arr[i];return ret}return arrayClone(target,target.length)}function listenerCount(type){var events=this._events;if(void 0!==events){events=events[type];if("function"==typeof events)return 1;if(void 0!==events)return events.length}return 0}function arrayClone(arr,n){for(var copy=new Array(n),i=0;i<n;++i)copy[i]=arr[i];return copy}function eventTargetAgnosticAddListener(emitter,name,listener,flags){if("function"==typeof emitter.on)flags.once?emitter.once(name,listener):emitter.on(name,listener);else{if("function"!=typeof emitter.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof emitter);emitter.addEventListener(name,function wrapListener(arg){flags.once&&emitter.removeEventListener(name,wrapListener),listener(arg)})}}Object.defineProperty(EventEmitter,"defaultMaxListeners",{enumerable:!0,get:function(){return defaultMaxListeners},set:function(arg){if("number"!=typeof arg||arg<0||NumberIsNaN(arg))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+arg+".");defaultMaxListeners=arg}}),EventEmitter.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},EventEmitter.prototype.setMaxListeners=function(n){if("number"!=typeof n||n<0||NumberIsNaN(n))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+n+".");return this._maxListeners=n,this},EventEmitter.prototype.getMaxListeners=function(){return _getMaxListeners(this)},EventEmitter.prototype.emit=function(type){for(var args=[],i=1;i<arguments.length;i++)args.push(arguments[i]);var doError="error"===type,events=this._events;if(void 0!==events)doError=doError&&void 0===events.error;else if(!doError)return!1;if(doError){if((er=0<args.length?args[0]:er)instanceof Error)throw er;doError=new Error("Unhandled error."+(er?" ("+er.message+")":""));throw doError.context=er,doError}var er=events[type];if(void 0===er)return!1;if("function"==typeof er)ReflectApply(er,this,args);else for(var len=er.length,listeners=arrayClone(er,len),i=0;i<len;++i)ReflectApply(listeners[i],this,args);return!0},EventEmitter.prototype.on=EventEmitter.prototype.addListener=function(type,listener){return _addListener(this,type,listener,!1)},EventEmitter.prototype.prependListener=function(type,listener){return _addListener(this,type,listener,!0)},EventEmitter.prototype.once=function(type,listener){return checkListener(listener),this.on(type,_onceWrap(this,type,listener)),this},EventEmitter.prototype.prependOnceListener=function(type,listener){return checkListener(listener),this.prependListener(type,_onceWrap(this,type,listener)),this},EventEmitter.prototype.off=EventEmitter.prototype.removeListener=function(type,listener){var list,events,position,i,originalListener;if(checkListener(listener),void 0!==(events=this._events)&&void 0!==(list=events[type]))if(list===listener||list.listener===listener)0==--this._eventsCount?this._events=Object.create(null):(delete events[type],events.removeListener&&this.emit("removeListener",type,list.listener||listener));else if("function"!=typeof list){for(position=-1,i=list.length-1;0<=i;i--)if(list[i]===listener||list[i].listener===listener){originalListener=list[i].listener,position=i;break}if(position<0)return this;0===position?list.shift():function(list,index){for(;index+1<list.length;index++)list[index]=list[index+1];list.pop()}(list,position),1===list.length&&(events[type]=list[0]),void 0!==events.removeListener&&this.emit("removeListener",type,originalListener||listener)}return this},EventEmitter.prototype.removeAllListeners=function(type){var listeners,events=this._events;if(void 0!==events)if(void 0===events.removeListener)0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==events[type]&&(0==--this._eventsCount?this._events=Object.create(null):delete events[type]);else if(0===arguments.length){for(var key,keys=Object.keys(events),i=0;i<keys.length;++i)"removeListener"!==(key=keys[i])&&this.removeAllListeners(key);this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0}else if("function"==typeof(listeners=events[type]))this.removeListener(type,listeners);else if(void 0!==listeners)for(i=listeners.length-1;0<=i;i--)this.removeListener(type,listeners[i]);return this},EventEmitter.prototype.listeners=function(type){return _listeners(this,type,!0)},EventEmitter.prototype.rawListeners=function(type){return _listeners(this,type,!1)},EventEmitter.listenerCount=function(emitter,type){return"function"==typeof emitter.listenerCount?emitter.listenerCount(type):listenerCount.call(emitter,type)},EventEmitter.prototype.listenerCount=listenerCount,EventEmitter.prototype.eventNames=function(){return 0<this._eventsCount?ReflectOwnKeys(this._events):[]}},{}],3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AbstractDisc=void 0,require("./headless");exports.AbstractDisc=class{constructor(room){this._room=room}distanceTo(disc){var r1,y2,x1,x2,y1;return isNaN(parseInt(this.x+""))||isNaN(parseInt(this.y+""))||isNaN(parseInt(disc.x+""))||isNaN(parseInt(disc.y+""))||isNaN(parseInt(this.radius+""))||isNaN(parseInt(disc.x+""))?null:(x1=this.x,y1=this.y,r1=this.radius,x2=disc.x,y2=disc.y,disc=disc.radius,x1=x1-x2,x2=y1-y2,y1=Math.sqrt(x1*x1+x2*x2),Math.max(0,y1-r1-disc))}collidingWith(disc){disc=this.distanceTo(disc);return!!disc&&disc<=0}get x(){var _a;return null==(_a=this._discObject)?void 0:_a.x}set x(value){this._discObject={x:value}}get y(){var _a;return null==(_a=this._discObject)?void 0:_a.y}set y(value){this._discObject={y:value}}get xspeed(){var _a;return null==(_a=this._discObject)?void 0:_a.xspeed}set xspeed(value){this._discObject={xspeed:value}}get yspeed(){var _a;return null==(_a=this._discObject)?void 0:_a.yspeed}set yspeed(value){this._discObject={yspeed:value}}get xgravity(){var _a;return null==(_a=this._discObject)?void 0:_a.xgravity}set xgravity(value){this._discObject={xgravity:value}}get ygravity(){var _a;return null==(_a=this._discObject)?void 0:_a.ygravity}set ygravity(value){this._discObject={ygravity:value}}get radius(){var _a;return null==(_a=this._discObject)?void 0:_a.radius}set radius(value){this._discObject={radius:value}}get bCoeff(){var _a;return null==(_a=this._discObject)?void 0:_a.bCoeff}set bCoeff(value){this._discObject={bCoeff:value}}get invMass(){var _a;return null==(_a=this._discObject)?void 0:_a.invMass}set invMass(value){this._discObject={invMass:value}}get damping(){var _a;return null==(_a=this._discObject)?void 0:_a.damping}set damping(value){this._discObject={damping:value}}get cMask(){var _a;return null==(_a=this._discObject)?void 0:_a.cMask}set cMask(value){this._discObject={cMask:value}}get cGroup(){var _a;return null==(_a=this._discObject)?void 0:_a.cGroup}set cGroup(value){this._discObject={cGroup:value}}}},{"./headless":19}],4:[function(require,module,exports){"use strict";function getRGB(color){return[(color="string"==typeof color?Number.parseInt(color.replace("#","")):color)>>16&255,color>>8&255,255&color]}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getRGBString=exports.isLight=exports.shadeColor=exports.getRGB=void 0,exports.getRGB=getRGB,exports.shadeColor=function(color,percent){return getRGB(color).map(c=>{c=c*(100+percent)/100;return c<255?c:255})},exports.isLight=function(color){return 128<=(299*(color=getRGB(color))[0]+587*color[1]+114*color[2])/1e3},exports.getRGBString=function(rgb){return"rgb("+rgb.join()+")"}},{}],5:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Command=void 0;const Role_1=require("./Role");exports.Command=class{constructor(options){var _a;this.aliases=[],this.roles=[],this.deleteMessage=!0,this.name=options.name,this.aliases=null!=(_a=options.aliases)?_a:this.aliases,this.desc=null!=(_a=options.desc)?_a:"",this.usage=null!=(_a=options.usage)?_a:"",this.roles=null!=(_a=options.roles)?_a:this.roles,this.deleteMessage=null!=(_a=options.deleteMessage)?_a:this.deleteMessage,this.func=options.func}isAllowed(player){return!(!this.roles.includes(Role_1.AdminRole)||!player.admin)||!(!player.roles.find(r=>r.override)&&0<this.roles.length)||this.roles.some(role=>player.hasRole(role))}run(info){try{this.func(info)}catch(e){console.error(e)}}}},{"./Role":15}],6:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CommandArgument=exports.parameterTypes=void 0,exports.parameterTypes={number:/^\d+$/,yesno:/^(y(es)?|n(o)?)/i,nickname:/^(?=.{1,25}$).*/i,password:/^[a-zA-Z0-9_@.!*$?&%-]{1,16}$/i,extended:/^[a-zA-Z0-9\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u024F]*$/i,specialExtended:/^[a-zA-Z0-9\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u024F_@.!*$?&%-]*$/i};exports.CommandArgument=class{constructor(argument){this._value=argument,this.number=function(argument){return exports.parameterTypes.number.test(argument)}(argument),this.yesno=function(argument){return exports.parameterTypes.yesno.test(argument)}(argument),this.password=function(argument){return exports.parameterTypes.password.test(argument)}(argument),this.extended=function(argument){return exports.parameterTypes.extended.test(argument)}(argument),this.specialExtended=function(argument){return exports.parameterTypes.specialExtended.test(argument)}(argument)}toNumber(){return parseInt(this._value)}toString(){return this._value}}},{}],7:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CommandList=void 0;exports.CommandList=class{constructor(prefix,...items){this._list=[],this._prefix=prefix,items.forEach(c=>this._list.push(c))}get list(){return this._list}get prefix(){return this._prefix}set prefix(value){this._prefix=value}add(command){command.aliases.forEach(a=>{this.remove(a)}),this.remove(command.name),this._list.push(command)}get(search){return this._list.find(cmd=>cmd.name===search)||this._list.find(cmd=>{return-1!==(null==(cmd=cmd.aliases)?void 0:cmd.indexOf(search))})}remove(command){this._list=this._list.filter(cmd=>{return cmd.name!==command&&cmd.name!==(null==(cmd=command)?void 0:cmd.name)})}}},{}],8:[function(require,module,exports){"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P=P||Promise)(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):((value=result.value)instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})},require=(Object.defineProperty(exports,"__esModule",{value:!0}),exports.keys=exports.clear=exports.remove=exports.set=exports.get=void 0,require("idb"));const connStorage="connections";const db=require.openDB("haxball-extended-room",1,{upgrade(db){db.createObjectStore(connStorage,{keyPath:"ip"})}});exports.get=function(key){return __awaiter(this,void 0,void 0,function*(){return(yield db).get(connStorage,key)})},exports.set=function(val){return __awaiter(this,void 0,void 0,function*(){return(yield db).put(connStorage,val)})},exports.remove=function(key){return __awaiter(this,void 0,void 0,function*(){return(yield db).delete(connStorage,key)})},exports.clear=function(){return __awaiter(this,void 0,void 0,function*(){return(yield db).clear(connStorage)})},exports.keys=function(){return __awaiter(this,void 0,void 0,function*(){return(yield db).getAllKeys(connStorage)})}},{idb:22}],9:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Disc=void 0;var AbstractDisc_1=require("./AbstractDisc");const Settings_1=require("./Settings");class Disc extends AbstractDisc_1.AbstractDisc{constructor(room,discIndex){super(room),this.settings=new Settings_1.Settings,this.index=discIndex}get _discObject(){return this._room.native.getDiscProperties(this.index)}set _discObject(properties){this._room.native.setDiscProperties(this.index,properties)}get color(){return this._discObject.color}set color(value){this._discObject={color:value}}}exports.Disc=Disc},{"./AbstractDisc":3,"./Settings":18}],10:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RoomGeoList=exports.Colors=exports.ChatStyle=exports.ChatSounds=exports.Stadiums=exports.Teams=void 0,function(Teams){Teams[Teams.Spectators=0]="Spectators",Teams[Teams.Red=1]="Red",Teams[Teams.Blue=2]="Blue"}(exports.Teams||(exports.Teams={})),function(Stadiums){Stadiums.Classic="Classic",Stadiums.Easy="Easy",Stadiums.Small="Small",Stadiums.Big="Big",Stadiums.Rounded="Rounded",Stadiums.Hockey="Hockey",Stadiums.BigHockey="BigHockey",Stadiums.BigEasy="BigEasy",Stadiums.BigRounded="BigRounded",Stadiums.Huge="Huge"}(exports.Stadiums||(exports.Stadiums={})),function(ChatSounds){ChatSounds[ChatSounds.None=0]="None",ChatSounds[ChatSounds.Normal=1]="Normal",ChatSounds[ChatSounds.Notification=2]="Notification"}(exports.ChatSounds||(exports.ChatSounds={})),function(ChatStyle){ChatStyle.Normal="normal",ChatStyle.Bold="bold",ChatStyle.Italic="italic",ChatStyle.Small="small",ChatStyle.SmallBold="small-bold",ChatStyle.SmallItalic="small-italic"}(exports.ChatStyle||(exports.ChatStyle={})),function(Colors){Colors[Colors.AliceBlue=15792383]="AliceBlue",Colors[Colors.AntiqueWhite=16444375]="AntiqueWhite",Colors[Colors.Aqua=65535]="Aqua",Colors[Colors.AquaMarine=8388564]="AquaMarine",Colors[Colors.Azure=15794175]="Azure",Colors[Colors.Beige=16119260]="Beige",Colors[Colors.Bisque=16770244]="Bisque",Colors[Colors.Black=0]="Black",Colors[Colors.BlancheDalmond=16772045]="BlancheDalmond",Colors[Colors.Blue=255]="Blue",Colors[Colors.BlueViolet=9055202]="BlueViolet",Colors[Colors.Brown=10824234]="Brown",Colors[Colors.Burlywood=14596231]="Burlywood",Colors[Colors.CadetBlue=6266528]="CadetBlue",Colors[Colors.Chartreuse=8388352]="Chartreuse",Colors[Colors.Chocolate=13789470]="Chocolate",Colors[Colors.Coral=16744272]="Coral",Colors[Colors.CornflowerBlue=6591981]="CornflowerBlue",Colors[Colors.Cornsilk=16775388]="Cornsilk",Colors[Colors.Crimson=14423100]="Crimson",Colors[Colors.Cyan=65535]="Cyan",Colors[Colors.DarkBlue=139]="DarkBlue",Colors[Colors.DarkCyan=35723]="DarkCyan",Colors[Colors.DarkGoldenRod=12092939]="DarkGoldenRod",Colors[Colors.DarkGray=11119017]="DarkGray",Colors[Colors.DarkGreen=25600]="DarkGreen",Colors[Colors.DarkKhaki=12433259]="DarkKhaki",Colors[Colors.DarkMagenta=9109643]="DarkMagenta",Colors[Colors.DarkOliveGreen=5597999]="DarkOliveGreen",Colors[Colors.DarkOrange=16747520]="DarkOrange",Colors[Colors.DarkOrchid=10040012]="DarkOrchid",Colors[Colors.DarkRed=9109504]="DarkRed",Colors[Colors.DarkSalmon=15308410]="DarkSalmon",Colors[Colors.DarkseaGreen=9419919]="DarkseaGreen",Colors[Colors.DarkSlateBlue=4734347]="DarkSlateBlue",Colors[Colors.DarkSlateGray=3100495]="DarkSlateGray",Colors[Colors.DarkTurquoise=52945]="DarkTurquoise",Colors[Colors.DarkViolet=9699539]="DarkViolet",Colors[Colors.DeepPink=16716947]="DeepPink",Colors[Colors.DeepSkyBlue=49151]="DeepSkyBlue",Colors[Colors.DimGray=6908265]="DimGray",Colors[Colors.DodgerBlue=2003199]="DodgerBlue",Colors[Colors.Firebrick=11674146]="Firebrick",Colors[Colors.FloralWhite=16775920]="FloralWhite",Colors[Colors.ForestGreen=2263842]="ForestGreen",Colors[Colors.Fuchsia=16711935]="Fuchsia",Colors[Colors.Gainsboro=14474460]="Gainsboro",Colors[Colors.GhostWhite=16316671]="GhostWhite",Colors[Colors.Gold=16766720]="Gold",Colors[Colors.GoldenRod=14329120]="GoldenRod",Colors[Colors.Gray=8421504]="Gray",Colors[Colors.Green=32768]="Green",Colors[Colors.GreenYellow=11403055]="GreenYellow",Colors[Colors.Honeydew=15794160]="Honeydew",Colors[Colors.HotPink=16738740]="HotPink",Colors[Colors.IndianRed=13458524]="IndianRed",Colors[Colors.Indigo=4915330]="Indigo",Colors[Colors.Ivory=16777200]="Ivory",Colors[Colors.Khaki=15787660]="Khaki",Colors[Colors.Lavender=15132410]="Lavender",Colors[Colors.Lavenderblush=16773365]="Lavenderblush",Colors[Colors.LawnGreen=8190976]="LawnGreen",Colors[Colors.LemonChiffon=16775885]="LemonChiffon",Colors[Colors.LightBlue=11393254]="LightBlue",Colors[Colors.Lightcoral=15761536]="Lightcoral",Colors[Colors.LightCyan=14745599]="LightCyan",Colors[Colors.LightGoldenRodYellow=16448210]="LightGoldenRodYellow",Colors[Colors.LightGrey=13882323]="LightGrey",Colors[Colors.LightGreen=9498256]="LightGreen",Colors[Colors.LightPink=16758465]="LightPink",Colors[Colors.LightSalmon=16752762]="LightSalmon",Colors[Colors.LightSeaGreen=2142890]="LightSeaGreen",Colors[Colors.LightSkyBlue=8900346]="LightSkyBlue",Colors[Colors.LightSlateGray=7833753]="LightSlateGray",Colors[Colors.LightSteelBlue=11584734]="LightSteelBlue",Colors[Colors.LightYellow=16777184]="LightYellow",Colors[Colors.Lime=65280]="Lime",Colors[Colors.LimeGreen=3329330]="LimeGreen",Colors[Colors.Linen=16445670]="Linen",Colors[Colors.Magenta=16711935]="Magenta",Colors[Colors.Maroon=8388608]="Maroon",Colors[Colors.MediumAquamarine=6737322]="MediumAquamarine",Colors[Colors.MediumBlue=205]="MediumBlue",Colors[Colors.Mediumorchid=12211667]="Mediumorchid",Colors[Colors.MediumPurple=9662680]="MediumPurple",Colors[Colors.MediumSeaGreen=3978097]="MediumSeaGreen",Colors[Colors.MediumSlateBlue=8087790]="MediumSlateBlue",Colors[Colors.MediumspringGreen=64154]="MediumspringGreen",Colors[Colors.MediumTurquoise=4772300]="MediumTurquoise",Colors[Colors.MediumVioletRed=13047173]="MediumVioletRed",Colors[Colors.MidnightBlue=1644912]="MidnightBlue",Colors[Colors.MintCream=16121850]="MintCream",Colors[Colors.MistyRose=16770273]="MistyRose",Colors[Colors.Moccasin=16770229]="Moccasin",Colors[Colors.NavajoWhite=16768685]="NavajoWhite",Colors[Colors.Navy=128]="Navy",Colors[Colors.OldLace=16643558]="OldLace",Colors[Colors.Olive=8421376]="Olive",Colors[Colors.OliveDrab=7048739]="OliveDrab",Colors[Colors.Orange=16753920]="Orange",Colors[Colors.OrangeRed=16729344]="OrangeRed",Colors[Colors.Orchid=14315734]="Orchid",Colors[Colors.PaleGoldenRod=15657130]="PaleGoldenRod",Colors[Colors.PaleGreen=10025880]="PaleGreen",Colors[Colors.PaleTurquoise=11529966]="PaleTurquoise",Colors[Colors.PaleVioletRed=14184595]="PaleVioletRed",Colors[Colors.PapayaWhip=16773077]="PapayaWhip",Colors[Colors.Peachpuff=16767673]="Peachpuff",Colors[Colors.Peru=13468991]="Peru",Colors[Colors.Pink=16761035]="Pink",Colors[Colors.Plum=14524637]="Plum",Colors[Colors.PowderBlue=11591910]="PowderBlue",Colors[Colors.Purple=8388736]="Purple",Colors[Colors.RebeccaPurple=6697881]="RebeccaPurple",Colors[Colors.Red=16711680]="Red",Colors[Colors.RosyBrown=12357519]="RosyBrown",Colors[Colors.RoyalBlue=4286945]="RoyalBlue",Colors[Colors.SaddleBrown=9127187]="SaddleBrown",Colors[Colors.Salmon=16416882]="Salmon",Colors[Colors.SandyBrown=16032864]="SandyBrown",Colors[Colors.SeaGreen=3050327]="SeaGreen",Colors[Colors.Seashell=16774638]="Seashell",Colors[Colors.Sienna=10506797]="Sienna",Colors[Colors.Silver=12632256]="Silver",Colors[Colors.SkyBlue=8900331]="SkyBlue",Colors[Colors.SlateBlue=6970061]="SlateBlue",Colors[Colors.SlateGray=7372944]="SlateGray",Colors[Colors.Snow=16775930]="Snow",Colors[Colors.SpringGreen=65407]="SpringGreen",Colors[Colors.SteelBlue=4620980]="SteelBlue",Colors[Colors.Tan=13808780]="Tan",Colors[Colors.Teal=32896]="Teal",Colors[Colors.Thistle=14204888]="Thistle",Colors[Colors.Tomato=16737095]="Tomato",Colors[Colors.Turquoise=4251856]="Turquoise",Colors[Colors.Violet=15631086]="Violet",Colors[Colors.Wheat=16113331]="Wheat",Colors[Colors.White=16777215]="White",Colors[Colors.WhiteSmoke=16119285]="WhiteSmoke",Colors[Colors.Yellow=16776960]="Yellow",Colors[Colors.YellowGreen=10145074]="YellowGreen",Colors[Colors.Haxball=9360043]="Haxball"}(exports.Colors||(exports.Colors={})),exports.RoomGeoList={SaoPaulo:{code:"br",lat:-23.533773,lon:-46.62529},RiodeJaneiro:{code:"br",lat:-22.970722,lon:-43.182365},Curitiba:{code:"br",lat:-25.423164974,lon:-49.270998916},PortoAlegre:{code:"br",lat:-30.03306,lon:-51.23},Salvador:{code:"br",lat:-12.97111,lon:-38.51083},Brasilia:{code:"br",lat:-15.77972,lon:-47.92972},BeloHorizonte:{code:"br",lat:-19.92083,lon:-43.93778},Montevideu:{code:"uy",lat:-34.90328,lon:-56.18816},BuenosAires:{code:"ar",lat:-34.61315,lon:-58.37723},Cordoba:{code:"ar",lat:-31.4135,lon:-64.18105},Rosario:{code:"ar",lat:-32.94682,lon:-60.63932},Santiago:{code:"cl",lat:-33.45694,lon:-70.64827},Bogota:{code:"co",lat:4.60971,lon:-74.08175},Lisbon:{code:"pt",lat:38.71667,lon:-9.13333},Porto:{code:"pt",lat:41.14961,lon:-8.61099},NewYorkCity:{code:"us",lat:40.71427,lon:-74.00597},LosAngeles:{code:"us",lat:34.05223,lon:-118.24368},Chicago:{code:"us",lat:41.85003,lon:-87.65005},Houston:{code:"us",lat:29.76328,lon:-95.36327},Washington:{code:"us",lat:38.89511,lon:-77.03637},Boston:{code:"us",lat:42.35843,lon:-71.05977},Miami:{code:"us",lat:25.77427,lon:-80.19366},Toronto:{code:"ca",lat:43.70011,lon:-79.4163},Montreal:{code:"ca",lat:45.50884,lon:-73.58781},Madrid:{code:"es",lat:40.4165,lon:-3.70256},Barcelona:{code:"es",lat:41.38879,lon:2.15899},Valencia:{code:"es",lat:39.46975,lon:-.37739},Seville:{code:"es",lat:37.38283,lon:-5.97317},Paris:{code:"fr",lat:48.85341,lon:2.3488},Marseille:{code:"fr",lat:43.29695,lon:5.38107},Lyon:{code:"fr",lat:45.74846,lon:4.84671},Toulouse:{code:"fr",lat:43.60426,lon:1.44367},Nantes:{code:"fr",lat:47.21725,lon:-1.55336},Rome:{code:"it",lat:41.89193,lon:12.51133},Milan:{code:"it",lat:45.46427,lon:9.18951},Naples:{code:"it",lat:40.85631,lon:14.24641},Turin:{code:"it",lat:45.07049,lon:7.68682},Palermo:{code:"it",lat:38.13205,lon:13.33561},London:{code:"uk",lat:51.50853,lon:-.12574},Birmingham:{code:"uk",lat:52.48142,lon:-1.89983},Liverpool:{code:"uk",lat:53.41058,lon:-2.97794},Berlin:{code:"de",lat:52.52437,lon:13.41053},Hamburg:{code:"de",lat:53.57532,lon:10.01534},Munich:{code:"de",lat:48.13743,lon:11.57549},Cologne:{code:"de",lat:50.93333,lon:6.95},Frankfurt:{code:"de",lat:50.11552,lon:8.68417},Athens:{code:"gr",lat:38.2749497,lon:23.8102717},Zagreb:{code:"hr",lat:45.81444,lon:15.97798},Sarajevo:{code:"ba",lat:43.84864,lon:18.35644},Moscow:{code:"ru",lat:55.75222,lon:37.61556},SaintPetersburg:{code:"ru",lat:59.93863,lon:30.31413},Belgrade:{code:"rs",lat:44.80401,lon:20.46513},Amsterdam:{code:"nl",lat:52.37403,lon:4.88969},Istanbul:{code:"tr",lat:41.01384,lon:28.94966},Ankara:{code:"tr",lat:39.91987,lon:32.85427},Izmir:{code:"tr",lat:38.41273,lon:27.13838},Bursa:{code:"tr",lat:40.19559,lon:29.06013},Adana:{code:"tr",lat:37.00167,lon:35.32889},Gaziantep:{code:"tr",lat:37.05944,lon:37.3825},Konya:{code:"tr",lat:37.87135,lon:32.48464},Antalya:{code:"tr",lat:36.90812,lon:30.69556},Warsaw:{code:"pl",lat:52.22977,lon:21.01178},Lodz:{code:"pl",lat:51.75,lon:19.46667},Krakow:{code:"pl",lat:50.06143,lon:19.93658},Wroclaw:{code:"pl",lat:51.1,lon:17.03333},Poznan:{code:"pl",lat:52.40692,lon:16.92993},Gdansk:{code:"pl",lat:54.35205,lon:18.64637},Bucharest:{code:"ro",lat:44.43225,lon:26.10626},Jerusalem:{code:"il",lat:31.76904,lon:35.21633},TelAviv:{code:"il",lat:32.08088,lon:34.78057},Tbilisi:{code:"ge",lat:41.69411,lon:44.83368},Mumbai:{code:"in",lat:19.07283,lon:72.88261},Delhi:{code:"in",lat:28.65195,lon:77.23149},Sydney:{code:"au",lat:-33.86785,lon:151.20732},Melbourne:{code:"au",lat:-37.814,lon:144.96332},Brisbane:{code:"au",lat:-27.46794,lon:153.02809},Singapore:{code:"sg",lat:1.28967,lon:103.85007},Seoul:{code:"kr",lat:37.566,lon:126.9784},Tokyo:{code:"jp",lat:35.6895,lon:139.69171}}},{}],11:[function(require,module,exports){"use strict";var ChatStyleCSS,__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){o[k2=void 0===k2?k:k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.log=exports.admin=exports.chat=exports.direct=exports.announcement=exports.anonymous=void 0,require("./types");const Color=__importStar(require("./Color")),Global_1=require("./Global"),template="%c%s%c %c%s%c %c%s",tag="display: inline-block;color: black; font-weight: bold; padding: 3px 7px 3px 7px; border-radius: 3px 3px 3px 3px;",announcementTag=formatTag(Global_1.Colors.Gold),privateTag=formatTag(Global_1.Colors.SkyBlue),chatTag=formatTag(Global_1.Colors.LightGreen),adminTag=formatTag(Global_1.Colors.Gold),timestampTag=formatTag(Global_1.Colors.LightGrey),announcementTagText="📢",privateTagText="📥 ";function formatTag(color){return tag+`background-color: ${Color.getRGBString(Color.getRGB(color))};`}function customLog(options){var _b,_a=null!=(_a=options.message.color)?_a:Global_1.Colors.Black,_a="color: "+(Color.isLight(_a)?Color.getRGBString(Color.shadeColor(_a,-40)):Color.getRGBString(Color.getRGB(_a)))+";";let messageStyle="";options.message.style===Global_1.ChatStyle.Bold&&(messageStyle=ChatStyleCSS.Bold),options.message.style===Global_1.ChatStyle.Italic&&(messageStyle=ChatStyleCSS.Italic),options.message.style===Global_1.ChatStyle.Small&&(messageStyle=ChatStyleCSS.Small),options.message.style===Global_1.ChatStyle.SmallBold&&(messageStyle=ChatStyleCSS.SmallBold),options.message.style===Global_1.ChatStyle.SmallItalic&&(messageStyle=ChatStyleCSS.SmallItalic),anonymous(null!=(_b=options.template)?_b:template,null!=(_b=options.timestampTag)?_b:timestampTag,""+new Date(Date.now()-6e4*new Date(Date.now()).getTimezoneOffset()).toISOString().substr(11,8),"",null!=(_b=options.tag)?_b:"",null!=(_b=options.tagContent)?_b:"","",_a+messageStyle,options.message.message)}function anonymous(...params){setTimeout(console.log.bind(console,...params))}!function(ChatStyleCSS){ChatStyleCSS.Bold="font-weight: bold;",ChatStyleCSS.Italic="font-style: italic;",ChatStyleCSS.Small="font-size: small;",ChatStyleCSS.SmallBold="font-size: small; font-weight: bold;",ChatStyleCSS.SmallItalic="font-size: small; font-style: italic;"}(ChatStyleCSS=ChatStyleCSS||{}),exports.anonymous=anonymous,exports.announcement=function(message){customLog({tag:announcementTag,tagContent:announcementTagText,message:message})},exports.direct=function(message,player){customLog({tag:privateTag,tagContent:privateTagText+(null==player?void 0:player.tag),message:message})},exports.chat=function(message,player){customLog({tag:chatTag,tagContent:null==player?void 0:player.tag,message:message})},exports.admin=function(message,player){customLog({tag:adminTag,tagContent:null==player?void 0:player.tag,message:message})},exports.log=function(message){customLog({message:message})}},{"./Color":4,"./Global":10,"./types":21}],12:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){o[k2=void 0===k2?k:k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P=P||Promise)(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):((value=result.value)instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})},AbstractDisc_1=(Object.defineProperty(exports,"__esModule",{value:!0}),exports.Player=void 0,require("./types"),require("./AbstractDisc"));const Settings_1=require("./Settings"),ConnectionHistory=__importStar(require("./ConnectionHistory")),RoleList_1=require("./RoleList");class Player extends AbstractDisc_1.AbstractDisc{constructor(room,playerObject){super(room),this._kickLimitDistance=4,this._roles=new RoleList_1.RoleList,this.settings=new Settings_1.Settings,this.commandsCooldown=0,this.canReadChat=!0,this.canUseCommands=!0,this._lastCommandTime=0,this.name=playerObject.name,this.id=playerObject.id,this.auth=playerObject.auth,this.conn=playerObject.conn,this.ip=this._decodeConn(this.conn)}fetchGeoLocation(){return __awaiter(this,void 0,void 0,function*(){var connHistory=yield ConnectionHistory.get(this.ip);return connHistory&&connHistory.geo?this._geo=connHistory.geo:(connHistory=yield(yield fetch(`https://ipapi.co/${this.ip}/json/`)).json(),this._geo={city:connHistory.city,continent:connHistory.continent_code,country:connHistory.country,language:connHistory.languages.split(",")[0],org:connHistory.org,region:connHistory.region,timezone:connHistory.timezone}),this._geo})}_decodeConn(str){return decodeURIComponent(str.replace(/(..)/g,"%$1"))}setAvatar(avatar){this._room.native.setPlayerAvatar(this.id,avatar)}clearAvatar(){this._room.native.setPlayerAvatar(this.id,null)}kick(reason){this._room.native.kickPlayer(this.id,null!=reason?reason:"",!1)}ban(reason){this._room.native.kickPlayer(this.id,null!=reason?reason:"",!0)}reply(message){this.canReadChat&&(message.targetID=this.id,this._room.send(message))}canKick(disc){disc=disc.distanceTo(this);return!!disc&&disc<this._kickLimitDistance}canRunCommandsCooldown(){return Date.now()-this._lastCommandTime>1e3*this.commandsCooldown}updateCooldown(){this._lastCommandTime=Date.now()}addRole(role){this._roles.add(role)}removeRole(role){this._roles.remove(role)}hasRole(role){return this._roles.has(role)}get _playerObject(){return this._room.native.getPlayer(this.id)}get _discObject(){return this._room.native.getPlayerDiscProperties(this.id)}set _discObject(properties){this._room.native.setPlayerDiscProperties(this.id,properties)}get team(){var _a;return null==(_a=this._playerObject)?void 0:_a.team}set team(team){this._room.native.setPlayerTeam(this.id,team)}get roles(){return this._roles.roles}get topRole(){return this.roles.sort((a,b)=>b.position-a.position)[0]}get admin(){var _a;return null==(_a=this._playerObject)?void 0:_a.admin}set admin(value){this._room.native.setPlayerAdmin(this.id,value)}get position(){var _a;return null==(_a=this._playerObject)?void 0:_a.position}set position(pos){this._discObject={x:pos.x,y:pos.y}}get tag(){return this.name+" #"+this.id}get mention(){return"@"+this.name.replace(/ /g,"_")}get geolocation(){return this._geo||null}}exports.Player=Player},{"./AbstractDisc":3,"./ConnectionHistory":8,"./RoleList":16,"./Settings":18,"./types":21}],13:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PlayerList=void 0,require("./types");const Global_1=require("./Global");class PlayerList{constructor(...items){items.forEach(p=>this.add(p))}[Symbol.iterator](){let i=0;const arr=this.values();return{next:()=>({value:arr[i++],done:i>arr.length})}}get size(){return this.values().length}add(player){this[player.id]=player}remove(player){delete this["number"==typeof player?player:player.id]}get(predicate){if(void 0!==predicate){if("number"==typeof predicate)return this[predicate];for(const player of this)if(predicate(player))return player}}getAll(predicate){var players=new PlayerList;for(const player of this)predicate(player)&&players.add(player);return players}values(){return Object.values(this)}order(room){var orderedList=this.values();const playerList=room.native.getPlayerList();return orderedList.sort((a,b)=>playerList.findIndex(p=>p.id===a.id)-playerList.findIndex(p=>p.id===b.id)),[...orderedList]}first(){return this.values()[0]}last(){return this.values().pop()}getByName(name){return this.getAll(player=>player.name===name)}getByAuth(auth){return this.getAll(player=>player.auth===auth)}getByConnOrIP(connOrIP){var _a;return null!=(_a=this.getAll(player=>player.conn===connOrIP))?_a:this.getAll(player=>player.ip===connOrIP)}kick(reason){this.values().forEach(player=>player.kick(reason))}ban(reason){this.values().forEach(player=>player.ban(reason))}spectators(){return this.getAll(player=>player.team===Global_1.Teams.Spectators)}red(){return this.getAll(player=>player.team===Global_1.Teams.Red)}blue(){return this.getAll(player=>player.team===Global_1.Teams.Blue)}teams(){return this.getAll(player=>player.team!==Global_1.Teams.Spectators)}admins(){return this.getAll(player=>player.admin)}reply(message){for(const player of this)player.reply(message)}toString(){return this.values().map(p=>`${p.name} (${p.id})`).join(", ")}}exports.PlayerList=PlayerList},{"./Global":10,"./types":21}],14:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createEvent=exports.createCommand=exports.createPlugin=void 0,require("@abraham/reflection"),exports.createPlugin=function(target){Reflect.defineMetadata("her:plugin",!0,target)},exports.createCommand=function(options){return(target,key,descriptor)=>{var commands=Reflect.getMetadata("her:commands",target),key=Object.assign({name:key,func:descriptor.value},options);commands?commands.push(key):Reflect.defineMetadata("her:commands",[key],target)}};exports.createEvent=(target,key,descriptor)=>{var events=Reflect.getMetadata("her:events",target),key={name:key,func:descriptor.value};events?events.push(key):Reflect.defineMetadata("her:events",[key],target)}},{"@abraham/reflection":1}],15:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Role=exports.AdminRole=void 0;const Global_1=require("./Global"),Settings_1=require("./Settings");exports.AdminRole="admin";exports.Role=class{constructor(name){this.admin=!1,this.color=Global_1.Colors.White,this.prefix="",this.override=!1,this.position=0,this.settings=new Settings_1.Settings,this.name=null!=name?name:""}setName(name){return this.name=name,this}setAdmin(){return this.admin=!0,this}setColor(color){return this.color=color,this}setPrefix(prefix){return this.prefix=prefix,this}setOverride(){return this.override=!0,this}setPosition(position){return this.position=position,this}}},{"./Global":10,"./Settings":18}],16:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RoleList=void 0,require("./types");exports.RoleList=class{constructor(){this.adminRoles=[],this.playerRoles=[]}get roles(){return[...this.adminRoles,...this.playerRoles]}add(role){return(role.admin?this.adminRoles:this.playerRoles).push(role),this}remove(role){const roleName="string"==typeof role?role:role.name;this.adminRoles=this.adminRoles.filter(r=>r.name!==roleName),this.playerRoles=this.playerRoles.filter(r=>r.name!==roleName)}get(role){const roleName="string"==typeof role?role:role.name;return this.roles.find(r=>r.name===roleName)}has(role){const roleName="string"==typeof role?role:role.name;return!!this.roles.find(r=>r.name===roleName)}}},{"./types":21}],17:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){o[k2=void 0===k2?k:k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Room=void 0,require("@abraham/reflection"),require("./types");const Logger=__importStar(require("./Logger")),Player_1=require("./Player"),Command_1=require("./Command"),Disc_1=require("./Disc"),PlayerList_1=require("./PlayerList"),CommandList_1=require("./CommandList"),CommandArgument_1=require("./CommandArgument"),ConnHistory=__importStar(require("./ConnectionHistory")),Global_1=require("./Global"),Settings_1=require("./Settings"),events_1=require("events");exports.Room=class{constructor(roomConfig){var _a;if(this._discs=[],this._plugins=[],this.CollisionFlags={all:63,ball:1,blue:4,blueKO:16,c0:268435456,c1:536870912,c2:1073741824,c3:-2147483648,kick:64,red:2,redKO:8,score:128,wall:32},this.settings=new Settings_1.Settings,this.customEvents=new events_1.EventEmitter,this.logging=!0,this._insufficientPermissionsMessage={message:"You're not allowed to use this command!",color:Global_1.Colors.Red,style:Global_1.ChatStyle.Bold,sound:Global_1.ChatSounds.Notification},this._playerCommandCooldownMessage={message:"Don't type commands too fast!",color:Global_1.Colors.Red,style:Global_1.ChatStyle.Bold,sound:Global_1.ChatSounds.Notification},this._defaultPrefix="!",this._paused=!1,this._desconstructMessage=message=>message.slice(this.prefix.length).trim().split(/ +/),this._getCommandName=message=>this._desconstructMessage(message)[0].toLowerCase(),this._getArguments=message=>this._desconstructMessage(message).slice(1),void 0!==window.room)throw new Error("Cannot instantiate twice!");null==roomConfig.noPlayer&&(roomConfig.noPlayer=!0),this._room=window.HBInit(roomConfig),this.name=roomConfig.roomName,this.playerName=roomConfig.playerName,this.maxPlayers=roomConfig.maxPlayers,this.geo=roomConfig.geo,this.token=roomConfig.token,this.noPlayer=null==(_a=roomConfig.noPlayer)||_a,this._password=null!=(_a=roomConfig.password)?_a:null,this._players=new PlayerList_1.PlayerList,this._commands=new CommandList_1.CommandList(this._defaultPrefix),this.prefix=this._defaultPrefix,this._setAllEvents(),this._initialMessage(),window.room=this,window.Colors=Global_1.Colors,window.ChatSounds=Global_1.ChatSounds,window.ChatStyle=Global_1.ChatStyle,window.Teams=Global_1.Teams,window.Stadiums=Global_1.Stadiums}_setKickEvent(){this._room.onPlayerKicked=(kickedPlayer,reason,ban,byPlayer)=>{this.logging&&Logger.log({message:kickedPlayer.name+` was ${ban?"banned":"kicked"} `+(byPlayer?`by ${byPlayer.name} `:"")+(reason?`(${reason})`:""),color:Global_1.Colors.Haxball}),ban?this._runEvent("onPlayerBanned",this._onPlayerBannedFunction,kickedPlayer,reason,byPlayer):this._runEvent("onPlayerKicked",this._onPlayerKickedFunction,kickedPlayer,reason,byPlayer)}}_setAllEvents(){this.onGamePause=()=>{},this.onGameStart=()=>{},this.onGameStop=()=>{},this.onGameTick=()=>{},this.onGameUnpause=()=>{},this.onKickRateLimitSet=()=>{},this.onPlayerActivity=()=>{},this.onPlayerAdminChange=()=>{},this.onPlayerBallKick=()=>{},this.onPlayerBanned=()=>{},this.onPlayerChat=()=>!0,this.onPlayerJoin=()=>{},this.onPlayerKicked=()=>{},this.onPlayerLeave=()=>{},this.onPlayerTeamChange=()=>{},this.onPositionsReset=()=>{},this.onRoomLink=()=>{},this.onStadiumChange=()=>{},this.onTeamGoal=()=>{},this.onTeamVictory=()=>{},this.onPlayerGeoLocationFetch=()=>{},this.onPlayerRunCommand=()=>{}}_runEvent(name,func,...args){this._plugins.forEach(plugin=>{plugin.events.forEach(event=>{event.name===name&&event.func(...args)})}),func(...args)}_initialMessage(){Logger.anonymous("%cHaxball Extended Room","color:#233E82; display: block;font-weight:bold; font-size:38px; background:#fff;"),Logger.anonymous("%cA better API for Haxball","color:#222; font-family:'Ubuntu'; font-weight:100; font-size:24px; background:#fff;")}set onPlayerBallKick(func){this._room.onPlayerBallKick=p=>this._runEvent("onPlayerBallKick",func,this.players[p.id])}set onPlayerKicked(func){this._onPlayerKickedFunction=func,this._setKickEvent()}set onPlayerBanned(func){this._onPlayerBannedFunction=func,this._setKickEvent()}set onGameTick(func){this._room.onGameTick=()=>this._runEvent("onGameTick",func)}set onTeamGoal(func){this._room.onTeamGoal=team=>this._runEvent("onTeamGoal",func,team)}set onPositionsReset(func){this._room.onPositionsReset=()=>this._runEvent("onPositionsReset",func)}set onPlayerActivity(func){this._room.onPlayerActivity=p=>this._runEvent("onPlayerActivity",func,this.players[p.id])}set onRoomLink(func){this._room.onRoomLink=link=>this._runEvent("onRoomLink",func,link)}set onKickRateLimitSet(func){this._room.onKickRateLimitSet=(m,r,b,bP)=>this._runEvent("onKickRateLimitSet",func,m,r,b,this.players[null==bP?void 0:bP.id])}set onPlayerJoin(func){this._room.onPlayerJoin=p=>{const player=new Player_1.Player(this,p);this.players.add(player),player.fetchGeoLocation().then(()=>{const playerInfo={id:player.id,auth:player.auth,name:player.name,joinedAt:new Date(Date.now())};ConnHistory.get(player.ip).then(history=>{history?(history.players.push(playerInfo),ConnHistory.set(history)):ConnHistory.set({ip:player.ip,geo:player.geolocation,players:[playerInfo]})}),this._onPlayerGeoLocationFetchFunction(player)}).catch(e=>{console.error("Unable to fetch player's geolocation",e)}),this.logging&&Logger.log({message:player.name+" has joined",color:Global_1.Colors.Haxball}),this._runEvent("onPlayerJoin",func,player)}}set onPlayerLeave(func){this._room.onPlayerLeave=p=>{p=this.players[p.id];this.players.remove(p),this.logging&&Logger.log({message:p.name+" has left",color:Global_1.Colors.Haxball}),this._runEvent("onPlayerLeave",func,p)}}set onTeamVictory(func){this._room.onTeamVictory=scores=>{var teamWon;this.logging&&(teamWon=scores.red>scores.blue?"Red":"Blue",Logger.log({message:teamWon+" team won the match",color:Global_1.Colors.Haxball})),this._runEvent("onTeamVictory",func,scores)}}set onPlayerChat(func){this._room.onPlayerChat=(p,msg)=>{const player=this.players[p.id],command=this._commands.get(this._getCommandName(msg));let commandRun=null;if(msg[0]===this.prefix&&command&&player.canUseCommands){if(!player.canRunCommandsCooldown())return player.reply(this._playerCommandCooldownMessage),!1;if(!command.isAllowed(player))return player.reply(this._insufficientPermissionsMessage),!1;const args=this._getArguments(msg).map(arg=>new CommandArgument_1.CommandArgument(arg));if(commandRun=()=>{var execInfo={player:player,at:new Date(Date.now()),message:msg,room:this,arguments:args};command.run(execInfo),this._onPlayerRunCommandFunction(player,command,execInfo)},player.updateCooldown(),command.deleteMessage)return commandRun(),!1}for(const plugin of this._plugins)for(const event of plugin.events)if("onPlayerChat"===event.name&&!1===event.func(player,msg))return commandRun&&commandRun(),!1;if(!1===func(player,msg))return commandRun&&commandRun(),!1;this.logging&&(player.admin?Logger.admin({message:msg},player):Logger.chat({message:msg},player)),commandRun&&commandRun()}}set onGameStart(func){this._room.onGameStart=p=>{p=this.players[null==p?void 0:p.id];this.logging&&Logger.log({message:"Game started "+(p?"by "+p.name:""),color:Global_1.Colors.Haxball});for(let i=0;i<this.discCount-this.players.teams().size;i++)this._discs.push(new Disc_1.Disc(this,i));this._runEvent("onGameStart",func,p)}}set onGameStop(func){this._room.onGameStop=bP=>{this._paused=!1;bP=this.players[null==bP?void 0:bP.id];this.logging&&Logger.log({message:"Game stopped "+(bP?"by "+bP.name:""),color:Global_1.Colors.Haxball}),this._discs=[],this._runEvent("onGameStop",func,bP)}}set onPlayerAdminChange(func){this._room.onPlayerAdminChange=(cP,bP)=>{cP=this.players[cP.id],bP=this.players[null==bP?void 0:bP.id];this.logging&&(cP.admin?Logger.log({message:cP.name+" was given admin rights "+(bP?"by "+bP.name:""),color:Global_1.Colors.Haxball}):Logger.log({message:cP.name+"'s admin rights were taken away "+(bP?"by "+bP.name:""),color:Global_1.Colors.Haxball})),this._runEvent("onPlayerAdminChange",func,cP,bP)}}set onPlayerTeamChange(func){this._room.onPlayerTeamChange=(cP,bP)=>{cP=this.players[cP.id],bP=this.players[null==bP?void 0:bP.id];if(this.logging){let team="";cP.team===Global_1.Teams.Red&&(team="Red"),cP.team===Global_1.Teams.Blue&&(team="Blue"),cP.team===Global_1.Teams.Spectators&&(team="Spectators"),Logger.log({message:`${cP.name} was moved to ${team} `+(bP?"by "+bP.name:""),color:Global_1.Colors.Haxball})}this._runEvent("onPlayerTeamChange",func,cP,bP)}}set onGamePause(func){this._room.onGamePause=bP=>{this._paused=!0;bP=this.players[null==bP?void 0:bP.id];this.logging&&Logger.log({message:"Game paused "+(bP?"by "+bP.name:""),color:Global_1.Colors.Haxball}),this._runEvent("onGamePause",func,bP)}}set onGameUnpause(func){this._room.onGameUnpause=bP=>{this._paused=!1,this._runEvent("onGameUnpause",func,this.players[null==bP?void 0:bP.id])}}set onStadiumChange(func){this._room.onStadiumChange=(newStadiumName,bP)=>{bP=this.players[null==bP?void 0:bP.id];this.logging&&Logger.log({message:`Stadium "${newStadiumName}" loaded `+(bP?"by "+bP.name:""),color:Global_1.Colors.Haxball}),this._runEvent("onStadiumChange",func,newStadiumName,bP)}}set onPlayerGeoLocationFetch(func){this._onPlayerGeoLocationFetchFunction=player=>this._runEvent("onPlayerGeoLocationFetch",func,player)}set onPlayerRunCommand(func){this._onPlayerRunCommandFunction=(player,command,info)=>this._runEvent("onPlayerRunCommand",func,player,command,info)}set noPermissionMessage(message){this._insufficientPermissionsMessage=message}set commandCooldownMessage(message){this._playerCommandCooldownMessage=message}get players(){return this._players}get discs(){return this._discs}get scores(){return this._room.getScores()}get ball(){return this.discs[0]}get discCount(){return this._room.getDiscCount()}get commands(){return this._commands.list}get password(){return this._password}get prefix(){return this._commands.prefix}set prefix(value){this._commands.prefix=value}get plugins(){return this._plugins}get native(){return this._room}get paused(){return this._paused}command(options){this._commands.add(new Command_1.Command(options))}removeCommand(name){this._commands.remove(name)}plugin(Plugin,options){if(!Reflect.getMetadata("her:plugin",Plugin))throw new Error("The given argument is not a valid plugin.");const plugin=new Plugin(this,null==options?void 0:options.settings,(original,name,...params)=>{if(null!=options&&options.languagePack)for(var[strName,str]of Object.entries(options.languagePack))if(strName===name)return[str,...params].reduce((p,c)=>p.replace(/%%/,c));return[original,...params].reduce((p,c)=>p.replace(/%%/,c))});var commands=Reflect.getMetadata("her:commands",Plugin.prototype)||[],events=Reflect.getMetadata("her:events",Plugin.prototype)||[];return events.map(e=>(e.func=e.func.bind(plugin),e)),commands.forEach(command=>{command.func=command.func.bind(plugin),this.command(command)}),this._plugins.push({name:Plugin.name,commands:commands,events:events}),this}removePlugin(pluginOrName){const name="string"!=typeof pluginOrName?pluginOrName.name:pluginOrName;null!=(pluginOrName=this._plugins.find(p=>p.name===name))&&pluginOrName.commands.forEach(c=>{var cmd=this._commands.get(c.name);cmd&&c.name===(null==cmd?void 0:cmd.name)&&c.func===(null==cmd?void 0:cmd.func)&&this._commands.remove(c.name)}),this._plugins=this._plugins.filter(p=>p.name!==name)}isGameInProgress(){return null!=this.scores}chat(message,playerID){var _a;if(playerID&&null!=(_a=this.players[playerID])&&_a.canReadChat&&this._room.sendChat(message,playerID),!playerID)for(const player of this.players)player.canReadChat&&this._room.sendChat(message,player.id)}unban(id){this._room.clearBan(id)}unbanAll(){this._room.clearBans()}setScoreLimit(limit){this._room.setScoreLimit(limit)}setTimeLimit(limit){this._room.setTimeLimit(limit)}setStadium(stadium){"object"==typeof stadium&&this._room.setCustomStadium(JSON.stringify(stadium)),"string"==typeof stadium&&this._room.setDefaultStadium(stadium)}lockTeams(){this._room.setTeamsLock(!0)}unlockTeams(){this._room.setTeamsLock(!1)}setTeamColors(team,teamColors){"all"===team?(this._room.setTeamColors(Global_1.Teams.Red,teamColors.angle,teamColors.textColor,teamColors.colors),this._room.setTeamColors(Global_1.Teams.Blue,teamColors.angle,teamColors.textColor,teamColors.colors)):this._room.setTeamColors(team,teamColors.angle,teamColors.textColor,teamColors.colors)}start(){this._room.startGame()}stop(){this._room.stopGame()}pause(){this._room.pauseGame(!0)}unpause(){this._room.pauseGame(!1)}startRecording(){this._room.startRecording()}stopRecording(){return this._room.stopRecording()}setPassword(password){this._password=password,this._room.setPassword(password)}clearPassword(){this._password=null,this._room.setPassword(null)}enableCaptcha(){this._room.setRequireRecaptcha(!0)}disableCaptcha(){this._room.setRequireRecaptcha(!1)}reorderPlayers(ids,moveToTop){this._room.reorderPlayers(ids,moveToTop)}send(options){var _a;if(options.targetID&&null!=(_a=this.players[options.targetID])&&_a.canReadChat&&this._room.sendAnnouncement(options.message,options.targetID,options.color,options.style,options.sound),!options.targetID)for(const player of this.players)player.canReadChat&&this._room.sendAnnouncement(options.message,player.id,options.color,options.style,options.sound);this.logging&&(options.targetID&&null!=(_a=this.players[options.targetID])&&_a.canReadChat?Logger.direct(options,this.players[options.targetID]):Logger.announcement(options))}setKickRateLimit(min,rate,burst){this._room.setKickRateLimit(min,rate,burst)}}},{"./Command":5,"./CommandArgument":6,"./CommandList":7,"./ConnectionHistory":8,"./Disc":9,"./Global":10,"./Logger":11,"./Player":12,"./PlayerList":13,"./Settings":18,"./types":21,"@abraham/reflection":1,events:2}],18:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Settings=void 0;class Settings{[Symbol.iterator](){let i=0;const arr=Object.values(this);return{next:()=>({value:arr[i++],done:i>arr.length})}}}exports.Settings=Settings},{}],19:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0})},{}],20:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){o[k2=void 0===k2?k:k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)},__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Logger=void 0,__exportStar(require("./Room"),exports),__exportStar(require("./Command"),exports),__exportStar(require("./CommandList"),exports),__exportStar(require("./Player"),exports),__exportStar(require("./PlayerList"),exports),__exportStar(require("./CommandList"),exports),__exportStar(require("./Disc"),exports),__exportStar(require("./Global"),exports),exports.Logger=__importStar(require("./Logger")),__exportStar(require("./Plugin"),exports),__exportStar(require("./Color"),exports)},{"./Color":4,"./Command":5,"./CommandList":7,"./Disc":9,"./Global":10,"./Logger":11,"./Player":12,"./PlayerList":13,"./Plugin":14,"./Room":17}],21:[function(require,module,exports){},{}],22:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var wrapIdbValue=require("./wrap-idb-value.js");const readMethods=["get","getKey","getAll","getAllKeys","count"],writeMethods=["put","add","delete","clear"],cachedMethods=new Map;function getMethod(target,prop){if(target instanceof IDBDatabase&&!(prop in target)&&"string"==typeof prop){if(cachedMethods.get(prop))return cachedMethods.get(prop);const targetFuncName=prop.replace(/FromIndex$/,""),useIndex=prop!==targetFuncName,isWrite=writeMethods.includes(targetFuncName);return targetFuncName in(useIndex?IDBIndex:IDBObjectStore).prototype&&(isWrite||readMethods.includes(targetFuncName))?(target=async function(storeName,...args){storeName=this.transaction(storeName,isWrite?"readwrite":"readonly");let target=storeName.store;return useIndex&&(target=target.index(args.shift())),(await Promise.all([target[targetFuncName](...args),isWrite&&storeName.done]))[0]},cachedMethods.set(prop,target),target):void 0}}wrapIdbValue.replaceTraps(oldTraps=>({...oldTraps,get:(target,prop,receiver)=>getMethod(target,prop)||oldTraps.get(target,prop,receiver),has:(target,prop)=>!!getMethod(target,prop)||oldTraps.has(target,prop)})),exports.unwrap=wrapIdbValue.unwrap,exports.wrap=wrapIdbValue.wrap,exports.deleteDB=function(name,{blocked}={}){return name=indexedDB.deleteDatabase(name),blocked&&name.addEventListener("blocked",()=>blocked()),wrapIdbValue.wrap(name).then(()=>{})},exports.openDB=function(name,version,{blocked,upgrade,blocking,terminated}={}){const request=indexedDB.open(name,version);return name=wrapIdbValue.wrap(request),upgrade&&request.addEventListener("upgradeneeded",event=>{upgrade(wrapIdbValue.wrap(request.result),event.oldVersion,event.newVersion,wrapIdbValue.wrap(request.transaction))}),blocked&&request.addEventListener("blocked",()=>blocked()),name.then(db=>{terminated&&db.addEventListener("close",()=>terminated()),blocking&&db.addEventListener("versionchange",()=>blocking())}).catch(()=>{}),name}},{"./wrap-idb-value.js":23}],23:[function(require,module,exports){"use strict";const instanceOfAny=(object,constructors)=>constructors.some(c=>object instanceof c);let idbProxyableTypes,cursorAdvanceMethods;const cursorRequestMap=new WeakMap,transactionDoneMap=new WeakMap,transactionStoreNamesMap=new WeakMap,transformCache=new WeakMap,reverseTransformCache=new WeakMap;let idbProxyTraps={get(target,prop,receiver){if(target instanceof IDBTransaction){if("done"===prop)return transactionDoneMap.get(target);if("objectStoreNames"===prop)return target.objectStoreNames||transactionStoreNamesMap.get(target);if("store"===prop)return receiver.objectStoreNames[1]?void 0:receiver.objectStore(receiver.objectStoreNames[0])}return wrap(target[prop])},set(target,prop,value){return target[prop]=value,!0},has(target,prop){return target instanceof IDBTransaction&&("done"===prop||"store"===prop)||prop in target}};function wrapFunction(func){return func!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(cursorAdvanceMethods=cursorAdvanceMethods||[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey]).includes(func)?function(...args){return func.apply(unwrap(this),args),wrap(cursorRequestMap.get(this))}:function(...args){return wrap(func.apply(unwrap(this),args))}:function(storeNames,...args){args=func.call(unwrap(this),storeNames,...args);return transactionStoreNamesMap.set(args,storeNames.sort?storeNames.sort():[storeNames]),wrap(args)}}function transformCachableValue(value){var tx,done;return"function"==typeof value?wrapFunction(value):(value instanceof IDBTransaction&&(tx=value,transactionDoneMap.has(tx)||(done=new Promise((resolve,reject)=>{const unlisten=()=>{tx.removeEventListener("complete",complete),tx.removeEventListener("error",error),tx.removeEventListener("abort",error)},complete=()=>{resolve(),unlisten()},error=()=>{reject(tx.error||new DOMException("AbortError","AbortError")),unlisten()};tx.addEventListener("complete",complete),tx.addEventListener("error",error),tx.addEventListener("abort",error)}),transactionDoneMap.set(tx,done))),instanceOfAny(value,idbProxyableTypes=idbProxyableTypes||[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])?new Proxy(value,idbProxyTraps):value)}function wrap(value){var request,promise;return value instanceof IDBRequest?(request=value,(promise=new Promise((resolve,reject)=>{const unlisten=()=>{request.removeEventListener("success",success),request.removeEventListener("error",error)},success=()=>{resolve(wrap(request.result)),unlisten()},error=()=>{reject(request.error),unlisten()};request.addEventListener("success",success),request.addEventListener("error",error)})).then(value=>{value instanceof IDBCursor&&cursorRequestMap.set(value,request)}).catch(()=>{}),reverseTransformCache.set(promise,request),promise):transformCache.has(value)?transformCache.get(value):((promise=transformCachableValue(value))!==value&&(transformCache.set(value,promise),reverseTransformCache.set(promise,value)),promise)}const unwrap=value=>reverseTransformCache.get(value);exports.instanceOfAny=instanceOfAny,exports.replaceTraps=function(callback){idbProxyTraps=callback(idbProxyTraps)},exports.reverseTransformCache=reverseTransformCache,exports.unwrap=unwrap,exports.wrap=wrap},{}],24:[function(require,module,exports){"use strict";var __createBinding=Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&("get"in desc?m.__esModule:!desc.writable&&!desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){o[k2=void 0===k2?k:k2]=m[k]},__setModuleDefault=Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v},__importStar=function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},haxball_extended_room_1=(Object.defineProperty(exports,"__esModule",{value:!0}),require("haxball-extended-room")),hockey_json_1=__importDefault(require("./maps/hockey.json")),insideBlueBox_1=__importDefault(require("./functions/insideBlueBox")),insideRedBox_1=__importDefault(require("./functions/insideRedBox")),Commands_1=__importDefault(require("./commands/Commands")),touchedDisc_1=__importDefault(require("./functions/touchedDisc")),penaltyDetected_1=__importDefault(require("./functions/penaltyDetected")),players_1=require("./players/players"),redTeam_1=require("./players/redTeam"),blueTeam_1=require("./players/blueTeam"),goalieIllegalTouch_1=__importStar(require("./functions/goalieIllegalTouch")),detectLastTeamTouch_1=__importStar(require("./functions/detectLastTeamTouch")),illegalTouchInRedBox_1=__importDefault(require("./functions/illegalTouchInRedBox")),illegalTouchInBlueBox_1=__importDefault(require("./functions/illegalTouchInBlueBox")),kickoff_1=__importDefault(require("./functions/kickoff")),playerBump_1=__importDefault(require("./functions/playerBump")),penaltyTimer_1=__importDefault(require("./functions/penaltyTimer")),MissedPenalty_1=__importDefault(require("./functions/MissedPenalty")),room=new haxball_extended_room_1.Room({public:!1,maxPlayers:16,roomName:"Hockey com bot"});room.onPlayerJoin=function(player){0==room.players.admins().size&&(player.admin=!0,room.setStadium(hockey_json_1.default)),player.setAvatar(player.name.replace(/[^\w\s]/gi,"").slice(0,2)),players_1.playersList.push(player)},room.onPlayerLeave=function(player){0==room.players.admins().size&&(player.id==players_1.playersList[0].id?players_1.playersList[1].admin=!0:players_1.playersList[0].admin=!0),(player.settings.goalie=0,players_1.removePlayer)(player.id)},room.onPlayerTeamChange=function(player){player.settings.goalie=0,player.setAvatar(player.name.replace(/[^\w\s]/gi,"").slice(0,2)),(0,redTeam_1.updateRedTeamPlayers)(room),(0,blueTeam_1.updateBlueTeamPlayers)(room)},room.onGameTick=function(){for(var i=0;i<redTeam_1.redTeam.length;i++)(0,goalieIllegalTouch_1.default)(redTeam_1.redTeam[i],room),(0,illegalTouchInRedBox_1.default)(redTeam_1.redTeam[i],room),(0,touchedDisc_1.default)(room,redTeam_1.redTeam[i]),(0,playerBump_1.default)(room,redTeam_1.redTeam[i]);for(var _i=0;_i<blueTeam_1.blueTeam.length;_i++)(0,goalieIllegalTouch_1.default)(blueTeam_1.blueTeam[_i],room),(0,illegalTouchInBlueBox_1.default)(blueTeam_1.blueTeam[_i],room),(0,touchedDisc_1.default)(room,blueTeam_1.blueTeam[_i]),(0,playerBump_1.default)(room,blueTeam_1.blueTeam[_i]);"penred"===room.settings.mode?((0,penaltyTimer_1.default)(room),(0,MissedPenalty_1.default)(room,"penred")):"penblue"===room.settings.mode&&((0,penaltyTimer_1.default)(room),(0,MissedPenalty_1.default)(room,"penblue"))},room.onPlayerChat=function(player,message){return message.startsWith("!")?((0,Commands_1.default)(message,player,room),!1):!room.settings.chatmuted&&void 0},room.onPlayerBallKick=function(player){1==player.team?player.settings.goalie||player.settings.penaltyGoalie?(player.settings.goalie||player.settings.penaltyGoalie)&&(0,goalieIllegalTouch_1.goalieOutsideBox)(player)&&detectLastTeamTouch_1.lastTeamTouched!==player.team&&(0,penaltyDetected_1.default)(player,"O animal tocou no disco fora da area de goleiro apos o toque do adversário",room,1):(0,insideRedBox_1.default)(player.x,player.y)&&(0,penaltyDetected_1.default)(player,"O animal pegou a bola dentro da área sem ser goleiro!",room,1):2==player.team&&(player.settings.goalie||player.settings.penaltyGoalie?(player.settings.goalie||player.settings.penaltyGoalie)&&(0,goalieIllegalTouch_1.goalieOutsideBox)(player)&&detectLastTeamTouch_1.lastTeamTouched!==player.team&&(0,penaltyDetected_1.default)(player,"O animal tocou no disco fora da area de goleiro apos o toque do adversário",room,2):(0,insideBlueBox_1.default)(player.x,player.y)&&(0,penaltyDetected_1.default)(player,"O animal pegou a bola dentro da área sem ser goleiro!",room,2)),(0,detectLastTeamTouch_1.default)(player.team)},room.onTeamGoal=function(team){room.settings.penalty&&(room.send({message:"Gol! Segue o jogo!",color:1==team?haxball_extended_room_1.Colors.Crimson:haxball_extended_room_1.Colors.CornflowerBlue,style:"bold"}),room.settings.penalty=0),room.settings.penaltyTimer=0,room.settings.disabledPenaltys=!0},room.onGameStart=function(){(room.settings.penaltyTimer=0,kickoff_1.default)(room),room.pause(),room.send({message:"Cada time tem direito a um GO.... digite !go para ser o goleiro",color:haxball_extended_room_1.Colors.Gold,style:"bold"}),room.send({message:"Ou joga sem goleiro e fdc eu não ligo...",color:haxball_extended_room_1.Colors.Gray,style:"italic"})},room.onPositionsReset=function(){(0,kickoff_1.default)(room)}},{"./commands/Commands":25,"./functions/MissedPenalty":26,"./functions/detectLastTeamTouch":29,"./functions/goalieIllegalTouch":31,"./functions/illegalTouchInBlueBox":33,"./functions/illegalTouchInRedBox":34,"./functions/insideBlueBox":35,"./functions/insideRedBox":36,"./functions/kickoff":37,"./functions/penaltyDetected":39,"./functions/penaltyTimer":40,"./functions/playerBump":41,"./functions/touchedDisc":42,"./maps/hockey.json":43,"./players/blueTeam":44,"./players/players":45,"./players/redTeam":46,"haxball-extended-room":20}],25:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},haxball_extended_room_1=(Object.defineProperty(exports,"__esModule",{value:!0}),require("haxball-extended-room")),checkForGoaliesetting_1=__importDefault(require("../functions/checkForGoaliesetting")),penaltyDetected_1=require("../functions/penaltyDetected"),kickoffAfterMissedPenalty_1=__importDefault(require("../functions/kickoffAfterMissedPenalty")),kickoff_1=__importDefault(require("../functions/kickoff"));exports.default=function(message,player,room){switch(message.toLowerCase()){case"!go":case"!gk":case"!goalie":1==player.team?(0,checkForGoaliesetting_1.default)(room.players.red(),1)?player.reply({message:"Ja tem goleiro no Red",color:haxball_extended_room_1.Colors.HotPink}):(player.settings.goalie=1,player.setAvatar("🧤"),player.reply({message:"Para remover a posição de goalie digite !li",color:haxball_extended_room_1.Colors.HotPink}),room.send({message:"".concat(player.name," é o Goalie do Red"),color:haxball_extended_room_1.Colors.Crimson})):2==player.team?(0,checkForGoaliesetting_1.default)(room.players.blue(),2)?player.reply({message:"Ja tem goleiro no Blue",color:haxball_extended_room_1.Colors.DodgerBlue}):(player.settings.goalie=2,player.setAvatar("🧤"),player.reply({message:"Para remover a posição de goalie digite !li",color:haxball_extended_room_1.Colors.DodgerBlue}),room.send({message:"".concat(player.name," é o Goalie do Blue"),color:haxball_extended_room_1.Colors.CornflowerBlue})):player.reply({message:"Tu ta no spec doidão",color:haxball_extended_room_1.Colors.DarkGoldenRod});break;case"!li":player.settings.goalie?(player.settings.goalie=0,player.setAvatar(player.name.replace(/[^\w\s]/gi,"").slice(0,2))):player.reply({message:"Tu nem era goleiro.. xiu",color:haxball_extended_room_1.Colors.DarkGoldenRod});break;case"!penred":player.admin&&(0,penaltyDetected_1.setPenaltyRed)(room);break;case"!penblue":player.admin&&(0,penaltyDetected_1.setPenaltyBlue)(room);break;case"!help":case"!commands":player.reply({message:"Comandos disponiveis: !go, !li, !penred, !penblue, !help, !disc, !resetball,!rules",color:haxball_extended_room_1.Colors.DarkGoldenRod});break;case"!resetball":case"!reset":player.admin&&(room.discs[0].x<0?(0,kickoffAfterMissedPenalty_1.default)(-500,room):0<room.discs[0].x?(0,kickoffAfterMissedPenalty_1.default)(500,room):(0,kickoff_1.default)(room));break;case"!disc":case"!discord":player.reply({message:"https://discord.gg/SHbvtrt8",color:haxball_extended_room_1.Colors.Azure,style:"bold"});break;case"!rules":case"!regras":player.reply({message:"Cada time tem direito a um(a) Goalie.",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"Goalie - Só pode pegar o disco dentro de sua própria área:",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"         - na zona de ataque (à frente do meio-campo),",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"         - na zona atrás de seu próprio gol,",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"         - ou após o toque de um(a) companheiro(a) de time.",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"Jogador(a) de linha - Não pode pegar o disco dentro da área defensiva,",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"Não pode interferir com o(a) goleiro(a) adversário(a) caso esteja dentro de sua própria área.",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"Qualquer infração causada resultará em um 'penal' para o adversário.",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"Obs.: 1 pixel do(a) jogador(a) dentro da área é considerado dentro.",color:haxball_extended_room_1.Colors.MistyRose}),player.reply({message:"         1 pixel do(a) Goalie à frente do meio-campo ou atrás do gol também é o suficiente para não ser penalizado(a).",color:haxball_extended_room_1.Colors.MistyRose});break;case"!bb":player.kick();break;default:player.reply({message:"Não entendi teu comando brother",color:haxball_extended_room_1.Colors.DarkGoldenRod})}}},{"../functions/checkForGoaliesetting":28,"../functions/kickoff":37,"../functions/kickoffAfterMissedPenalty":38,"../functions/penaltyDetected":39,"haxball-extended-room":20}],26:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},insideBlueBox_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importDefault(require("./insideBlueBox"))),kickoffAfterMissedPenalty_1=__importDefault(require("./kickoffAfterMissedPenalty")),insideRedBox_1=__importDefault(require("./insideRedBox"));exports.default=function(room,mode){switch(mode){case"penred":760<=room.discs[0].x?!(97<room.discs[0].y||room.discs[0].y<-97)||room.settings.penalty||room.settings.disabledPenaltys||(0,kickoffAfterMissedPenalty_1.default)(500,room):210<room.discs[0].y||room.discs[0].y<-210||room.discs[0].xspeed<-.5&&room.discs[0].x<760&&!(0,insideBlueBox_1.default)(room.discs[0].x,room.discs[0].y)&&60<room.settings.penaltyTimer?room.settings.penalty||room.settings.disabledPenaltys||(0,kickoffAfterMissedPenalty_1.default)(500,room):600<room.settings.penaltyTimer&&(0,kickoffAfterMissedPenalty_1.default)(500,room);break;case"penblue":room.discs[0].x<=-760?!(97<room.discs[0].y||room.discs[0].y<-97)||room.settings.penalty||room.settings.disabledPenaltys||(0,kickoffAfterMissedPenalty_1.default)(-500,room):210<room.discs[0].y||room.discs[0].y<-210||.5<room.discs[0].xspeed&&-760<room.discs[0].x&&!(0,insideRedBox_1.default)(room.discs[0].x,room.discs[0].y)&&60<room.settings.penaltyTimer?room.settings.penalty||room.settings.disabledPenaltys||(0,kickoffAfterMissedPenalty_1.default)(-500,room):600<room.settings.penaltyTimer&&(0,kickoffAfterMissedPenalty_1.default)(-500,room)}}},{"./insideBlueBox":35,"./insideRedBox":36,"./kickoffAfterMissedPenalty":38}],27:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(xSpeed,ySpeed){return Math.sqrt(Math.pow(xSpeed,2)+Math.pow(ySpeed,2))}},{}],28:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(players,teamId){for(var playerId in players){playerId=players[playerId];if(playerId.settings&&playerId.settings.goalie===teamId)return!0}return!1}},{}],29:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.lastTeamTouched=void 0,exports.lastTeamTouched=0,exports.default=function(team){exports.lastTeamTouched=team}},{}],30:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(x1,y1,x2,y2){return Math.sqrt(Math.pow(x2-x1,2)+Math.pow(y2-y1,2))}},{}],31:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},touchedDisc_1=(Object.defineProperty(exports,"__esModule",{value:!0}),exports.goalieOutsideBox=void 0,__importDefault(require("./touchedDisc"))),penaltyDetected_1=__importDefault(require("./penaltyDetected")),detectLastTeamTouch_1=require("./detectLastTeamTouch"),insideRedBox_1=__importDefault(require("./insideRedBox")),insideBlueBox_1=__importDefault(require("./insideBlueBox"));function goalieOutsideBox(player){switch(player.team){case 1:return!(0,insideRedBox_1.default)(player.x,player.y)&&player.x<-15&&-744<=player.x;case 2:return!(0,insideBlueBox_1.default)(player.x,player.y)&&15<player.x&&player.x<=744;default:return!1}}exports.default=function(player,room){var previousTouchOnDisc=detectLastTeamTouch_1.lastTeamTouched;(player.settings.goalie||player.settings.penaltyGoalie)&&(0,touchedDisc_1.default)(room,player)&&goalieOutsideBox(player)&&previousTouchOnDisc!==player.team&&(2===player.team?(0,penaltyDetected_1.default)(player,"O animal tocou no disco fora da area de goleiro apos o toque do adversário",room,2):1===player.team&&(0,penaltyDetected_1.default)(player,"O animal tocou no disco fora da area de goleiro apos o toque do adversário",room,1))},exports.goalieOutsideBox=goalieOutsideBox},{"./detectLastTeamTouch":29,"./insideBlueBox":35,"./insideRedBox":36,"./penaltyDetected":39,"./touchedDisc":42}],32:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(xInitial,yInitial,xVelocity,yVelocity,team){return-97<(xInitial=yInitial+yVelocity*(team=((2==team?760:-760)-xInitial)/xVelocity))&&xInitial<97&&team<80}},{}],33:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},insideBlueBox_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importDefault(require("./insideBlueBox"))),penaltyDetected_1=__importDefault(require("./penaltyDetected")),touchedDisc_1=__importDefault(require("./touchedDisc"));exports.default=function(player,room){!(0,insideBlueBox_1.default)(player.x,player.y)||player.settings.goalie||2===player.settings.penaltyGoalie||(0,touchedDisc_1.default)(room,player)&&(0,penaltyDetected_1.default)(player,"O animal pegou a bola dentro da área sem ser goleiro!",room,2)}},{"./insideBlueBox":35,"./penaltyDetected":39,"./touchedDisc":42}],34:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},insideRedBox_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importDefault(require("./insideRedBox"))),penaltyDetected_1=__importDefault(require("./penaltyDetected")),touchedDisc_1=__importDefault(require("./touchedDisc"));exports.default=function(player,room){!(0,insideRedBox_1.default)(player.x,player.y)||player.settings.goalie||1===player.settings.penaltyGoalie||(0,touchedDisc_1.default)(room,player)&&(0,penaltyDetected_1.default)(player,"O animal pegou a bola dentro da área sem ser goleiro!",room,1)}},{"./insideRedBox":36,"./penaltyDetected":39,"./touchedDisc":42}],35:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},distanceBetweenDots_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importDefault(require("./distanceBetweenDots")));exports.default=function(x,y){return!(760<x)&&(0,distanceBetweenDots_1.default)(x,y,757,0)<=124}},{"./distanceBetweenDots":30}],36:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},distanceBetweenDots_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importDefault(require("./distanceBetweenDots")));exports.default=function(x,y){return!(x<-760)&&(0,distanceBetweenDots_1.default)(x,y,-757,0)<=124}},{"./distanceBetweenDots":30}],37:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var blueTeam_1=require("../players/blueTeam"),redTeam_1=require("../players/redTeam");exports.default=function(room){var redPlayerSorted=0,bluePlayerSorted=0,disc=(room.settings.mode="game",room.settings.disabledPenaltys=!1,room.discs[0]);for(disc.x=0,disc.y=0,disc.xspeed=0,disc.yspeed=0;0<redTeam_1.redTeam.length;){var randomIndex=Math.floor(Math.random()*redTeam_1.redTeam.length),randomIndex=redTeam_1.redTeam.splice(randomIndex,1)[0];randomIndex.settings.penaltyGoalie&&(randomIndex.setAvatar(randomIndex.name.replace(/[^\w\s]/gi,"").slice(0,2)),randomIndex.settings.penaltyGoalie=0),randomIndex.settings.goalie?(randomIndex.x=-666,randomIndex.y=0,randomIndex.xspeed=0,randomIndex.yspeed=0):(0==redPlayerSorted?(randomIndex.x=-40,randomIndex.y=0,randomIndex.xspeed=0,randomIndex.yspeed=0):1==redPlayerSorted?(randomIndex.x=-20,randomIndex.y=-150,randomIndex.xspeed=0,randomIndex.yspeed=0):2==redPlayerSorted?(randomIndex.x=-20,randomIndex.y=150,randomIndex.xspeed=0,randomIndex.yspeed=0):3==redPlayerSorted?(randomIndex.x=-150,randomIndex.y=0,randomIndex.xspeed=0,randomIndex.yspeed=0):4==redPlayerSorted&&(randomIndex.x=-600,randomIndex.y=0,randomIndex.xspeed=0,randomIndex.yspeed=0),redPlayerSorted++)}for((0,redTeam_1.updateRedTeamPlayers)(room);0<blueTeam_1.blueTeam.length;){var _randomIndex=Math.floor(Math.random()*blueTeam_1.blueTeam.length),_randomIndex=blueTeam_1.blueTeam.splice(_randomIndex,1)[0];_randomIndex.settings.penaltyGoalie&&(_randomIndex.setAvatar(_randomIndex.name.replace(/[^\w\s]/gi,"").slice(0,2)),_randomIndex.settings.penaltyGoalie=0),_randomIndex.settings.goalie?(_randomIndex.x=666,_randomIndex.y=0,_randomIndex.xspeed=0,_randomIndex.yspeed=0):(0==bluePlayerSorted?(_randomIndex.x=40,_randomIndex.y=0,_randomIndex.xspeed=0,_randomIndex.yspeed=0):1==bluePlayerSorted?(_randomIndex.x=20,_randomIndex.y=150,_randomIndex.xspeed=0,_randomIndex.yspeed=0):2==bluePlayerSorted?(_randomIndex.x=20,_randomIndex.y=-150,_randomIndex.xspeed=0,_randomIndex.yspeed=0):3==bluePlayerSorted?(_randomIndex.x=150,_randomIndex.y=0,_randomIndex.xspeed=0,_randomIndex.yspeed=0):4==bluePlayerSorted&&(_randomIndex.x=600,_randomIndex.y=0,_randomIndex.xspeed=0,_randomIndex.yspeed=0),bluePlayerSorted++)}(0,blueTeam_1.updateBlueTeamPlayers)(room)}},{"../players/blueTeam":44,"../players/redTeam":46}],38:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var haxball_extended_room_1=require("haxball-extended-room"),redTeam_1=require("../players/redTeam"),blueTeam_1=require("../players/blueTeam");exports.default=function(xAxis,room){var redPlayerSorted=0,bluePlayerSorted=0,topOrBottom=(room.settings.penaltyTimer=0,room.settings.mode="game",room.pause(),room.send({message:"Penalty perdido!",color:0<xAxis?haxball_extended_room_1.Colors.Crimson:haxball_extended_room_1.Colors.CornflowerBlue}),room.unpause(),.5<=Math.random()?1:-1),disc=room.discs[0];switch(xAxis){case 500:for(disc.x=500,disc.y=210*topOrBottom,disc.xspeed=0,disc.yspeed=0;0<redTeam_1.redTeam.length;){var randomIndex=Math.floor(Math.random()*redTeam_1.redTeam.length),randomIndex=redTeam_1.redTeam.splice(randomIndex,1)[0];randomIndex.settings.goalie?(randomIndex.x=0,randomIndex.y=130*topOrBottom,randomIndex.xspeed=0,randomIndex.yspeed=0):(0==redPlayerSorted?(randomIndex.x=460,randomIndex.y=210*topOrBottom,randomIndex.xspeed=0,randomIndex.yspeed=0):1==redPlayerSorted?(randomIndex.x=390,randomIndex.y=100*topOrBottom,randomIndex.xspeed=0,randomIndex.yspeed=0):2==redPlayerSorted?(randomIndex.x=380,randomIndex.y=310*topOrBottom,randomIndex.xspeed=0,randomIndex.yspeed=0):3==redPlayerSorted?(randomIndex.x=220,randomIndex.y=210*topOrBottom,randomIndex.xspeed=0,randomIndex.yspeed=0):4==redPlayerSorted&&(randomIndex.x=0,randomIndex.y=130*topOrBottom,randomIndex.xspeed=0,randomIndex.yspeed=0),redPlayerSorted++)}for((0,redTeam_1.updateRedTeamPlayers)(room);0<blueTeam_1.blueTeam.length;){var _randomIndex=Math.floor(Math.random()*blueTeam_1.blueTeam.length),_randomIndex=blueTeam_1.blueTeam.splice(_randomIndex,1)[0];_randomIndex.settings.penaltyGoalie&&(_randomIndex.setAvatar(_randomIndex.name.replace(/[^\w\s]/gi,"").slice(0,2)),_randomIndex.settings.penaltyGoalie=0),_randomIndex.settings.goalie?(_randomIndex.x=670,_randomIndex.y=55*topOrBottom,_randomIndex.xspeed=0,_randomIndex.yspeed=0):(0==bluePlayerSorted?(_randomIndex.x=540,_randomIndex.y=210*topOrBottom,_randomIndex.xspeed=0,_randomIndex.yspeed=0):1==bluePlayerSorted?(_randomIndex.x=610,_randomIndex.y=100*topOrBottom,_randomIndex.xspeed=0,_randomIndex.yspeed=0):2==bluePlayerSorted?(_randomIndex.x=620,_randomIndex.y=310*topOrBottom,_randomIndex.xspeed=0,_randomIndex.yspeed=0):3==bluePlayerSorted?(_randomIndex.x=510,_randomIndex.y=50*topOrBottom,_randomIndex.xspeed=0,_randomIndex.yspeed=0):4==bluePlayerSorted&&(_randomIndex.x=640,_randomIndex.y=130*topOrBottom,_randomIndex.xspeed=0,_randomIndex.yspeed=0),bluePlayerSorted++)}(0,blueTeam_1.updateBlueTeamPlayers)(room);break;case-500:for(disc.x=-500,disc.y=210*topOrBottom,disc.xspeed=0,disc.yspeed=0;0<blueTeam_1.blueTeam.length;){var _randomIndex2=Math.floor(Math.random()*blueTeam_1.blueTeam.length),_randomIndex2=blueTeam_1.blueTeam.splice(_randomIndex2,1)[0];_randomIndex2.settings.goalie?(_randomIndex2.x=0,_randomIndex2.y=130*topOrBottom,_randomIndex2.xspeed=0,_randomIndex2.yspeed=0):(0==bluePlayerSorted?(_randomIndex2.x=-460,_randomIndex2.y=210*topOrBottom,_randomIndex2.xspeed=0,_randomIndex2.yspeed=0):1==bluePlayerSorted?(_randomIndex2.x=-390,_randomIndex2.y=100*topOrBottom,_randomIndex2.xspeed=0,_randomIndex2.yspeed=0):2==bluePlayerSorted?(_randomIndex2.x=-380,_randomIndex2.y=310*topOrBottom,_randomIndex2.xspeed=0,_randomIndex2.yspeed=0):3==bluePlayerSorted?(_randomIndex2.x=-220,_randomIndex2.y=210*topOrBottom,_randomIndex2.xspeed=0,_randomIndex2.yspeed=0):4==bluePlayerSorted&&(_randomIndex2.x=0,_randomIndex2.y=130*topOrBottom,_randomIndex2.xspeed=0,_randomIndex2.yspeed=0),bluePlayerSorted++)}for((0,blueTeam_1.updateBlueTeamPlayers)(room);0<redTeam_1.redTeam.length;){var _randomIndex3=Math.floor(Math.random()*redTeam_1.redTeam.length),_randomIndex3=redTeam_1.redTeam.splice(_randomIndex3,1)[0];_randomIndex3.settings.penaltyGoalie&&(_randomIndex3.settings.penaltyGoalie=0,_randomIndex3.setAvatar(_randomIndex3.name.replace(/[^\w\s]/gi,"").slice(0,2))),_randomIndex3.settings.goalie?(_randomIndex3.x=-670,_randomIndex3.y=55*topOrBottom,_randomIndex3.xspeed=0,_randomIndex3.yspeed=0):(0==redPlayerSorted?(_randomIndex3.x=-540,_randomIndex3.y=210*topOrBottom,_randomIndex3.xspeed=0,_randomIndex3.yspeed=0):1==redPlayerSorted?(_randomIndex3.x=-610,_randomIndex3.y=100*topOrBottom,_randomIndex3.xspeed=0,_randomIndex3.yspeed=0):2==redPlayerSorted?(_randomIndex3.x=-620,_randomIndex3.y=310*topOrBottom,_randomIndex3.xspeed=0,_randomIndex3.yspeed=0):3==redPlayerSorted?(_randomIndex3.x=-510,_randomIndex3.y=50*topOrBottom,_randomIndex3.xspeed=0,_randomIndex3.yspeed=0):4==redPlayerSorted&&(_randomIndex3.x=-640,_randomIndex3.y=130*topOrBottom,_randomIndex3.xspeed=0,_randomIndex3.yspeed=0),redPlayerSorted++)}(0,redTeam_1.updateRedTeamPlayers)(room)}}},{"../players/blueTeam":44,"../players/redTeam":46,"haxball-extended-room":20}],39:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},haxball_extended_room_1=(Object.defineProperty(exports,"__esModule",{value:!0}),exports.setPenaltyBlue=exports.setPenaltyRed=void 0,require("haxball-extended-room")),redTeam_1=require("../players/redTeam"),blueTeam_1=require("../players/blueTeam"),checkForGoaliesetting_1=__importDefault(require("./checkForGoaliesetting"));function setPenaltyRed(room){room.settings.mode="penred";var disc=room.discs[0];disc.x=130,disc.y=0,disc.xspeed=0,disc.yspeed=0;for(var i=room.settings.penaltyTimer=0;i<redTeam_1.redTeam.length;i++)redTeam_1.redTeam[i].x=-70,redTeam_1.redTeam[i].y=50*(i-2);if((0,checkForGoaliesetting_1.default)(room.players.blue(),2))for(var _i=0;_i<blueTeam_1.blueTeam.length;_i++)blueTeam_1.blueTeam[_i].settings.goalie?(blueTeam_1.blueTeam[_i].y=0,blueTeam_1.blueTeam[_i].x=666,blueTeam_1.blueTeam[_i].xspeed=0,blueTeam_1.blueTeam[_i].yspeed=0):blueTeam_1.blueTeam[_i].y=500;else{for(var _i2=0;_i2<blueTeam_1.blueTeam.length;_i2++)blueTeam_1.blueTeam[_i2].y=500;disc=Math.floor(Math.random()*redTeam_1.redTeam.length);blueTeam_1.blueTeam[disc].x=666,blueTeam_1.blueTeam[disc].y=0,blueTeam_1.blueTeam[disc].xspeed=0,blueTeam_1.blueTeam[disc].yspeed=0,blueTeam_1.blueTeam[disc].settings.penaltyGoalie=2,blueTeam_1.blueTeam[disc].setAvatar("🥊")}}function setPenaltyBlue(room){room.settings.mode="penblue";var disc=room.discs[0];room.settings.penaltyTimer=0,disc.x=-130,disc.y=0,disc.xspeed=0;for(var i=disc.yspeed=0;i<blueTeam_1.blueTeam.length;i++)blueTeam_1.blueTeam[i].x=70,blueTeam_1.blueTeam[i].y=50*(i-2);if((0,checkForGoaliesetting_1.default)(room.players.red(),1))for(var _i3=0;_i3<redTeam_1.redTeam.length;_i3++)redTeam_1.redTeam[_i3].settings.goalie?(redTeam_1.redTeam[_i3].y=0,redTeam_1.redTeam[_i3].x=-666,redTeam_1.redTeam[_i3].xspeed=0,redTeam_1.redTeam[_i3].yspeed=0):redTeam_1.redTeam[_i3].y=500;else{for(var _i4=0;_i4<redTeam_1.redTeam.length;_i4++)redTeam_1.redTeam[_i4].y=500;disc=Math.floor(Math.random()*redTeam_1.redTeam.length);redTeam_1.redTeam[disc].x=-666,redTeam_1.redTeam[disc].y=0,redTeam_1.redTeam[disc].xspeed=0,redTeam_1.redTeam[disc].yspeed=0,redTeam_1.redTeam[disc].settings.penaltyGoalie=1,redTeam_1.redTeam[disc].setAvatar("🥊")}}exports.default=function(player,penalty,room,team){room.settings.penalty||room.settings.disabledPenaltys||(room.send({message:"Penalty by ".concat(player.name,"!"),color:1==team?haxball_extended_room_1.Colors.Crimson:haxball_extended_room_1.Colors.CornflowerBlue,style:"bold"}),room.send({message:"".concat(penalty),color:1==team?haxball_extended_room_1.Colors.Crimson:haxball_extended_room_1.Colors.CornflowerBlue,style:"bold"})),room.settings.penalty=team,room.settings.disabledPenaltys||setTimeout(function(){2===room.settings.penalty?setPenaltyRed(room):1===room.settings.penalty&&setPenaltyBlue(room),room.settings.penalty=0},2e3)},exports.setPenaltyRed=setPenaltyRed,exports.setPenaltyBlue=setPenaltyBlue},{"../players/blueTeam":44,"../players/redTeam":46,"./checkForGoaliesetting":28,"haxball-extended-room":20}],40:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(room){room.settings.penaltyTimer++}},{}],41:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},haxball_extended_room_1=(Object.defineProperty(exports,"__esModule",{value:!0}),require("haxball-extended-room")),blueTeam_1=require("../players/blueTeam"),redTeam_1=require("../players/redTeam"),insideBlueBox_1=__importDefault(require("./insideBlueBox")),insideRedBox_1=__importDefault(require("./insideRedBox")),calculateTotalSpeed_1=__importDefault(require("./calculateTotalSpeed")),headingTowardsGoal_1=__importDefault(require("./headingTowardsGoal")),penaltyDetected_1=require("./penaltyDetected");exports.default=function(room,player){for(var disc=room.discs[0],i=0;i<redTeam_1.redTeam.length;i++)player.distanceTo(redTeam_1.redTeam[i])<1&&player.id!==redTeam_1.redTeam[i].id&&2===player.team&&(redTeam_1.redTeam[i].settings.goalie||redTeam_1.redTeam[i].settings.penaltyGoalie)&&(0,insideRedBox_1.default)(redTeam_1.redTeam[i].x,redTeam_1.redTeam[i].y)&&.2<=(0,calculateTotalSpeed_1.default)(player.xspeed,player.yspeed)&&(0,headingTowardsGoal_1.default)(disc.x,disc.y,disc.xspeed,disc.yspeed,1)&&(disc.xspeed=0,disc.x=130,room.pause(),room.unpause(),room.settings.disabledPenaltys||((0,penaltyDetected_1.setPenaltyRed)(room),room.send({message:"Penalty by ".concat(player.name,"!"),color:haxball_extended_room_1.Colors.CornflowerBlue,style:"bold"}),room.send({message:"O animal bateu no Goleiro adversário",color:haxball_extended_room_1.Colors.CornflowerBlue,style:"bold"})));for(var _i=0;_i<blueTeam_1.blueTeam.length;_i++)player.distanceTo(blueTeam_1.blueTeam[_i])<1&&player.id!==blueTeam_1.blueTeam[_i].id&&1===player.team&&(blueTeam_1.blueTeam[_i].settings.goalie||blueTeam_1.blueTeam[_i].settings.penaltyGoalie)&&(0,insideBlueBox_1.default)(blueTeam_1.blueTeam[_i].x,blueTeam_1.blueTeam[_i].y)&&.2<=(0,calculateTotalSpeed_1.default)(player.xspeed,player.yspeed)&&(0,headingTowardsGoal_1.default)(disc.x,disc.y,disc.xspeed,disc.yspeed,2)&&(room.pause(),room.unpause(),room.settings.disabledPenaltys||(disc.x=-130,disc.y=0,disc.xspeed=0,(disc.yspeed=0,penaltyDetected_1.setPenaltyBlue)(room),room.send({message:"Penalty by ".concat(player.name,"!"),color:haxball_extended_room_1.Colors.Crimson,style:"bold"}),room.send({message:"O animal bateu no Goleiro adversário",color:haxball_extended_room_1.Colors.Crimson,style:"bold"})))}},{"../players/blueTeam":44,"../players/redTeam":46,"./calculateTotalSpeed":27,"./headingTowardsGoal":32,"./insideBlueBox":35,"./insideRedBox":36,"./penaltyDetected":39,"haxball-extended-room":20}],42:[function(require,module,exports){"use strict";var __importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}},detectLastTeamTouch_1=(Object.defineProperty(exports,"__esModule",{value:!0}),__importDefault(require("./detectLastTeamTouch")));exports.default=function(room,player){return room.discs[0].distanceTo(player)<1&&((0,detectLastTeamTouch_1.default)(player.team),!0)}},{"./detectLastTeamTouch":29}],43:[function(require,module,exports){module.exports={name:"NHL    Staples Center 1G from HaxMaps",width:1040,height:550,spawnDistance:170,bg:{type:"hockey",height:470,width:1e3,cornerRadius:200,kickOffRadius:0},vertexes:[{x:-800,y:-470,bCoef:-1.4,cMask:["ball"],curve:0,color:"CC3300"},{x:800,y:-470,bCoef:.5,cMask:["red"],curve:90},{x:-800,y:470,bCoef:-1.4,cMask:["ball"],color:"CC3300"},{x:800,y:470,bCoef:-1.4,cMask:["ball"],curve:-90},{x:-1e3,y:-270,bCoef:-1.4,cMask:["ball"],curve:0},{x:-1e3,y:270,bCoef:-1.4,cMask:["ball"],curve:0},{x:1e3,y:-270,bCoef:-1.4,cMask:["ball"],curve:90},{x:1e3,y:270,bCoef:-1.4,cMask:["ball"],curve:-90},{x:-757,y:97,bCoef:-.7,cMask:["ball"]},{x:-790,y:97,bCoef:-.7,cMask:["ball"],curve:-90,color:"000000"},{x:-757,y:-97,bCoef:-.7,cMask:["ball"]},{x:-790,y:-97,bCoef:-.7,cMask:["ball"],curve:90,color:"000000"},{x:-810,y:-70,bCoef:-.7,cMask:["ball"],curve:90,color:"000000"},{x:-810,y:70,bCoef:-.7,cMask:["ball"],curve:-90,color:"000000"},{x:-760,y:-467,cMask:["none"],color:"000000"},{x:-760,y:467,cMask:["none"],color:"000000"},{x:757,y:-97,bCoef:-.7,cMask:["ball"],p0:[760,-90],p1:[760,90]},{x:790,y:-97,bCoef:-.7,cMask:["ball"],curve:-90,color:"000000"},{x:757,y:97,bCoef:-.7,cMask:["ball"],p0:[760,-90],p1:[760,90]},{x:790,y:97,bCoef:-.7,cMask:["ball"],curve:90,color:"000000"},{x:810,y:70,bCoef:-.7,cMask:["ball"],curve:90,color:"000000"},{x:810,y:-70,bCoef:-.7,cMask:["ball"],curve:-90,color:"000000"},{x:760,y:-467,cMask:["none"],color:"000000"},{x:760,y:467,cMask:["none"],color:"000000"},{x:0,y:-470,cMask:["none"],color:"000000"},{x:0,y:470,cMask:["none"],color:"000000"},{x:-230,y:-470,cMask:["none"],color:"818181"},{x:-230,y:470,cMask:["none"],color:"818181"},{x:0,y:-130,cMask:["none"],color:"818181",curve:-180},{x:0,y:130,cMask:["none"],color:"818181",curve:-180},{x:-500,y:80,cMask:["none"],color:"000088",curve:-180},{x:-500,y:340,cMask:["none"],color:"000088",curve:-180},{x:500,y:-340,cMask:["none"],color:"880000",curve:-180},{x:500,y:-80,cMask:["none"],color:"880000",curve:-180},{x:500,y:80,cMask:["none"],color:"880000",curve:-180},{x:500,y:340,cMask:["none"],color:"880000",curve:-180},{x:-500,y:-340,cMask:["none"],color:"000088",curve:-180},{x:-500,y:-80,cMask:["none"],color:"000088",curve:-180},{x:0,y:-2,cMask:["none"],color:"818181",curve:-180},{x:0,y:6,cMask:["none"],color:"818181",curve:-180},{x:0,y:0,cMask:["none"],color:"818181",curve:-180},{x:0,y:4,cMask:["none"],color:"818181",curve:-180},{x:0,y:0,cMask:["none"],color:"818181",curve:-180},{x:0,y:4,cMask:["none"],color:"818181",curve:-180},{x:-757,y:-90,cMask:["none"],curve:180},{x:-757,y:110,cMask:["none"],curve:180},{x:-757,y:-107,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-107,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-107,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:107,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-104,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:104,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-101,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:101,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-98,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:98,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-95,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:95,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-92,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:92,cMask:["none"],curve:180,color:"0850A2"},{x:-757,y:-89,cMask:["none"],curve:180,color:"0850A2"},{x:757,y:101.536516602,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:-100.463423548,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:98.5365174904,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:-97.4634244364,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:95.5365183793,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:-94.4634253253,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:92.5365192682,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:-91.4634262142,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:103,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:-103,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:106,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:-106,cMask:["none"],curve:180,color:"0850A2",p0:[760,-90],p1:[760,90]},{x:757,y:109,cMask:["none"],curve:180,color:"000088",p0:[760,-90],p1:[760,90]},{x:757,y:-109,cMask:["none"],curve:180,color:"000088",p0:[760,-90],p1:[760,90]},{x:800,y:-470,bCoef:-1.2,cMask:["ball"],curve:0,color:"818181",vis:!0},{x:1e3,y:-270,bCoef:.5,cMask:["red","blue"],curve:90,color:"818181",vis:!0},{x:1e3,y:-270,bCoef:.5,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:1e3,y:270,bCoef:.5,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:800,y:470,bCoef:.5,cMask:["red","blue"],curve:-90,color:"818181",vis:!0},{x:1e3,y:270,bCoef:.5,cMask:["red","blue"],curve:-90,color:"818181",vis:!0},{x:-800,y:470,bCoef:.5,cMask:["red","blue"],color:"818181",curve:0,vis:!0},{x:800,y:470,bCoef:.5,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:-800,y:470,bCoef:.5,cMask:["red","blue"],color:"818181",curve:-90,vis:!0},{x:-1e3,y:270,bCoef:.5,cMask:["red","blue"],curve:-90,color:"818181",vis:!0},{x:-1e3,y:-270,bCoef:0,cMask:["red","blue"],curve:0},{x:-800,y:-470,bCoef:.5,cMask:["blue"],curve:-90,color:"818181",vis:!1},{x:-1e3,y:-270,bCoef:.5,cMask:["red","blue"],curve:-90,color:"818181",vis:!0},{x:-757,y:97,bCoef:.7,cMask:["red","blue"],curve:0},{x:-790,y:97,bCoef:.7,cMask:["red","blue"],curve:-90,color:"000000"},{x:-757,y:-97,bCoef:.7,cMask:["red","blue"],curve:0},{x:-790,y:-97,bCoef:.7,cMask:["red","blue"],curve:90,color:"000000"},{x:-810,y:-70,bCoef:.7,cMask:["red","blue"],curve:0,color:"000000"},{x:-810,y:70,bCoef:.7,cMask:["red","blue"],curve:-90,color:"000000"},{x:757,y:-97,bCoef:.7,cMask:["red","blue"],p0:[760,-90],p1:[760,90],curve:0},{x:790,y:-97,bCoef:.7,cMask:["red","blue"],curve:-90,color:"000000"},{x:757,y:97,bCoef:.7,cMask:["red","blue"],p0:[760,-90],p1:[760,90],curve:0},{x:790,y:97,bCoef:.7,cMask:["red","blue"],curve:90,color:"000000"},{x:810,y:70,bCoef:.7,cMask:["red","blue"],curve:90,color:"000000"},{x:810,y:-70,bCoef:.7,cMask:["red","blue"],curve:-90,color:"000000"},{x:230,y:-470,cMask:["none"],color:"818181"},{x:230,y:470,cMask:["none"],color:"818181"},{x:-757,y:109,cMask:["none"],curve:-180,color:"880000",p0:[760,-90],p1:[760,90]},{x:-757,y:-109,cMask:["none"],curve:-180,color:"880000",p0:[760,-90],p1:[760,90]},{x:-1e3,y:-270,bCoef:.5,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:-1e3,y:270,bCoef:.5,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:-800,y:470,cMask:["ball"]},{x:800,y:470,cMask:["ball"]},{x:799,y:-470,bCoef:.5,cMask:["red"],curve:0,color:"000000",vis:!1},{x:-750,y:-470,bCoef:0,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:750,y:-470,bCoef:0,cMask:["red","blue"],curve:0,color:"818181",vis:!0},{x:-750,y:-550,bCoef:0,cMask:["red","blue"],vis:!0},{x:750,y:-550,bCoef:0,cMask:["red","blue"],vis:!0},{x:-750,y:470,bCoef:0,cMask:["ball"]},{x:-750,y:550,bCoef:0,cMask:["ball"]},{x:750,y:470,bCoef:0,cMask:["ball"]},{x:750,y:550,bCoef:0,cMask:["ball"]},{x:-1001,y:64,bCoef:0,cMask:["red","blue"],color:"818181",curve:90},{x:-1042,y:61,bCoef:0,cMask:["red","blue"],color:"818181",curve:90},{x:-1040,y:-273,bCoef:0,cMask:["red","blue"],curve:90,color:"818181"},{x:-796,y:-505,bCoef:0,cMask:["wall"],curve:0,color:"818181"},{x:-751,y:-503,bCoef:0,cMask:["wall"],curve:90,color:"818181"},{x:750,y:-470,bCoef:0,cMask:["red","blue"],curve:-90,color:"818181",vis:!0},{x:751,y:-503,bCoef:0,cMask:["red","blue"],curve:-90,color:"818181"},{x:796,y:-505,bCoef:0,cMask:["wall"],curve:0,color:"000000"},{x:751,y:-503,bCoef:0,cMask:["wall"],curve:90,color:"000000"},{x:1040,y:-273,bCoef:0,cMask:["red","blue"],curve:-90,color:"818181"},{x:796,y:-505,bCoef:0,cMask:["red","blue"],curve:-90,color:"818181"},{x:1042,y:61,bCoef:0,cMask:["red","blue"],color:"818181",curve:90},{x:1040,y:-273,bCoef:0,cMask:["red","blue"],curve:90,color:"818181"},{x:1001,y:64,bCoef:0,cMask:["red","blue"],color:"818181",curve:-90},{x:1042,y:61,bCoef:0,cMask:["red","blue"],color:"818181",curve:-90},{x:-744,y:-475,bCoef:-.6,cMask:["ball"],curve:97,color:"EEDD82"},{x:743,y:-474,bCoef:-.6,cMask:["ball"],curve:-95,color:"818181"},{x:-800,y:475,bCoef:-.6,cMask:["ball"],curve:90,color:"818181"},{x:800,y:475,bCoef:-.6,cMask:["ball"],color:"818181"},{x:-1007,y:267,bCoef:-.6,cMask:["ball"],curve:0,color:"818181"},{x:800,y:475,bCoef:-.6,cMask:["ball"],curve:-90,color:"818181"},{x:1007,y:267,bCoef:-.6,cMask:["ball"],curve:0,color:"818181"},{x:-1007,y:68,bCoef:-.6,cMask:["ball"],curve:0,color:"818181"},{x:1007,y:68,bCoef:-.6,cMask:["ball"],curve:0,color:"818181"},{x:-1006,y:-271,bCoef:-.6,cMask:["ball"],curve:97,color:"EEDD82"},{x:1006,y:-271,bCoef:-.6,cMask:["ball"],curve:-95,color:"818181"},{x:-745,y:478},{x:745,y:478},{x:-15,y:-485,cMask:["ball"],color:"818181"},{x:15,y:-485,cMask:["ball"],color:"818181"},{x:-20,y:485,cMask:["ball"]},{x:20,y:485,cMask:["ball"]},{x:-25,y:-485,cMask:["ball"],color:"818181"},{x:25,y:-485,cMask:["ball"],color:"818181"},{x:-29,y:483,cMask:["ball"]},{x:29,y:483,cMask:["ball"]},{x:-55,y:-485,cMask:["ball"],color:"818181"},{x:55,y:-485,cMask:["ball"],color:"818181"},{x:-57,y:483,cMask:["ball"]},{x:57,y:483,cMask:["ball"]},{x:-55,y:-525,cMask:["ball"],color:"818181"},{x:-25,y:-525,cMask:["ball"],color:"818181"},{x:-15,y:-525,cMask:["ball"],color:"818181"},{x:15,y:-525,cMask:["ball"],color:"818181"},{x:25,y:-525,cMask:["ball"],color:"818181"},{x:15,y:-505,cMask:["ball"],color:"818181"},{x:-15,y:-505,cMask:["ball"],color:"818181"},{x:65,y:-485,cMask:["ball"],color:"000000",curve:0},{x:65,y:-515,cMask:["ball"],color:"000000",curve:220},{x:65,y:-500,cMask:["ball"],color:"000000",curve:0},{x:90,y:-485,cMask:["ball"],color:"000000",curve:260},{x:90,y:-515,cMask:["ball"],color:"000000",curve:220},{x:90,y:-500,cMask:["ball"],color:"000000",curve:260},{x:115,y:-485,cMask:["ball"],color:"000000",curve:260},{x:115,y:-515,cMask:["ball"],color:"000000",curve:220},{x:115,y:-500,cMask:["ball"],color:"000000",curve:25},{x:125,y:-485,cMask:["ball"],color:"000000",curve:25},{x:85,y:-485,cMask:["ball"],color:"000000",curve:0},{x:110,y:-485,cMask:["ball"],color:"000000",curve:260},{x:110,y:-500,cMask:["ball"],color:"000000",curve:260},{x:110,y:-515,cMask:["ball"],color:"000000",curve:220},{x:85,y:-500,cMask:["ball"],color:"000000",curve:0},{x:90,y:-485,cMask:["ball"],color:"000000",curve:0},{x:91,y:-516,cMask:["ball"],color:"000000",curve:220},{x:90,y:-500,cMask:["ball"],color:"000000",curve:0},{x:115,y:-485,cMask:["ball"],color:"000000",curve:260},{x:115,y:-515,cMask:["ball"],color:"000000",curve:220},{x:115,y:-500,cMask:["ball"],color:"000000",curve:260},{x:110,y:-485,cMask:["ball"],color:"000000",curve:0},{x:110,y:-500,cMask:["ball"],color:"000000",curve:0},{x:135,y:-515,cMask:["ball"]},{x:135,y:-485,cMask:["ball"],color:"000000",curve:260},{x:760,y:210,cMask:[],color:"818181",curve:0,vis:!0},{x:230,y:210,cMask:[],color:"818181",curve:0,vis:!0},{x:760,y:-210,cMask:[],vis:!0},{x:230,y:-210,cMask:[],vis:!0},{x:-760,y:-210,cMask:[],vis:!0},{x:-230,y:-210,cMask:[],vis:!0},{x:-760,y:210,cMask:[],vis:!0},{x:-230,y:210,cMask:[],vis:!0},{x:500,y:211.5,cMask:[],curve:180,color:"000088"},{x:500,y:208.5,cMask:[],curve:180,color:"000088"},{x:500,y:213,cMask:[],curve:180,color:"000088"},{x:500,y:207,cMask:[],curve:180,color:"000088"},{x:500,y:214,cMask:[],curve:180,color:"000000"},{x:500,y:206,cMask:[],curve:180,color:"000000"},{x:500,y:-211.5,cMask:[],curve:180,color:"000088"},{x:500,y:-208.5,cMask:[],curve:180,color:"000088"},{x:500,y:-213,cMask:[],curve:180,color:"000088"},{x:500,y:-207,cMask:[],curve:180,color:"000088"},{x:500,y:-214,cMask:[],curve:180,color:"000000"},{x:500,y:-206,cMask:[],curve:180,color:"000000"},{x:-500,y:211.5,cMask:[],curve:180,color:"880000"},{x:-500,y:208.5,cMask:[],curve:180,color:"880000"},{x:-500,y:213,cMask:[],curve:180,color:"880000"},{x:-500,y:207,cMask:[],curve:180,color:"880000"},{x:-500,y:214,cMask:[],curve:180,color:"000000"},{x:-500,y:206,cMask:[],curve:180,color:"000000"},{x:-500,y:-211.5,cMask:[],curve:180,color:"880000"},{x:-500,y:-208.5,cMask:[],curve:180,color:"880000"},{x:-500,y:-213,cMask:[],curve:180,color:"880000"},{x:-500,y:-207,cMask:[],curve:180,color:"880000"},{x:-500,y:-214,cMask:[],curve:180,color:"000000"},{x:-500,y:-206,cMask:[],curve:180,color:"000000"}],segments:[{v0:2,v1:3,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:189,v1:190,curve:0,vis:!0,color:"818181",cMask:[],y:210},{v0:191,v1:192,curve:0,vis:!0,color:"818181",cMask:[],y:-210},{v0:193,v1:194,curve:0,vis:!0,color:"818181",cMask:[]},{v0:195,v1:196,curve:0,vis:!0,color:"818181",cMask:[],y:210},{v0:4,v1:5,curve:0,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"],x:-1e3},{v0:6,v1:7,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:0,v1:4,curve:-90,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:5,v1:2,curve:-90,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:3,v1:7,curve:-90,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:1,v1:6,curve:90,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:8,v1:9,vis:!0,bCoef:-.7,cMask:["ball"],y:97},{v0:10,v1:11,vis:!0,bCoef:-.7,cMask:["ball"],y:-97},{v0:12,v1:13,vis:!0,color:"000000",bCoef:-.7,cMask:["ball"]},{v0:13,v1:9,curve:-90,vis:!0,color:"000000",bCoef:-.7,cMask:["ball"]},{v0:12,v1:11,curve:90,vis:!0,color:"000000",bCoef:-.7,cMask:["ball"]},{v0:14,v1:15,curve:0,vis:!0,color:"000000",cMask:["none"]},{v0:16,v1:17,vis:!0,bCoef:-.7,cMask:["ball"],y:-97},{v0:18,v1:19,vis:!0,bCoef:-.7,cMask:["ball"],y:97},{v0:20,v1:21,vis:!0,color:"000000",bCoef:-.7,cMask:["ball"],x:810},{v0:21,v1:17,curve:-90,vis:!0,color:"000000",bCoef:-.7,cMask:["ball"]},{v0:20,v1:19,curve:90,vis:!0,color:"000000",bCoef:-.7,cMask:["ball"]},{v0:22,v1:23,curve:0,vis:!0,color:"000000",cMask:["none"],x:760},{v0:24,v1:25,curve:0,vis:!0,color:"000000",cMask:["none"],x:0},{v0:26,v1:27,curve:0,vis:!0,color:"818181",cMask:["none"],x:-230},{v0:28,v1:29,curve:-180,vis:!0,color:"818181",cMask:["none"],x:-230},{v0:28,v1:29,curve:180,vis:!0,color:"818181",cMask:["none"]},{v0:30,v1:31,curve:-180,vis:!0,color:"000088",cMask:["none"],x:-230},{v0:30,v1:31,curve:180,vis:!0,color:"000088",cMask:["none"]},{v0:32,v1:33,curve:-180,vis:!0,color:"880000",cMask:["none"],x:-230},{v0:32,v1:33,curve:180,vis:!0,color:"880000",cMask:["none"]},{v0:34,v1:35,curve:-180,vis:!0,color:"880000",cMask:["none"],x:-230},{v0:34,v1:35,curve:180,vis:!0,color:"880000",cMask:["none"]},{v0:36,v1:37,curve:-180,vis:!0,color:"000088",cMask:["none"],x:-230},{v0:36,v1:37,curve:180,vis:!0,color:"000088",cMask:["none"]},{v0:38,v1:39,curve:-180,vis:!0,color:"818181",cMask:["none"],x:0},{v0:38,v1:39,curve:180,vis:!0,color:"818181",cMask:["none"],x:0},{v0:40,v1:41,curve:-180,vis:!0,color:"818181",cMask:["none"],x:0},{v0:40,v1:41,curve:180,vis:!0,color:"818181",cMask:["none"],x:0},{v0:42,v1:43,curve:-180,vis:!0,color:"818181",cMask:["none"],x:0},{v0:42,v1:43,curve:180,vis:!0,color:"818181",cMask:["none"],x:0},{v0:73,v1:74,curve:180,vis:!0,color:"000088",cMask:["c0"],x:757,p0:[760,-90],p1:[760,90]},{v0:75,v1:76,curve:90,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:77,v1:78,curve:0,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:79,v1:80,curve:-90,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:81,v1:82,curve:0,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:84,v1:83,curve:-90,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:86,v1:87,curve:-90,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:88,v1:89,curve:0,vis:!0,bCoef:0,cMask:["red","blue"],y:97},{v0:90,v1:91,curve:0,vis:!0,bCoef:0,cMask:["red","blue"],y:-97},{v0:92,v1:93,curve:0,vis:!0,color:"000000",bCoef:0,cMask:["red","blue"]},{v0:93,v1:89,curve:-90,vis:!0,color:"000000",bCoef:0,cMask:["red","blue"]},{v0:92,v1:91,curve:90,vis:!0,color:"000000",bCoef:.7,cMask:["red","blue"]},{v0:94,v1:95,curve:0,vis:!0,bCoef:0,cMask:["red","blue"],y:-97},{v0:96,v1:97,curve:0,vis:!0,bCoef:0,cMask:["red","blue"],y:97},{v0:98,v1:99,curve:0,vis:!0,color:"000000",bCoef:0,cMask:["red","blue"],x:810},{v0:99,v1:95,curve:-90,vis:!0,color:"000000",bCoef:0,cMask:["red","blue"]},{v0:98,v1:97,curve:90,vis:!0,color:"000000",bCoef:.7,cMask:["red","blue"]},{v0:100,v1:101,curve:.5066145090743968,vis:!0,color:"818181",cMask:["none"],x:230},{v0:102,v1:103,curve:-180,vis:!0,color:"880000",cMask:["c0"],x:-757,p0:[760,-90],p1:[760,90]},{v0:104,v1:105,curve:0,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"],x:-1e3},{v0:83,v1:106,vis:!1,color:"FF0000",cMask:["ball"]},{v0:82,v1:107,vis:!1,color:"FF0000",cMask:["ball"]},{v0:0,v1:75,curve:0,vis:!1,color:"FF0000",bCoef:-1.2,cMask:["ball"]},{v0:109,v1:110,curve:0,vis:!0,color:"818181",bCoef:.5,cMask:["red","blue"]},{v0:110,v1:108,curve:0,vis:!0,color:"000000",bCoef:.5,cMask:["red"]},{v0:86,v1:109,curve:0,vis:!0,color:"000000",bCoef:.5,cMask:["blue"]},{v0:117,v1:118,curve:90,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:118,v1:119,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:119,v1:120,curve:90,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:120,v1:121,curve:0,vis:!0,color:"000000",bCoef:0,cMask:["wall"]},{v0:121,v1:109,curve:90,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:123,v1:122,curve:-90,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:124,v1:125,curve:0,vis:!0,color:"000000",bCoef:0,cMask:["wall"]},{v0:126,v1:127,curve:-90,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:128,v1:129,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:130,v1:131,curve:-90,vis:!0,color:"818181",bCoef:0,cMask:["red","blue"]},{v0:132,v1:133,vis:!0,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:134,v1:135,vis:!0,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:134,v1:136,curve:90,vis:!0,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:137,v1:138,curve:-90,vis:!0,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:136,v1:139,curve:0,vis:!0,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:138,v1:140,curve:0,vis:!0,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:139,v1:141,curve:0,vis:!1,color:"006400",bCoef:-.6,cMask:["ball"]},{v0:140,v1:142,curve:0,vis:!1,color:"006400",bCoef:-.6,cMask:["ball"]},{v0:141,v1:132,curve:97,vis:!1,color:"EEDD82",bCoef:-.6,cMask:["ball"]},{v0:142,v1:133,curve:-95,vis:!1,color:"818181",bCoef:-.6,cMask:["ball"]},{v0:157,v1:153,curve:0,vis:!0,color:"818181"},{v0:157,v1:149,curve:0,vis:!0,color:"818181"},{v0:149,v1:158,curve:0,vis:!0,color:"818181"},{v0:159,v1:145,curve:0,vis:!0,color:"818181",cMask:["ball"]},{v0:160,v1:146,curve:0,vis:!0,color:"818181",cMask:["ball"]},{v0:150,v1:154,curve:0,vis:!0,color:"818181",cMask:["ball"]},{v0:163,v1:162,curve:0,vis:!0,color:"818181",cMask:["ball"]},{v0:161,v1:150,curve:0,vis:!0,color:"818181",cMask:["ball"]},{v0:171,v1:170,curve:0,vis:!0,color:"000000",x:115},{v0:181,v1:186,curve:220,vis:!0,color:"000000",cMask:["ball"]},{v0:181,v1:179,curve:0,vis:!0,color:"000000",cMask:["ball"]},{v0:186,v1:185,curve:0,vis:!0,color:"000000",cMask:["ball"]},{v0:181,v1:186,curve:0,vis:!0,color:"000000",cMask:["ball"]},{v0:165,v1:164,vis:!0,color:"000000",cMask:["ball"]},{v0:164,v1:174,vis:!0,color:"000000",cMask:["ball"]},{v0:184,v1:187,vis:!0,color:"000000",cMask:["ball"]},{v0:184,v1:188,vis:!0,color:"000000",cMask:["ball"]},{v0:201,v1:202,curve:180,color:"000000",cMask:[]},{v0:202,v1:201,curve:180,color:"000000",cMask:[]},{v0:197,v1:198,curve:180,color:"000088",cMask:[]},{v0:198,v1:197,curve:180,color:"000088",cMask:[]},{v0:199,v1:200,curve:180,color:"000088",cMask:[]},{v0:200,v1:199,curve:180,color:"000088",cMask:[]},{v0:207,v1:208,curve:180,color:"000000",cMask:[]},{v0:208,v1:207,curve:180,color:"000000",cMask:[]},{v0:203,v1:204,curve:180,color:"000088",cMask:[]},{v0:204,v1:203,curve:180,color:"000088",cMask:[]},{v0:205,v1:206,curve:180,color:"000088",cMask:[]},{v0:206,v1:205,curve:180,color:"000088",cMask:[]},{v0:213,v1:214,curve:180,color:"000000",cMask:[]},{v0:214,v1:213,curve:180,color:"000000",cMask:[]},{v0:209,v1:210,curve:180,color:"880000",cMask:[]},{v0:210,v1:209,curve:180,color:"880000",cMask:[]},{v0:211,v1:212,curve:180,color:"880000",cMask:[]},{v0:212,v1:211,curve:180,color:"880000",cMask:[]},{v0:219,v1:220,curve:180,color:"000000",cMask:[]},{v0:220,v1:219,curve:180,color:"000000",cMask:[]},{v0:215,v1:216,curve:180,color:"880000",cMask:[]},{v0:216,v1:215,curve:180,color:"880000",cMask:[]},{v0:217,v1:218,curve:180,color:"880000",cMask:[]},{v0:218,v1:217,curve:180,color:"880000",cMask:[]}],goals:[{p0:[-760,95],p1:[-760,-95],team:"red",cMask:["ball"],bCoef:1,x:-757},{p0:[760,97],p1:[760,-97],team:"blue",cMask:["ball"],bCoef:1}],discs:[{radius:6,invMass:0,pos:[-760,-97],color:"C0C0C0",bCoef:-.7,cMask:["ball"],x:-757},{radius:6,invMass:0,pos:[-760,97],color:"C0C0C0",bCoef:-.7,cMask:["ball"],x:-757},{radius:6,invMass:0,pos:[760,97],color:"C0C0C0",bCoef:-.7,cMask:["ball"]},{radius:6,invMass:0,pos:[760,-97],color:"C0C0C0",bCoef:-.7,cMask:["ball"]},{radius:6,invMass:0,pos:[-760,-97],color:"C0C0C0",bCoef:.7,cMask:["red","blue"],x:-757},{radius:6,invMass:0,pos:[-760,97],color:"C0C0C0",bCoef:.7,cMask:["red","blue"],x:-757},{radius:6,invMass:0,pos:[760,97],color:"C0C0C0",bCoef:.7,cMask:["red","blue"]},{radius:6,invMass:0,pos:[760,-97],color:"C0C0C0",bCoef:.7,cMask:["red","blue"]}],planes:[{normal:[0,1],dist:-473,bCoef:-1.2,cMask:["ball"],color:"EEDD82"},{normal:[0,-1],dist:-472,bCoef:-1.2,cMask:["ball"],color:"EEDD82"},{normal:[0,-1],dist:-549,bCoef:-.6,cMask:["ball"]},{normal:[0,1],dist:-547,bCoef:-.6,cMask:["ball"]},{normal:[.99990162134,-.0140266760509],dist:-998.098191562,bCoef:-1.2,cMask:["ball"],color:"EEDD82"},{normal:[-1,0],dist:-1039,bCoef:-.6,cMask:["ball"]},{normal:[1,0],dist:-1039,bCoef:-.6,cMask:["ball"]},{normal:[-1,0],dist:-1001,bCoef:-1.2,cMask:["ball"],color:"EEDD82"},{normal:[.5,.5],dist:-960,cMask:["ball"]},{normal:[-.5,.5],dist:-960,cMask:["ball"]},{normal:[-.5,-.5],dist:-960,cMask:["ball"]},{normal:[.5,-.5],dist:-960,cMask:["ball"]},{normal:[-1,0],dist:760,bCoef:0,cMask:["c0"]},{normal:[1,0],dist:760,bCoef:0,cMask:["c1"]},{normal:[-1,0],dist:-280,bCoef:0,cMask:["c2"]},{normal:[1,0],dist:-280,bCoef:0,cMask:["c3"]}],traits:{ballArea:{vis:!1,bCoef:1,cMask:["ball"]},goalPost:{radius:8,invMass:0,bCoef:.5},goalNet:{vis:!0,bCoef:.1,cMask:["ball"]},kickOffBarrier:{vis:!1,bCoef:.1,cGroup:["redKO","blueKO"],cMask:["red","blue"]}},ballPhysics:{color:"000000",radius:6.5,damping:.996,invMass:1.5,bCoef:-.5},playerPhysics:{damping:.982,kickStrength:3.5,kickingDamping:.974,kickingAcceleration:.069,bCoef:1,acceleration:.079},joints:[],redSpawnPoints:[],blueSpawnPoints:[]}},{}],44:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.updateBlueTeamPlayers=exports.blueTeam=void 0,exports.blueTeam=[],exports.updateBlueTeamPlayers=function(room){for(var playerId in exports.blueTeam=[],room.players.blue()){playerId=room.players.blue()[playerId];exports.blueTeam.push(playerId)}}},{}],45:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.removePlayer=exports.playersList=void 0,exports.playersList=[],exports.removePlayer=function(id){exports.playersList=exports.playersList.filter(function(item){return item.id!==id})}},{}],46:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.updateRedTeamPlayers=exports.redTeam=void 0,exports.redTeam=[],exports.updateRedTeamPlayers=function(room){for(var playerId in exports.redTeam=[],room.players.red()){playerId=room.players.red()[playerId];exports.redTeam.push(playerId)}}},{}]},{},[24]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvQGFicmFoYW0vcmVmbGVjdGlvbi9kaXN0L2luZGV4LnVtZC5qcyIsIm5vZGVfbW9kdWxlcy9ldmVudHMvZXZlbnRzLmpzIiwibm9kZV9tb2R1bGVzL2hheGJhbGwtZXh0ZW5kZWQtcm9vbS9kaXN0L0Fic3RyYWN0RGlzYy5qcyIsIm5vZGVfbW9kdWxlcy9oYXhiYWxsLWV4dGVuZGVkLXJvb20vZGlzdC9Db2xvci5qcyIsIm5vZGVfbW9kdWxlcy9oYXhiYWxsLWV4dGVuZGVkLXJvb20vZGlzdC9Db21tYW5kLmpzIiwibm9kZV9tb2R1bGVzL2hheGJhbGwtZXh0ZW5kZWQtcm9vbS9kaXN0L0NvbW1hbmRBcmd1bWVudC5qcyIsIm5vZGVfbW9kdWxlcy9oYXhiYWxsLWV4dGVuZGVkLXJvb20vZGlzdC9Db21tYW5kTGlzdC5qcyIsIm5vZGVfbW9kdWxlcy9oYXhiYWxsLWV4dGVuZGVkLXJvb20vZGlzdC9Db25uZWN0aW9uSGlzdG9yeS5qcyIsIm5vZGVfbW9kdWxlcy9oYXhiYWxsLWV4dGVuZGVkLXJvb20vZGlzdC9EaXNjLmpzIiwibm9kZV9tb2R1bGVzL2hheGJhbGwtZXh0ZW5kZWQtcm9vbS9kaXN0L0dsb2JhbC5qcyIsIm5vZGVfbW9kdWxlcy9oYXhiYWxsLWV4dGVuZGVkLXJvb20vZGlzdC9Mb2dnZXIuanMiLCJub2RlX21vZHVsZXMvaGF4YmFsbC1leHRlbmRlZC1yb29tL2Rpc3QvUGxheWVyLmpzIiwibm9kZV9tb2R1bGVzL2hheGJhbGwtZXh0ZW5kZWQtcm9vbS9kaXN0L1BsYXllckxpc3QuanMiLCJub2RlX21vZHVsZXMvaGF4YmFsbC1leHRlbmRlZC1yb29tL2Rpc3QvUGx1Z2luLmpzIiwibm9kZV9tb2R1bGVzL2hheGJhbGwtZXh0ZW5kZWQtcm9vbS9kaXN0L1JvbGUuanMiLCJub2RlX21vZHVsZXMvaGF4YmFsbC1leHRlbmRlZC1yb29tL2Rpc3QvUm9sZUxpc3QuanMiLCJub2RlX21vZHVsZXMvaGF4YmFsbC1leHRlbmRlZC1yb29tL2Rpc3QvUm9vbS5qcyIsIm5vZGVfbW9kdWxlcy9oYXhiYWxsLWV4dGVuZGVkLXJvb20vZGlzdC9TZXR0aW5ncy5qcyIsIm5vZGVfbW9kdWxlcy9oYXhiYWxsLWV4dGVuZGVkLXJvb20vZGlzdC9oZWFkbGVzcy5qcyIsIm5vZGVfbW9kdWxlcy9oYXhiYWxsLWV4dGVuZGVkLXJvb20vZGlzdC9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9pZGIvYnVpbGQvY2pzL2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL2lkYi9idWlsZC9janMvd3JhcC1pZGItdmFsdWUuanMiLCJzcmMvYm90LnRzIiwic3JjL2NvbW1hbmRzL0NvbW1hbmRzLnRzIiwic3JjL2Z1bmN0aW9ucy9NaXNzZWRQZW5hbHR5LnRzIiwic3JjL2Z1bmN0aW9ucy9jYWxjdWxhdGVUb3RhbFNwZWVkLnRzIiwic3JjL2Z1bmN0aW9ucy9jaGVja0ZvckdvYWxpZXNldHRpbmcudHMiLCJzcmMvZnVuY3Rpb25zL2RldGVjdExhc3RUZWFtVG91Y2gudHMiLCJzcmMvZnVuY3Rpb25zL2Rpc3RhbmNlQmV0d2VlbkRvdHMudHMiLCJzcmMvZnVuY3Rpb25zL2dvYWxpZUlsbGVnYWxUb3VjaC50cyIsInNyYy9mdW5jdGlvbnMvaGVhZGluZ1Rvd2FyZHNHb2FsLnRzIiwic3JjL2Z1bmN0aW9ucy9pbGxlZ2FsVG91Y2hJbkJsdWVCb3gudHMiLCJzcmMvZnVuY3Rpb25zL2lsbGVnYWxUb3VjaEluUmVkQm94LnRzIiwic3JjL2Z1bmN0aW9ucy9pbnNpZGVCbHVlQm94LnRzIiwic3JjL2Z1bmN0aW9ucy9pbnNpZGVSZWRCb3gudHMiLCJzcmMvZnVuY3Rpb25zL2tpY2tvZmYudHMiLCJzcmMvZnVuY3Rpb25zL2tpY2tvZmZBZnRlck1pc3NlZFBlbmFsdHkudHMiLCJzcmMvZnVuY3Rpb25zL3BlbmFsdHlEZXRlY3RlZC50cyIsInNyYy9mdW5jdGlvbnMvcGVuYWx0eVRpbWVyLnRzIiwic3JjL2Z1bmN0aW9ucy9wbGF5ZXJCdW1wLnRzIiwic3JjL2Z1bmN0aW9ucy90b3VjaGVkRGlzYy50cyIsInNyYy9tYXBzL2hvY2tleS5qc29uIiwic3JjL3BsYXllcnMvYmx1ZVRlYW0udHMiLCJzcmMvcGxheWVycy9wbGF5ZXJzLnRzIiwic3JjL3BsYXllcnMvcmVkVGVhbS50cyJdLCJuYW1lcyI6WyJyIiwiZSIsIm4iLCJ0IiwibyIsImkiLCJmIiwiYyIsInJlcXVpcmUiLCJ1IiwiYSIsIkVycm9yIiwiY29kZSIsInAiLCJleHBvcnRzIiwiY2FsbCIsImxlbmd0aCIsIjEiLCJtb2R1bGUiLCJnbG9iYWwiLCJmYWN0b3J5IiwidGhpcyIsIk1ldGFkYXRhIiwiV2Vha01hcCIsImRlZmluZU1ldGFkYXRhIiwibWV0YWRhdGFLZXkiLCJtZXRhZGF0YVZhbHVlIiwidGFyZ2V0IiwicHJvcGVydHlLZXkiLCJvcmRpbmFyeURlZmluZU93bk1ldGFkYXRhIiwiZGVjb3JhdGUiLCJkZWNvcmF0b3JzIiwiYXR0cmlidXRlcyIsIlR5cGVFcnJvciIsInJldmVyc2UiLCJmb3JFYWNoIiwiZGVjb3JhdGVkIiwiZGVjb3JhdG9yIiwidW5kZWZpbmVkIiwiZGVzY3JpcHRvciIsIm1ldGFkYXRhIiwiZ2V0TWV0YWRhdGEiLCJvcmRpbmFyeUdldE1ldGFkYXRhIiwiZ2V0T3duTWV0YWRhdGEiLCJvcmRpbmFyeUdldE93bk1ldGFkYXRhIiwiaGFzT3duTWV0YWRhdGEiLCJoYXNNZXRhZGF0YSIsImluY2x1ZGVzIiwiZ2V0TWV0YWRhdGFNYXAiLCJ0YXJnZXRNZXRhZGF0YSIsImdldCIsIk1hcCIsIm1ldGFkYXRhTWFwIiwic2V0IiwiT2JqZWN0IiwiZ2V0UHJvdG90eXBlT2YiLCJSZWZsZWN0aW9uIiwiYXNzaWduIiwiUmVmbGVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJkZWZpbmUiLCJhbWQiLCJzZWxmIiwiUiIsIlJlZmxlY3RBcHBseSIsImFwcGx5IiwicmVjZWl2ZXIiLCJhcmdzIiwiRnVuY3Rpb24iLCJwcm90b3R5cGUiLCJSZWZsZWN0T3duS2V5cyIsIm93bktleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiY29uY2F0IiwiTnVtYmVySXNOYU4iLCJOdW1iZXIiLCJpc05hTiIsIkV2ZW50RW1pdHRlciIsImluaXQiLCJvbmNlIiwiZW1pdHRlciIsIm5hbWUiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImVycm9yTGlzdGVuZXIiLCJlcnIiLCJyZW1vdmVMaXN0ZW5lciIsInJlc29sdmVyIiwic2xpY2UiLCJhcmd1bWVudHMiLCJldmVudFRhcmdldEFnbm9zdGljQWRkTGlzdGVuZXIiLCJoYW5kbGVyIiwiZmxhZ3MiLCJvbiIsIl9ldmVudHMiLCJfZXZlbnRzQ291bnQiLCJfbWF4TGlzdGVuZXJzIiwiZGVmYXVsdE1heExpc3RlbmVycyIsImNoZWNrTGlzdGVuZXIiLCJsaXN0ZW5lciIsIl9nZXRNYXhMaXN0ZW5lcnMiLCJ0aGF0IiwiX2FkZExpc3RlbmVyIiwidHlwZSIsInByZXBlbmQiLCJldmVudHMiLCJleGlzdGluZyIsImNyZWF0ZSIsIm5ld0xpc3RlbmVyIiwiZW1pdCIsInVuc2hpZnQiLCJwdXNoIiwibSIsIndhcm5lZCIsInciLCJTdHJpbmciLCJjb3VudCIsIndhcm5pbmciLCJjb25zb2xlIiwid2FybiIsIl9vbmNlV3JhcCIsInN0YXRlIiwiZmlyZWQiLCJ3cmFwRm4iLCJ3cmFwcGVkIiwiYmluZCIsIl9saXN0ZW5lcnMiLCJ1bndyYXAiLCJldmxpc3RlbmVyIiwidW53cmFwTGlzdGVuZXJzIiwiYXJyIiwicmV0IiwiQXJyYXkiLCJhcnJheUNsb25lIiwibGlzdGVuZXJDb3VudCIsImNvcHkiLCJhZGRFdmVudExpc3RlbmVyIiwid3JhcExpc3RlbmVyIiwiYXJnIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImVudW1lcmFibGUiLCJSYW5nZUVycm9yIiwic2V0TWF4TGlzdGVuZXJzIiwiZ2V0TWF4TGlzdGVuZXJzIiwiZG9FcnJvciIsImVycm9yIiwiZXIiLCJtZXNzYWdlIiwiY29udGV4dCIsImxlbiIsImxpc3RlbmVycyIsImFkZExpc3RlbmVyIiwicHJlcGVuZExpc3RlbmVyIiwicHJlcGVuZE9uY2VMaXN0ZW5lciIsIm9mZiIsImxpc3QiLCJwb3NpdGlvbiIsIm9yaWdpbmFsTGlzdGVuZXIiLCJzaGlmdCIsImluZGV4IiwicG9wIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwia2V5Iiwia2V5cyIsInJhd0xpc3RlbmVycyIsImV2ZW50TmFtZXMiLCJBYnN0cmFjdERpc2MiLCJjb25zdHJ1Y3RvciIsInJvb20iLCJfcm9vbSIsImRpc3RhbmNlVG8iLCJkaXNjIiwicjEiLCJ5MiIsImR4IiwiZHkiLCJwYXJzZUludCIsIngiLCJ5IiwicmFkaXVzIiwieDEiLCJ5MSIsIngyIiwicjIiLCJNYXRoIiwic3FydCIsIm1heCIsImNvbGxpZGluZ1dpdGgiLCJkaXN0YW5jZSIsIl9hIiwiX2Rpc2NPYmplY3QiLCJ4c3BlZWQiLCJ5c3BlZWQiLCJ4Z3Jhdml0eSIsInlncmF2aXR5IiwiYkNvZWZmIiwiaW52TWFzcyIsImRhbXBpbmciLCJjTWFzayIsImNHcm91cCIsImdldFJHQiIsImNvbG9yIiwicmVwbGFjZSIsImdldFJHQlN0cmluZyIsImlzTGlnaHQiLCJzaGFkZUNvbG9yIiwicGVyY2VudCIsIm1hcCIsInJnYiIsImpvaW4iLCJDb21tYW5kIiwiUm9sZV8xIiwib3B0aW9ucyIsIl9lIiwiYWxpYXNlcyIsInJvbGVzIiwiZGVsZXRlTWVzc2FnZSIsImRlc2MiLCJfYiIsInVzYWdlIiwiX2MiLCJfZCIsImZ1bmMiLCJpc0FsbG93ZWQiLCJwbGF5ZXIiLCJBZG1pblJvbGUiLCJhZG1pbiIsImZpbmQiLCJvdmVycmlkZSIsInNvbWUiLCJyb2xlIiwiaGFzUm9sZSIsInJ1biIsImluZm8iLCJDb21tYW5kQXJndW1lbnQiLCJwYXJhbWV0ZXJUeXBlcyIsIm51bWJlciIsInllc25vIiwibmlja25hbWUiLCJwYXNzd29yZCIsImV4dGVuZGVkIiwic3BlY2lhbEV4dGVuZGVkIiwiYXJndW1lbnQiLCJfdmFsdWUiLCJ0ZXN0IiwidG9OdW1iZXIiLCJ0b1N0cmluZyIsIkNvbW1hbmRMaXN0IiwicHJlZml4IiwiaXRlbXMiLCJfbGlzdCIsIl9wcmVmaXgiLCJhZGQiLCJjb21tYW5kIiwicmVtb3ZlIiwic2VhcmNoIiwiY21kIiwiaW5kZXhPZiIsImZpbHRlciIsIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwicmVqZWN0ZWQiLCJyZXN1bHQiLCJkb25lIiwidGhlbiIsImlkYl8xIiwiY2xlYXIiLCJjb25uU3RvcmFnZSIsImRiIiwib3BlbkRCIiwidXBncmFkZSIsImNyZWF0ZU9iamVjdFN0b3JlIiwia2V5UGF0aCIsInZhbCIsInB1dCIsImRlbGV0ZSIsImdldEFsbEtleXMiLCJEaXNjIiwiQWJzdHJhY3REaXNjXzEiLCJTZXR0aW5nc18xIiwiZGlzY0luZGV4Iiwic3VwZXIiLCJzZXR0aW5ncyIsIlNldHRpbmdzIiwibmF0aXZlIiwiZ2V0RGlzY1Byb3BlcnRpZXMiLCJwcm9wZXJ0aWVzIiwic2V0RGlzY1Byb3BlcnRpZXMiLCJSb29tR2VvTGlzdCIsIkNvbG9ycyIsIkNoYXRTdHlsZSIsIkNoYXRTb3VuZHMiLCJTdGFkaXVtcyIsIlRlYW1zIiwiU2FvUGF1bG8iLCJsYXQiLCJsb24iLCJSaW9kZUphbmVpcm8iLCJDdXJpdGliYSIsIlBvcnRvQWxlZ3JlIiwiU2FsdmFkb3IiLCJCcmFzaWxpYSIsIkJlbG9Ib3Jpem9udGUiLCJNb250ZXZpZGV1IiwiQnVlbm9zQWlyZXMiLCJDb3Jkb2JhIiwiUm9zYXJpbyIsIlNhbnRpYWdvIiwiQm9nb3RhIiwiTGlzYm9uIiwiUG9ydG8iLCJOZXdZb3JrQ2l0eSIsIkxvc0FuZ2VsZXMiLCJDaGljYWdvIiwiSG91c3RvbiIsIldhc2hpbmd0b24iLCJCb3N0b24iLCJNaWFtaSIsIlRvcm9udG8iLCJNb250cmVhbCIsIk1hZHJpZCIsIkJhcmNlbG9uYSIsIlZhbGVuY2lhIiwiU2V2aWxsZSIsIlBhcmlzIiwiTWFyc2VpbGxlIiwiTHlvbiIsIlRvdWxvdXNlIiwiTmFudGVzIiwiUm9tZSIsIk1pbGFuIiwiTmFwbGVzIiwiVHVyaW4iLCJQYWxlcm1vIiwiTG9uZG9uIiwiQmlybWluZ2hhbSIsIkxpdmVycG9vbCIsIkJlcmxpbiIsIkhhbWJ1cmciLCJNdW5pY2giLCJDb2xvZ25lIiwiRnJhbmtmdXJ0IiwiQXRoZW5zIiwiWmFncmViIiwiU2FyYWpldm8iLCJNb3Njb3ciLCJTYWludFBldGVyc2J1cmciLCJCZWxncmFkZSIsIkFtc3RlcmRhbSIsIklzdGFuYnVsIiwiQW5rYXJhIiwiSXptaXIiLCJCdXJzYSIsIkFkYW5hIiwiR2F6aWFudGVwIiwiS29ueWEiLCJBbnRhbHlhIiwiV2Fyc2F3IiwiTG9keiIsIktyYWtvdyIsIldyb2NsYXciLCJQb3puYW4iLCJHZGFuc2siLCJCdWNoYXJlc3QiLCJKZXJ1c2FsZW0iLCJUZWxBdml2IiwiVGJpbGlzaSIsIk11bWJhaSIsIkRlbGhpIiwiU3lkbmV5IiwiTWVsYm91cm5lIiwiQnJpc2JhbmUiLCJTaW5nYXBvcmUiLCJTZW91bCIsIlRva3lvIiwiQ2hhdFN0eWxlQ1NTIiwiX19jcmVhdGVCaW5kaW5nIiwiayIsImsyIiwiX19zZXRNb2R1bGVEZWZhdWx0IiwidiIsIl9faW1wb3J0U3RhciIsIm1vZCIsIl9fZXNNb2R1bGUiLCJoYXNPd25Qcm9wZXJ0eSIsImxvZyIsImNoYXQiLCJkaXJlY3QiLCJhbm5vdW5jZW1lbnQiLCJhbm9ueW1vdXMiLCJDb2xvciIsIkdsb2JhbF8xIiwidGVtcGxhdGUiLCJ0YWciLCJhbm5vdW5jZW1lbnRUYWciLCJmb3JtYXRUYWciLCJHb2xkIiwicHJpdmF0ZVRhZyIsIlNreUJsdWUiLCJjaGF0VGFnIiwiTGlnaHRHcmVlbiIsImFkbWluVGFnIiwidGltZXN0YW1wVGFnIiwiTGlnaHRHcmV5IiwiYW5ub3VuY2VtZW50VGFnVGV4dCIsInByaXZhdGVUYWdUZXh0IiwiY3VzdG9tTG9nIiwiQmxhY2siLCJtZXNzYWdlQ29sb3IiLCJsZXQiLCJtZXNzYWdlU3R5bGUiLCJzdHlsZSIsIkJvbGQiLCJJdGFsaWMiLCJTbWFsbCIsIlNtYWxsQm9sZCIsIlNtYWxsSXRhbGljIiwiRGF0ZSIsIm5vdyIsImdldFRpbWV6b25lT2Zmc2V0IiwidG9JU09TdHJpbmciLCJzdWJzdHIiLCJ0YWdDb250ZW50IiwicGFyYW1zIiwic2V0VGltZW91dCIsIlBsYXllciIsIkNvbm5lY3Rpb25IaXN0b3J5IiwiUm9sZUxpc3RfMSIsInBsYXllck9iamVjdCIsIl9raWNrTGltaXREaXN0YW5jZSIsIl9yb2xlcyIsIlJvbGVMaXN0IiwiY29tbWFuZHNDb29sZG93biIsImNhblJlYWRDaGF0IiwiY2FuVXNlQ29tbWFuZHMiLCJfbGFzdENvbW1hbmRUaW1lIiwiaWQiLCJhdXRoIiwiY29ubiIsImlwIiwiX2RlY29kZUNvbm4iLCJmZXRjaEdlb0xvY2F0aW9uIiwiY29ubkhpc3RvcnkiLCJ5aWVsZCIsImdlbyIsIl9nZW8iLCJyZXNwb25zZSIsImZldGNoIiwianNvbiIsImNpdHkiLCJjb250aW5lbnQiLCJjb250aW5lbnRfY29kZSIsImNvdW50cnkiLCJsYW5ndWFnZSIsImxhbmd1YWdlcyIsInNwbGl0Iiwib3JnIiwicmVnaW9uIiwidGltZXpvbmUiLCJzdHIiLCJkZWNvZGVVUklDb21wb25lbnQiLCJzZXRBdmF0YXIiLCJhdmF0YXIiLCJzZXRQbGF5ZXJBdmF0YXIiLCJjbGVhckF2YXRhciIsImtpY2siLCJyZWFzb24iLCJraWNrUGxheWVyIiwiYmFuIiwicmVwbHkiLCJ0YXJnZXRJRCIsInNlbmQiLCJjYW5LaWNrIiwiY2FuUnVuQ29tbWFuZHNDb29sZG93biIsInVwZGF0ZUNvb2xkb3duIiwiYWRkUm9sZSIsInJlbW92ZVJvbGUiLCJoYXMiLCJfcGxheWVyT2JqZWN0IiwiZ2V0UGxheWVyIiwiZ2V0UGxheWVyRGlzY1Byb3BlcnRpZXMiLCJzZXRQbGF5ZXJEaXNjUHJvcGVydGllcyIsInRlYW0iLCJzZXRQbGF5ZXJUZWFtIiwidG9wUm9sZSIsInNvcnQiLCJiIiwic2V0UGxheWVyQWRtaW4iLCJwb3MiLCJtZW50aW9uIiwiZ2VvbG9jYXRpb24iLCJQbGF5ZXJMaXN0IiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJ2YWx1ZXMiLCJzaXplIiwicHJlZGljYXRlIiwiZ2V0QWxsIiwicGxheWVycyIsIm9yZGVyIiwib3JkZXJlZExpc3QiLCJwbGF5ZXJMaXN0IiwiZ2V0UGxheWVyTGlzdCIsImZpbmRJbmRleCIsImZpcnN0IiwibGFzdCIsImdldEJ5TmFtZSIsImdldEJ5QXV0aCIsImdldEJ5Q29ubk9ySVAiLCJjb25uT3JJUCIsInNwZWN0YXRvcnMiLCJTcGVjdGF0b3JzIiwicmVkIiwiUmVkIiwiYmx1ZSIsIkJsdWUiLCJ0ZWFtcyIsImFkbWlucyIsImNyZWF0ZUV2ZW50IiwiY3JlYXRlQ29tbWFuZCIsImNyZWF0ZVBsdWdpbiIsImNvbW1hbmRzIiwiZXZlbnQiLCJSb2xlIiwiV2hpdGUiLCJzZXROYW1lIiwic2V0QWRtaW4iLCJzZXRDb2xvciIsInNldFByZWZpeCIsInNldE92ZXJyaWRlIiwic2V0UG9zaXRpb24iLCJhZG1pblJvbGVzIiwicGxheWVyUm9sZXMiLCJyb2xlTmFtZSIsIlJvb20iLCJMb2dnZXIiLCJQbGF5ZXJfMSIsIkNvbW1hbmRfMSIsIkRpc2NfMSIsIlBsYXllckxpc3RfMSIsIkNvbW1hbmRMaXN0XzEiLCJDb21tYW5kQXJndW1lbnRfMSIsIkNvbm5IaXN0b3J5IiwiZXZlbnRzXzEiLCJyb29tQ29uZmlnIiwiX2Rpc2NzIiwiX3BsdWdpbnMiLCJDb2xsaXNpb25GbGFncyIsImFsbCIsImJhbGwiLCJibHVlS08iLCJjMCIsImMxIiwiYzIiLCJjMyIsInJlZEtPIiwic2NvcmUiLCJ3YWxsIiwiY3VzdG9tRXZlbnRzIiwibG9nZ2luZyIsIl9pbnN1ZmZpY2llbnRQZXJtaXNzaW9uc01lc3NhZ2UiLCJzb3VuZCIsIk5vdGlmaWNhdGlvbiIsIl9wbGF5ZXJDb21tYW5kQ29vbGRvd25NZXNzYWdlIiwiX2RlZmF1bHRQcmVmaXgiLCJfcGF1c2VkIiwiX2Rlc2NvbnN0cnVjdE1lc3NhZ2UiLCJ0cmltIiwiX2dldENvbW1hbmROYW1lIiwidG9Mb3dlckNhc2UiLCJfZ2V0QXJndW1lbnRzIiwid2luZG93Iiwibm9QbGF5ZXIiLCJIQkluaXQiLCJyb29tTmFtZSIsInBsYXllck5hbWUiLCJtYXhQbGF5ZXJzIiwidG9rZW4iLCJfcGFzc3dvcmQiLCJfcGxheWVycyIsIl9jb21tYW5kcyIsIl9zZXRBbGxFdmVudHMiLCJfaW5pdGlhbE1lc3NhZ2UiLCJfc2V0S2lja0V2ZW50Iiwib25QbGF5ZXJLaWNrZWQiLCJraWNrZWRQbGF5ZXIiLCJieVBsYXllciIsIkhheGJhbGwiLCJfcnVuRXZlbnQiLCJfb25QbGF5ZXJCYW5uZWRGdW5jdGlvbiIsIl9vblBsYXllcktpY2tlZEZ1bmN0aW9uIiwib25HYW1lUGF1c2UiLCJvbkdhbWVTdGFydCIsIm9uR2FtZVN0b3AiLCJvbkdhbWVUaWNrIiwib25HYW1lVW5wYXVzZSIsIm9uS2lja1JhdGVMaW1pdFNldCIsIm9uUGxheWVyQWN0aXZpdHkiLCJvblBsYXllckFkbWluQ2hhbmdlIiwib25QbGF5ZXJCYWxsS2ljayIsIm9uUGxheWVyQmFubmVkIiwib25QbGF5ZXJDaGF0Iiwib25QbGF5ZXJKb2luIiwib25QbGF5ZXJMZWF2ZSIsIm9uUGxheWVyVGVhbUNoYW5nZSIsIm9uUG9zaXRpb25zUmVzZXQiLCJvblJvb21MaW5rIiwib25TdGFkaXVtQ2hhbmdlIiwib25UZWFtR29hbCIsIm9uVGVhbVZpY3RvcnkiLCJvblBsYXllckdlb0xvY2F0aW9uRmV0Y2giLCJvblBsYXllclJ1bkNvbW1hbmQiLCJwbHVnaW4iLCJsaW5rIiwiYlAiLCJwbGF5ZXJJbmZvIiwiam9pbmVkQXQiLCJoaXN0b3J5IiwiX29uUGxheWVyR2VvTG9jYXRpb25GZXRjaEZ1bmN0aW9uIiwiY2F0Y2giLCJ0ZWFtV29uIiwic2NvcmVzIiwibXNnIiwiY29tbWFuZFJ1biIsImV4ZWNJbmZvIiwiYXQiLCJfb25QbGF5ZXJSdW5Db21tYW5kRnVuY3Rpb24iLCJkaXNjQ291bnQiLCJjUCIsImNoYW5nZWRQbGF5ZXIiLCJuZXdTdGFkaXVtTmFtZSIsIm5vUGVybWlzc2lvbk1lc3NhZ2UiLCJjb21tYW5kQ29vbGRvd25NZXNzYWdlIiwiZGlzY3MiLCJnZXRTY29yZXMiLCJnZXREaXNjQ291bnQiLCJwbHVnaW5zIiwicGF1c2VkIiwicmVtb3ZlQ29tbWFuZCIsIlBsdWdpbiIsIm9yaWdpbmFsIiwibGFuZ3VhZ2VQYWNrIiwic3RyTmFtZSIsImVudHJpZXMiLCJyZWR1Y2UiLCJyZW1vdmVQbHVnaW4iLCJwbHVnaW5Pck5hbWUiLCJpc0dhbWVJblByb2dyZXNzIiwicGxheWVySUQiLCJzZW5kQ2hhdCIsInVuYmFuIiwiY2xlYXJCYW4iLCJ1bmJhbkFsbCIsImNsZWFyQmFucyIsInNldFNjb3JlTGltaXQiLCJsaW1pdCIsInNldFRpbWVMaW1pdCIsInNldFN0YWRpdW0iLCJzdGFkaXVtIiwic2V0Q3VzdG9tU3RhZGl1bSIsIkpTT04iLCJzdHJpbmdpZnkiLCJzZXREZWZhdWx0U3RhZGl1bSIsImxvY2tUZWFtcyIsInNldFRlYW1zTG9jayIsInVubG9ja1RlYW1zIiwic2V0VGVhbUNvbG9ycyIsInRlYW1Db2xvcnMiLCJhbmdsZSIsInRleHRDb2xvciIsImNvbG9ycyIsInN0YXJ0Iiwic3RhcnRHYW1lIiwic3RvcCIsInN0b3BHYW1lIiwicGF1c2UiLCJwYXVzZUdhbWUiLCJ1bnBhdXNlIiwic3RhcnRSZWNvcmRpbmciLCJzdG9wUmVjb3JkaW5nIiwic2V0UGFzc3dvcmQiLCJjbGVhclBhc3N3b3JkIiwiZW5hYmxlQ2FwdGNoYSIsInNldFJlcXVpcmVSZWNhcHRjaGEiLCJkaXNhYmxlQ2FwdGNoYSIsInJlb3JkZXJQbGF5ZXJzIiwiaWRzIiwibW92ZVRvVG9wIiwic2VuZEFubm91bmNlbWVudCIsInNldEtpY2tSYXRlTGltaXQiLCJtaW4iLCJyYXRlIiwiYnVyc3QiLCJfX2V4cG9ydFN0YXIiLCJ3cmFwSWRiVmFsdWUiLCJyZWFkTWV0aG9kcyIsIndyaXRlTWV0aG9kcyIsImNhY2hlZE1ldGhvZHMiLCJnZXRNZXRob2QiLCJwcm9wIiwiSURCRGF0YWJhc2UiLCJ0YXJnZXRGdW5jTmFtZSIsInVzZUluZGV4IiwiaXNXcml0ZSIsIklEQkluZGV4IiwiSURCT2JqZWN0U3RvcmUiLCJtZXRob2QiLCJhc3luYyIsInN0b3JlTmFtZSIsInR4IiwidHJhbnNhY3Rpb24iLCJzdG9yZSIsInJlcGxhY2VUcmFwcyIsIm9sZFRyYXBzIiwid3JhcCIsImRlbGV0ZURCIiwiYmxvY2tlZCIsInJlcXVlc3QiLCJpbmRleGVkREIiLCJkZWxldGVEYXRhYmFzZSIsInZlcnNpb24iLCJibG9ja2luZyIsInRlcm1pbmF0ZWQiLCJvcGVuIiwib3BlblByb21pc2UiLCJvbGRWZXJzaW9uIiwibmV3VmVyc2lvbiIsImluc3RhbmNlT2ZBbnkiLCJvYmplY3QiLCJjb25zdHJ1Y3RvcnMiLCJpZGJQcm94eWFibGVUeXBlcyIsImN1cnNvckFkdmFuY2VNZXRob2RzIiwiY3Vyc29yUmVxdWVzdE1hcCIsInRyYW5zYWN0aW9uRG9uZU1hcCIsInRyYW5zYWN0aW9uU3RvcmVOYW1lc01hcCIsInRyYW5zZm9ybUNhY2hlIiwicmV2ZXJzZVRyYW5zZm9ybUNhY2hlIiwiaWRiUHJveHlUcmFwcyIsIklEQlRyYW5zYWN0aW9uIiwib2JqZWN0U3RvcmVOYW1lcyIsIm9iamVjdFN0b3JlIiwid3JhcEZ1bmN0aW9uIiwiSURCQ3Vyc29yIiwiYWR2YW5jZSIsImNvbnRpbnVlIiwiY29udGludWVQcmltYXJ5S2V5Iiwic3RvcmVOYW1lcyIsInRyYW5zZm9ybUNhY2hhYmxlVmFsdWUiLCJ1bmxpc3RlbiIsImNvbXBsZXRlIiwiRE9NRXhjZXB0aW9uIiwiUHJveHkiLCJuZXdWYWx1ZSIsIklEQlJlcXVlc3QiLCJwcm9taXNlIiwic3VjY2VzcyIsImNhbGxiYWNrIiwiaGF4YmFsbF9leHRlbmRlZF9yb29tXzEiLCJob2NrZXlfanNvbl8xIiwiX19pbXBvcnREZWZhdWx0IiwiaW5zaWRlQmx1ZUJveF8xIiwiaW5zaWRlUmVkQm94XzEiLCJDb21tYW5kc18xIiwidG91Y2hlZERpc2NfMSIsInBlbmFsdHlEZXRlY3RlZF8xIiwicGxheWVyc18xIiwicmVkVGVhbV8xIiwiYmx1ZVRlYW1fMSIsImdvYWxpZUlsbGVnYWxUb3VjaF8xIiwiZGV0ZWN0TGFzdFRlYW1Ub3VjaF8xIiwiaWxsZWdhbFRvdWNoSW5SZWRCb3hfMSIsImlsbGVnYWxUb3VjaEluQmx1ZUJveF8xIiwia2lja29mZl8xIiwicGxheWVyQnVtcF8xIiwicGVuYWx0eVRpbWVyXzEiLCJNaXNzZWRQZW5hbHR5XzEiLCJwdWJsaWMiLCJwbGF5ZXJzTGlzdCIsImdvYWxpZSIsInJlbW92ZVBsYXllciIsInVwZGF0ZVJlZFRlYW1QbGF5ZXJzIiwidXBkYXRlQmx1ZVRlYW1QbGF5ZXJzIiwicmVkVGVhbSIsIl9pIiwiYmx1ZVRlYW0iLCJtb2RlIiwic3RhcnRzV2l0aCIsImNoYXRtdXRlZCIsInBlbmFsdHlHb2FsaWUiLCJnb2FsaWVPdXRzaWRlQm94IiwibGFzdFRlYW1Ub3VjaGVkIiwicGVuYWx0eSIsIkNyaW1zb24iLCJDb3JuZmxvd2VyQmx1ZSIsInBlbmFsdHlUaW1lciIsImRpc2FibGVkUGVuYWx0eXMiLCJHcmF5IiwiY2hlY2tGb3JHb2FsaWVzZXR0aW5nXzEiLCJraWNrb2ZmQWZ0ZXJNaXNzZWRQZW5hbHR5XzEiLCJIb3RQaW5rIiwiRG9kZ2VyQmx1ZSIsIkRhcmtHb2xkZW5Sb2QiLCJzZXRQZW5hbHR5UmVkIiwic2V0UGVuYWx0eUJsdWUiLCJBenVyZSIsIk1pc3R5Um9zZSIsInhTcGVlZCIsInlTcGVlZCIsInBvdyIsInRlYW1JZCIsInBsYXllcklkIiwicHJldmlvdXNUb3VjaE9uRGlzYyIsInhJbml0aWFsIiwieUluaXRpYWwiLCJ4VmVsb2NpdHkiLCJ5VmVsb2NpdHkiLCJ5QXRJbnRlcnNlY3Rpb24iLCJkaXN0YW5jZUJldHdlZW5Eb3RzXzEiLCJ4Q2VudGVyIiwicmVkUGxheWVyU29ydGVkIiwiYmx1ZVBsYXllclNvcnRlZCIsInJhbmRvbUluZGV4IiwiZmxvb3IiLCJyYW5kb20iLCJyYW5kb21SZWRQbGF5ZXIiLCJzcGxpY2UiLCJfcmFuZG9tSW5kZXgiLCJyYW5kb21CbHVlUGxheWVyIiwieEF4aXMiLCJ0b3BPckJvdHRvbSIsIl9yYW5kb21JbmRleDIiLCJfcmFuZG9tQmx1ZVBsYXllciIsIl9yYW5kb21JbmRleDMiLCJfcmFuZG9tUmVkUGxheWVyIiwiX2kyIiwicmFuZG9tTnVtYmVyIiwiX2kzIiwiX2k0IiwiY2FsY3VsYXRlVG90YWxTcGVlZF8xIiwiaGVhZGluZ1Rvd2FyZHNHb2FsXzEiLCJ3aWR0aCIsImhlaWdodCIsInNwYXduRGlzdGFuY2UiLCJiZyIsImNvcm5lclJhZGl1cyIsImtpY2tPZmZSYWRpdXMiLCJ2ZXJ0ZXhlcyIsImJDb2VmIiwiY3VydmUiLCJwMCIsInAxIiwidmlzIiwic2VnbWVudHMiLCJ2MCIsInYxIiwiZ29hbHMiLCJwbGFuZXMiLCJub3JtYWwiLCJkaXN0IiwidHJhaXRzIiwiYmFsbEFyZWEiLCJnb2FsUG9zdCIsImdvYWxOZXQiLCJraWNrT2ZmQmFycmllciIsImJhbGxQaHlzaWNzIiwicGxheWVyUGh5c2ljcyIsImtpY2tTdHJlbmd0aCIsImtpY2tpbmdEYW1waW5nIiwia2lja2luZ0FjY2VsZXJhdGlvbiIsImFjY2VsZXJhdGlvbiIsImpvaW50cyIsInJlZFNwYXduUG9pbnRzIiwiYmx1ZVNwYXduUG9pbnRzIiwiaXRlbSJdLCJtYXBwaW5ncyI6IkFBQUEsQ0FBQSxTQUFBQSxFQUFBQyxFQUFBQyxFQUFBQyxHQUFBLFNBQUFDLEVBQUFDLEVBQUFDLEdBQUEsR0FBQSxDQUFBSixFQUFBRyxHQUFBLENBQUEsR0FBQSxDQUFBSixFQUFBSSxHQUFBLENBQUEsSUFBQUUsRUFBQSxZQUFBLE9BQUFDLFNBQUFBLFFBQUEsR0FBQSxDQUFBRixHQUFBQyxFQUFBLE9BQUFBLEVBQUFGLEVBQUEsQ0FBQSxDQUFBLEVBQUEsR0FBQUksRUFBQSxPQUFBQSxFQUFBSixFQUFBLENBQUEsQ0FBQSxF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QUFBLFdBQ0FBLE9BQUFBLE9BQUEsUUFBQSxVQUFBLFVBQ0FBLE9BQUFBLE9BQUEsS0FBQSxPQUFBLE9BQ0FBLE9BQUFBLE9BQUEsU0FBQSxLQUFBLFdBQ0FBLE9BQUFBLE9BQUEsU0FBQSxPQUFBLFdBQ0FBLE9BQUFBLE9BQUEsY0FBQSxVQUFBLGdCQUNBQSxPQUFBQSxPQUFBLFNBQUEsVUFBQSxXQUNBQSxPQUFBQSxPQUFBLFVBQUEsT0FBQSxZQUNBQSxPQUFBQSxPQUFBLFVBQUEsVUFBQSxZQUNBQSxPQUFBQSxPQUFBLFlBQUEsU0FBQSxjQUNBQSxPQUFBQSxPQUFBLGVBQUEsU0FBQSxpQkFDQUEsT0FBQUEsT0FBQSxXQUFBLFVBQUEsYUFDQUEsT0FBQUEsT0FBQSxXQUFBLFVBQUEsYUFDQUEsT0FBQUEsT0FBQSxRQUFBLFNBQUEsVUFDQUEsT0FBQUEsT0FBQSxXQUFBLFVBQUEsYUFDQUEsT0FBQUEsT0FBQSxhQUFBLFNBQUEsZUFDQUEsT0FBQUEsT0FBQSxjQUFBLFNBQUEsZ0JBQ0FBLE9BQUFBLE9BQUEsY0FBQSxTQUFBLGdCQUNBQSxPQUFBQSxPQUFBLGNBQUEsT0FBQSxnQkFDQUEsT0FBQUEsT0FBQSxXQUFBLFNBQUEsYUFDQUEsT0FBQUEsT0FBQSxTQUFBLFVBQUEsV0FDQUEsT0FBQUEsT0FBQSxZQUFBLE9BQUEsY0FDQUEsT0FBQUEsT0FBQSxRQUFBLFNBQUEsVUFDQUEsT0FBQUEsT0FBQSxXQUFBLFNBQUEsYUFDQUEsT0FBQUEsT0FBQSxVQUFBLFVBQUEsWUFDQUEsT0FBQUEsT0FBQSxZQUFBLFVBQUEsY0FDQUEsT0FBQUEsT0FBQSxZQUFBLFNBQUEsY0FDQUEsT0FBQUEsT0FBQSxRQUFBLFVBQUEsVUFDQUEsT0FBQUEsT0FBQSxVQUFBLFVBQUEsWUFDQUEsT0FBQUEsT0FBQSxXQUFBLFVBQUEsYUFDQUEsT0FBQUEsT0FBQSxLQUFBLFVBQUEsT0FDQUEsT0FBQUEsT0FBQSxVQUFBLFVBQUEsWUFDQUEsT0FBQUEsT0FBQSxLQUFBLFNBQUEsT0FDQUEsT0FBQUEsT0FBQSxNQUFBLE9BQUEsUUFDQUEsT0FBQUEsT0FBQSxZQUFBLFVBQUEsY0FDQUEsT0FBQUEsT0FBQSxTQUFBLFVBQUEsV0FDQUEsT0FBQUEsT0FBQSxRQUFBLFVBQUEsVUFDQUEsT0FBQUEsT0FBQSxVQUFBLFVBQUEsWUFDQUEsT0FBQUEsT0FBQSxPQUFBLFNBQUEsU0FDQUEsT0FBQUEsT0FBQSxNQUFBLFVBQUEsUUFDQUEsT0FBQUEsT0FBQSxNQUFBLFVBQUEsUUFDQUEsT0FBQUEsT0FBQSxTQUFBLFVBQUEsV0FDQUEsT0FBQUEsT0FBQSxjQUFBLFVBQUEsZ0JBQ0FBLE9BQUFBLE9BQUEsVUFBQSxTQUFBLFlBQ0FBLE9BQUFBLE9BQUEsYUFBQSxVQUFBLGVBQ0FBLE9BQUFBLE9BQUEsVUFBQSxVQUFBLFlBQ0FBLE9BQUFBLE9BQUEsV0FBQSxVQUFBLGFBQ0FBLE9BQUFBLE9BQUEsVUFBQSxVQUFBLFlBQ0FBLE9BQUFBLE9BQUEscUJBQUEsVUFBQSx1QkFDQUEsT0FBQUEsT0FBQSxVQUFBLFVBQUEsWUFDQUEsT0FBQUEsT0FBQSxXQUFBLFNBQUEsYUFDQUEsT0FBQUEsT0FBQSxVQUFBLFVBQUEsWUFDQUEsT0FBQUEsT0FBQSxZQUFBLFVBQUEsY0FDQUEsT0FBQUEsT0FBQSxjQUFBLFNBQUEsZ0JBQ0FBLE9BQUFBLE9BQUEsYUFBQSxTQUFBLGVBQ0FBLE9BQUFBLE9BQUEsZUFBQSxTQUFBLGlCQUNBQSxPQUFBQSxPQUFBLGVBQUEsVUFBQSxpQkFDQUEsT0FBQUEsT0FBQSxZQUFBLFVBQUEsY0FDQUEsT0FBQUEsT0FBQSxLQUFBLE9BQUEsT0FDQUEsT0FBQUEsT0FBQSxVQUFBLFNBQUEsWUFDQUEsT0FBQUEsT0FBQSxNQUFBLFVBQUEsUUFDQUEsT0FBQUEsT0FBQSxRQUFBLFVBQUEsVUFDQUEsT0FBQUEsT0FBQSxPQUFBLFNBQUEsU0FDQUEsT0FBQUEsT0FBQSxpQkFBQSxTQUFBLG1CQUNBQSxPQUFBQSxPQUFBLFdBQUEsS0FBQSxhQUNBQSxPQUFBQSxPQUFBLGFBQUEsVUFBQSxlQUNBQSxPQUFBQSxPQUFBLGFBQUEsU0FBQSxlQUNBQSxPQUFBQSxPQUFBLGVBQUEsU0FBQSxpQkFDQUEsT0FBQUEsT0FBQSxnQkFBQSxTQUFBLGtCQUNBQSxPQUFBQSxPQUFBLGtCQUFBLE9BQUEsb0JBQ0FBLE9BQUFBLE9BQUEsZ0JBQUEsU0FBQSxrQkFDQUEsT0FBQUEsT0FBQSxnQkFBQSxVQUFBLGtCQUNBQSxPQUFBQSxPQUFBLGFBQUEsU0FBQSxlQUNBQSxPQUFBQSxPQUFBLFVBQUEsVUFBQSxZQUNBQSxPQUFBQSxPQUFBLFVBQUEsVUFBQSxZQUNBQSxPQUFBQSxPQUFBLFNBQUEsVUFBQSxXQUNBQSxPQUFBQSxPQUFBLFlBQUEsVUFBQSxjQUNBQSxPQUFBQSxPQUFBLEtBQUEsS0FBQSxPQUNBQSxPQUFBQSxPQUFBLFFBQUEsVUFBQSxVQUNBQSxPQUFBQSxPQUFBLE1BQUEsU0FBQSxRQUNBQSxPQUFBQSxPQUFBLFVBQUEsU0FBQSxZQUNBQSxPQUFBQSxPQUFBLE9BQUEsVUFBQSxTQUNBQSxPQUFBQSxPQUFBLFVBQUEsVUFBQSxZQUNBQSxPQUFBQSxPQUFBLE9BQUEsVUFBQSxTQUNBQSxPQUFBQSxPQUFBLGNBQUEsVUFBQSxnQkFDQUEsT0FBQUEsT0FBQSxVQUFBLFVBQUEsWUFDQUEsT0FBQUEsT0FBQSxjQUFBLFVBQUEsZ0JBQ0FBLE9BQUFBLE9BQUEsY0FBQSxVQUFBLGdCQUNBQSxPQUFBQSxPQUFBLFdBQUEsVUFBQSxhQUNBQSxPQUFBQSxPQUFBLFVBQUEsVUFBQSxZQUNBQSxPQUFBQSxPQUFBLEtBQUEsVUFBQSxPQUNBQSxPQUFBQSxPQUFBLEtBQUEsVUFBQSxPQUNBQSxPQUFBQSxPQUFBLEtBQUEsVUFBQSxPQUNBQSxPQUFBQSxPQUFBLFdBQUEsVUFBQSxhQUNBQSxPQUFBQSxPQUFBLE9BQUEsU0FBQSxTQUNBQSxPQUFBQSxPQUFBLGNBQUEsU0FBQSxnQkFDQUEsT0FBQUEsT0FBQSxJQUFBLFVBQUEsTUFDQUEsT0FBQUEsT0FBQSxVQUFBLFVBQUEsWUFDQUEsT0FBQUEsT0FBQSxVQUFBLFNBQUEsWUFDQUEsT0FBQUEsT0FBQSxZQUFBLFNBQUEsY0FDQUEsT0FBQUEsT0FBQSxPQUFBLFVBQUEsU0FDQUEsT0FBQUEsT0FBQSxXQUFBLFVBQUEsYUFDQUEsT0FBQUEsT0FBQSxTQUFBLFNBQUEsV0FDQUEsT0FBQUEsT0FBQSxTQUFBLFVBQUEsV0FDQUEsT0FBQUEsT0FBQSxPQUFBLFVBQUEsU0FDQUEsT0FBQUEsT0FBQSxPQUFBLFVBQUEsU0FDQUEsT0FBQUEsT0FBQSxRQUFBLFNBQUEsVUFDQUEsT0FBQUEsT0FBQSxVQUFBLFNBQUEsWUFDQUEsT0FBQUEsT0FBQSxVQUFBLFNBQUEsWUFDQUEsT0FBQUEsT0FBQSxLQUFBLFVBQUEsT0FDQUEsT0FBQUEsT0FBQSxZQUFBLE9BQUEsY0FDQUEsT0FBQUEsT0FBQSxVQUFBLFNBQUEsWUFDQUEsT0FBQUEsT0FBQSxJQUFBLFVBQUEsTUFDQUEsT0FBQUEsT0FBQSxLQUFBLE9BQUEsT0FDQUEsT0FBQUEsT0FBQSxRQUFBLFVBQUEsVUFDQUEsT0FBQUEsT0FBQSxPQUFBLFVBQUEsU0FDQUEsT0FBQUEsT0FBQSxVQUFBLFNBQUEsWUFDQUEsT0FBQUEsT0FBQSxPQUFBLFVBQUEsU0FDQUEsT0FBQUEsT0FBQSxNQUFBLFVBQUEsUUFDQUEsT0FBQUEsT0FBQSxNQUFBLFVBQUEsUUFDQUEsT0FBQUEsT0FBQSxXQUFBLFVBQUEsYUFDQUEsT0FBQUEsT0FBQSxPQUFBLFVBQUEsU0FDQUEsT0FBQUEsT0FBQSxZQUFBLFVBQUEsY0FDQUEsT0FBQUEsT0FBQSxRQUFBLFNBQUEsU0FDQSxFQUFBNVIsUUFBQTRSLFNBQUE1UixRQUFBNFIsT0FBQSxHQUFBLEVBSUE1UixRQUFBMlIsWUFBQSxDQUVBTSxTQUFBLENBQUFuUyxLQUFBLEtBQUFvUyxJQUFBLENBQUEsVUFBQUMsSUFBQSxDQUFBLFFBQUEsRUFDQUMsYUFBQSxDQUFBdFMsS0FBQSxLQUFBb1MsSUFBQSxDQUFBLFVBQUFDLElBQUEsQ0FBQSxTQUFBLEVBQ0FFLFNBQUEsQ0FBQXZTLEtBQUEsS0FBQW9TLElBQUEsQ0FBQSxhQUFBQyxJQUFBLENBQUEsWUFBQSxFQUNB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QUF4QixFQUFBLENBQUEsSUFBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsRUFBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxTQUFBNm9CLE1BQUEsQ0FBQSxHQUFBLEVBQ0EsQ0FBQXJxQixFQUFBLEVBQUFDLEVBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFNBQUE2b0IsTUFBQSxDQUFBLEdBQUEsRUFDQSxDQUFBcnFCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLEdBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxTQUFBNm9CLE1BQUEsQ0FBQSxHQUFBLEVBQ0EsQ0FBQXJxQixFQUFBLENBQUEsSUFBQUMsRUFBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsU0FBQTZvQixNQUFBLENBQUEsR0FBQSxFQUNBLENBQUFycUIsRUFBQSxJQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFNBQUE2b0IsTUFBQSxDQUFBLEdBQUEsRUFDQSxDQUFBcnFCLEVBQUEsSUFBQUMsRUFBQSxDQUFBLEdBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxTQUFBNm9CLE1BQUEsQ0FBQSxHQUFBLEVBQ0EsQ0FBQXJxQixFQUFBLElBQUFDLEVBQUEsR0FBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFNBQUE2b0IsTUFBQSxDQUFBLEdBQUEsRUFDQSxDQUFBcnFCLEVBQUEsSUFBQUMsRUFBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsU0FBQTZvQixNQUFBLENBQUEsR0FBQSxFQUNBLENBQUFycUIsRUFBQSxDQUFBLElBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsU0FBQTZvQixNQUFBLENBQUEsR0FBQSxFQUNBLENBQUFycUIsRUFBQSxDQUFBLElBQUFDLEVBQUEsQ0FBQSxHQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsU0FBQTZvQixNQUFBLENBQUEsR0FBQSxFQUNBLENBQUFycUIsRUFBQSxFQUFBQyxFQUFBLENBQUEsRUFBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFNBQUE2b0IsTUFBQSxDQUFBLEdBQUEsRUFDQSxDQUFBcnFCLEVBQUEsRUFBQUMsRUFBQSxFQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsU0FBQTZvQixNQUFBLENBQUEsR0FBQSxFQUNBLENBQUFycUIsRUFBQSxFQUFBQyxFQUFBLEVBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxTQUFBNm9CLE1BQUEsQ0FBQSxHQUFBLEVBQ0EsQ0FBQXJxQixFQUFBLEVBQUFDLEVBQUEsRUFBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFNBQUE2b0IsTUFBQSxDQUFBLEdBQUEsRUFDQSxDQUFBcnFCLEVBQUEsRUFBQUMsRUFBQSxFQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsU0FBQTZvQixNQUFBLENBQUEsR0FBQSxFQUNBLENBQUFycUIsRUFBQSxFQUFBQyxFQUFBLEVBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxTQUFBNm9CLE1BQUEsQ0FBQSxHQUFBLEVBQ0EsQ0FBQXJxQixFQUFBLENBQUEsSUFBQUMsRUFBQSxDQUFBLEdBQUFvQixNQUFBLENBQUEsUUFBQWdwQixNQUFBLEdBQUEsRUFDQSxDQUFBcnFCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQWdwQixNQUFBLEdBQUEsRUFDQSxDQUFBcnFCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBZ3BCLE1BQUEsSUFBQTdvQixNQUFBLFFBQUEsRUFDQSxDQUFBeEIsRUFBQSxDQUFBLElBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFncEIsTUFBQSxJQUFBN29CLE1BQUEsUUFBQSxFQUNBLENBQUF4QixFQUFBLENBQUEsSUFBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQWdwQixNQUFBLElBQUE3b0IsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQWdwQixNQUFBLElBQUE3b0IsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBZ3BCLE1BQUEsSUFBQTdvQixNQUFBLFFBQUEsRUFDQSxDQUFBeEIsRUFBQSxDQUFBLElBQUFDLEVBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBZ3BCLE1BQUEsSUFBQTdvQixNQUFBLFFBQUEsRUFDQSxDQUFBeEIsRUFBQSxDQUFBLElBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFncEIsTUFBQSxJQUFBN29CLE1BQUEsUUFBQSxFQUNBLENBQUF4QixFQUFBLENBQUEsSUFBQUMsRUFBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFncEIsTUFBQSxJQUFBN29CLE1BQUEsUUFBQSxFQUNBLENBQUF4QixFQUFBLENBQUEsSUFBQUMsRUFBQSxDQUFBLEdBQUFvQixNQUFBLENBQUEsUUFBQWdwQixNQUFBLElBQUE3b0IsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLEdBQUFvQixNQUFBLENBQUEsUUFBQWdwQixNQUFBLElBQUE3b0IsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLENBQUEsR0FBQW9CLE1BQUEsQ0FBQSxRQUFBZ3BCLE1BQUEsSUFBQTdvQixNQUFBLFFBQUEsRUFDQSxDQUFBeEIsRUFBQSxDQUFBLElBQUFDLEVBQUEsR0FBQW9CLE1BQUEsQ0FBQSxRQUFBZ3BCLE1BQUEsSUFBQTdvQixNQUFBLFFBQUEsRUFDQSxDQUFBeEIsRUFBQSxDQUFBLElBQUFDLEVBQUEsQ0FBQSxHQUFBb0IsTUFBQSxDQUFBLFFBQUFncEIsTUFBQSxJQUFBN29CLE1BQUEsUUFBQSxFQUNB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LEdBQUEsRUFDQSxDQUFBRCxFQUFBLENBQUEsR0FBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsR0FBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxHQUFBQyxFQUFBLElBQUFvQixNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFyQixFQUFBLEdBQUFDLEVBQUEsSUFBQW9CLE1BQUEsQ0FBQSxPQUFBLEVBQ0EsQ0FBQXJCLEVBQUEsQ0FBQSxHQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFFBQUEsRUFDQSxDQUFBeEIsRUFBQSxHQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFFBQUEsRUFDQSxDQUFBeEIsRUFBQSxDQUFBLEdBQUFDLEVBQUEsSUFBQW9CLE1BQUEsQ0FBQSxPQUFBLEVBQ0EsQ0FBQXJCLEVBQUEsR0FBQUMsRUFBQSxJQUFBb0IsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBckIsRUFBQSxDQUFBLEdBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsUUFBQSxFQUNBLENBQUF4QixFQUFBLEdBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsUUFBQSxFQUNBLENBQUF4QixFQUFBLENBQUEsR0FBQUMsRUFBQSxJQUFBb0IsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBckIsRUFBQSxHQUFBQyxFQUFBLElBQUFvQixNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFyQixFQUFBLENBQUEsR0FBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxHQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFFBQUEsRUFDQSxDQUFBeEIsRUFBQSxDQUFBLEdBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsUUFBQSxFQUNBLENBQUF4QixFQUFBLEdBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsUUFBQSxFQUNBLENBQUF4QixFQUFBLEdBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsUUFBQSxFQUNBLENBQUF4QixFQUFBLEdBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsUUFBQSxFQUNBLENBQUF4QixFQUFBLENBQUEsR0FBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsR0FBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxTQUFBNm9CLE1BQUEsQ0FBQSxFQUNBLENBQUFycUIsRUFBQSxHQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFNBQUE2b0IsTUFBQSxHQUFBLEVBQ0EsQ0FBQXJxQixFQUFBLEdBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsU0FBQTZvQixNQUFBLENBQUEsRUFDQSxDQUFBcnFCLEVBQUEsR0FBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxTQUFBNm9CLE1BQUEsR0FBQSxFQUNBLENBQUFycUIsRUFBQSxHQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFNBQUE2b0IsTUFBQSxHQUFBLEVBQ0EsQ0FBQXJxQixFQUFBLEdBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsU0FBQTZvQixNQUFBLEdBQUEsRUFDQSxDQUFBcnFCLEVBQUEsSUFBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxTQUFBNm9CLE1BQUEsR0FBQSxFQUNBLENBQUFycUIsRUFBQSxJQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFNBQUE2b0IsTUFBQSxHQUFBLEVBQ0EsQ0FBQXJxQixFQUFBLElBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsU0FBQTZvQixNQUFBLEVBQUEsRUFDQSxDQUFBcnFCLEVBQUEsSUFBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxTQUFBNm9CLE1BQUEsRUFBQSxFQUNBLENBQUFycUIsRUFBQSxHQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFNBQUE2b0IsTUFBQSxDQUFBLEVBQ0EsQ0FBQXJxQixFQUFBLElBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsU0FBQTZvQixNQUFBLEdBQUEsRUFDQSxDQUFBcnFCLEVBQUEsSUFBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxTQUFBNm9CLE1BQUEsR0FBQSxFQUNBLENBQUFycUIsRUFBQSxJQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFNBQUE2b0IsTUFBQSxHQUFBLEVBQ0EsQ0FBQXJxQixFQUFBLEdBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsU0FBQTZvQixNQUFBLENBQUEsRUFDQSxDQUFBcnFCLEVBQUEsR0FBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENBQUEsUUFBQUcsTUFBQSxTQUFBNm9CLE1BQUEsQ0FBQSxFQUNBLENBQUFycUIsRUFBQSxHQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsQ0FBQSxRQUFBRyxNQUFBLFNBQUE2b0IsTUFBQSxHQUFBLEVBQ0EsQ0FBQXJxQixFQUFBLEdBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxDQUFBLFFBQUFHLE1BQUEsU0FBQTZvQixNQUFBLENBQUEsRUFDQSxDQUFBcnFCLEVBQUEsSUFBQUMsRUFBQSxDQUFBLElBQUFvQixNQUFBLENB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N29CLE1BQUEsUUFBQSxFQUNBLENBQUF4QixFQUFBLElBQUFDLEVBQUEsQ0FBQSxJQUFBb0IsTUFBQSxHQUFBZ3BCLE1BQUEsSUFBQTdvQixNQUFBLFFBQUEsRUFDQSxDQUFBeEIsRUFBQSxJQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsR0FBQWdwQixNQUFBLElBQUE3b0IsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLE1BQUFvQixNQUFBLEdBQUFncEIsTUFBQSxJQUFBN29CLE1BQUEsUUFBQSxFQUNBLENBQUF4QixFQUFBLENBQUEsSUFBQUMsRUFBQSxNQUFBb0IsTUFBQSxHQUFBZ3BCLE1BQUEsSUFBQTdvQixNQUFBLFFBQUEsRUFDQSxDQUFBeEIsRUFBQSxDQUFBLElBQUFDLEVBQUEsSUFBQW9CLE1BQUEsR0FBQWdwQixNQUFBLElBQUE3b0IsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLElBQUFvQixNQUFBLEdBQUFncEIsTUFBQSxJQUFBN29CLE1BQUEsUUFBQSxFQUNBLENBQUF4QixFQUFBLENBQUEsSUFBQUMsRUFBQSxJQUFBb0IsTUFBQSxHQUFBZ3BCLE1BQUEsSUFBQTdvQixNQUFBLFFBQUEsRUFDQSxDQUFBeEIsRUFBQSxDQUFBLElBQUFDLEVBQUEsSUFBQW9CLE1BQUEsR0FBQWdwQixNQUFBLElBQUE3b0IsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLENBQUEsTUFBQW9CLE1BQUEsR0FBQWdwQixNQUFBLElBQUE3b0IsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLENBQUEsTUFBQW9CLE1BQUEsR0FBQWdwQixNQUFBLElBQUE3b0IsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsR0FBQWdwQixNQUFBLElBQUE3b0IsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsR0FBQWdwQixNQUFBLElBQUE3b0IsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsR0FBQWdwQixNQUFBLElBQUE3b0IsTUFBQSxRQUFBLEVBQ0EsQ0FBQXhCLEVBQUEsQ0FBQSxJQUFBQyxFQUFBLENBQUEsSUFBQW9CLE1BQUEsR0FBQWdwQixNQUFBLElBQUE3b0IsTUFBQSxRQUFBLEdBSUFpcEIsU0FBQSxDQUNBLENBQUFDLEdBQUEsRUFBQUMsR0FBQSxFQUFBSCxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUE0b0IsTUFBQSxDQUFBLElBQUEvb0IsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxHQUFBcEIsRUFBQSxHQUFBLEVBQ0EsQ0FBQXlxQixHQUFBLElBQUFDLEdBQUEsSUFBQU4sTUFBQSxFQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUFILE1BQUEsR0FBQXBCLEVBQUEsQ0FBQSxHQUFBLEVBQ0EsQ0FBQXlxQixHQUFBLElBQUFDLEdBQUEsSUFBQU4sTUFBQSxFQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUFILE1BQUEsRUFBQSxFQUNBLENBQUFxcEIsR0FBQSxJQUFBQyxHQUFBLElBQUFOLE1BQUEsRUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLEdBQUFwQixFQUFBLEdBQUEsRUFDQSxDQUFBeXFCLEdBQUEsRUFBQUMsR0FBQSxFQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQTRvQixNQUFBLENBQUEsSUFBQS9vQixNQUFBLENBQUEsUUFBQXJCLEVBQUEsQ0FBQSxHQUFBLEVBQ0EsQ0FBQTBxQixHQUFBLEVBQUFDLEdBQUEsRUFBQUgsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBNG9CLE1BQUEsQ0FBQSxJQUFBL29CLE1BQUEsQ0FBQSxPQUFBLEVBQ0EsQ0FBQXFwQixHQUFBLEVBQUFDLEdBQUEsRUFBQU4sTUFBQSxDQUFBLEdBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQTRvQixNQUFBLENBQUEsSUFBQS9vQixNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxFQUFBQyxHQUFBLEVBQUFOLE1BQUEsQ0FBQSxHQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUE0b0IsTUFBQSxDQUFBLElBQUEvb0IsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsRUFBQUMsR0FBQSxFQUFBTixNQUFBLENBQUEsR0FBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBNG9CLE1BQUEsQ0FBQSxJQUFBL29CLE1BQUEsQ0FBQSxPQUFBLEVBQ0EsQ0FBQXFwQixHQUFBLEVBQUFDLEdBQUEsRUFBQU4sTUFBQSxHQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUE0b0IsTUFBQSxDQUFBLElBQUEvb0IsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsRUFBQUMsR0FBQSxFQUFBSCxJQUFBLENBQUEsRUFBQUosTUFBQSxDQUFBLEdBQUEvb0IsTUFBQSxDQUFBLFFBQUFwQixFQUFBLEVBQUEsRUFDQSxDQUFBeXFCLEdBQUEsR0FBQUMsR0FBQSxHQUFBSCxJQUFBLENBQUEsRUFBQUosTUFBQSxDQUFBLEdBQUEvb0IsTUFBQSxDQUFBLFFBQUFwQixFQUFBLENBQUEsRUFBQSxFQUNBLENBQUF5cUIsR0FBQSxHQUFBQyxHQUFBLEdBQUFILElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQTRvQixNQUFBLENBQUEsR0FBQS9vQixNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxHQUFBQyxHQUFBLEVBQUFOLE1BQUEsQ0FBQSxHQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUE0b0IsTUFBQSxDQUFBLEdBQUEvb0IsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLEdBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQTRvQixNQUFBLENBQUEsR0FBQS9vQixNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxHQUFBQyxHQUFBLEdBQUFOLE1BQUEsRUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxHQUFBQyxHQUFBLEdBQUFILElBQUEsQ0FBQSxFQUFBSixNQUFBLENBQUEsR0FBQS9vQixNQUFBLENBQUEsUUFBQXBCLEVBQUEsQ0FBQSxFQUFBLEVBQ0EsQ0FBQXlxQixHQUFBLEdBQUFDLEdBQUEsR0FBQUgsSUFBQSxDQUFBLEVBQUFKLE1BQUEsQ0FBQSxHQUFBL29CLE1BQUEsQ0FBQSxRQUFBcEIsRUFBQSxFQUFBLEVBQ0EsQ0FBQXlxQixHQUFBLEdBQUFDLEdBQUEsR0FBQUgsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBNG9CLE1BQUEsQ0FBQSxHQUFBL29CLE1BQUEsQ0FBQSxRQUFBckIsRUFBQSxHQUFBLEVBQ0EsQ0FBQTBxQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxDQUFBLEdBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQTRvQixNQUFBLENBQUEsR0FBQS9vQixNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxHQUFBQyxHQUFBLEdBQUFOLE1BQUEsR0FBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBNG9CLE1BQUEsQ0FBQSxHQUFBL29CLE1BQUEsQ0FBQSxPQUFBLEVBQ0EsQ0FBQXFwQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxFQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUFILE1BQUEsQ0FBQSxRQUFBckIsRUFBQSxHQUFBLEVBQ0EsQ0FBQTBxQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxFQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUFILE1BQUEsQ0FBQSxRQUFBckIsRUFBQSxDQUFBLEVBQ0EsQ0FBQTBxQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxFQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUFILE1BQUEsQ0FBQSxRQUFBckIsRUFBQSxDQUFBLEdBQUEsRUFDQSxDQUFBMHFCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLENBQUEsSUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsUUFBQXJCLEVBQUEsQ0FBQSxHQUFBLEVBQ0EsQ0FBQTBxQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxJQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUFILE1BQUEsQ0FBQSxPQUFBLEVBQ0EsQ0FBQXFwQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxDQUFBLElBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxDQUFBLFFBQUFyQixFQUFBLENBQUEsR0FBQSxFQUNBLENBQUEwcUIsR0FBQSxHQUFBQyxHQUFBLEdBQUFOLE1BQUEsSUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxHQUFBQyxHQUFBLEdBQUFOLE1BQUEsQ0FBQSxJQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUFILE1BQUEsQ0FBQSxRQUFBckIsRUFBQSxDQUFBLEdBQUEsRUFDQSxDQUFBMHFCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLElBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLENBQUEsSUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsUUFBQXJCLEVBQUEsQ0FBQSxHQUFBLEVBQ0EsQ0FBQTBxQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxJQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUFILE1BQUEsQ0FBQSxPQUFBLEVBQ0EsQ0FBQXFwQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxDQUFBLElBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxDQUFBLFFBQUFyQixFQUFBLENBQUEsR0FBQSxFQUNBLENBQUEwcUIsR0FBQSxHQUFBQyxHQUFBLEdBQUFOLE1BQUEsSUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxHQUFBQyxHQUFBLEdBQUFOLE1BQUEsQ0FBQSxJQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUFILE1BQUEsQ0FBQSxRQUFBckIsRUFBQSxDQUFBLEVBQ0EsQ0FBQTBxQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxJQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUFILE1BQUEsQ0FBQSxRQUFBckIsRUFBQSxDQUFBLEVBQ0EsQ0FBQTBxQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxDQUFBLElBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxDQUFBLFFBQUFyQixFQUFBLENBQUEsRUFDQSxDQUFBMHFCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLElBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxDQUFBLFFBQUFyQixFQUFBLENBQUEsRUFDQSxDQUFBMHFCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLENBQUEsSUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsUUFBQXJCLEVBQUEsQ0FBQSxFQUNBLENBQUEwcUIsR0FBQSxHQUFBQyxHQUFBLEdBQUFOLE1BQUEsSUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsUUFBQXJCLEVBQUEsQ0FBQSxFQUNBLENBQUEwcUIsR0FBQSxHQUFBQyxHQUFBLEdBQUFOLE1BQUEsSUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsTUFBQXJCLEVBQUEsSUFBQXNxQixHQUFBLENBQUEsSUFBQSxDQUFBLElBQUFDLEdBQUEsQ0FBQSxJQUFBLEdBQUEsRUFDQSxDQUFBRyxHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxHQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUE0b0IsTUFBQSxHQUFBL29CLE1BQUEsQ0FBQSxNQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQTRvQixNQUFBLEdBQUEvb0IsTUFBQSxDQUFBLE1BQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxHQUFBQyxHQUFBLEdBQUFOLE1BQUEsQ0FBQSxHQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUE0b0IsTUFBQSxHQUFBL29CLE1BQUEsQ0FBQSxNQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQTRvQixNQUFBLEdBQUEvb0IsTUFBQSxDQUFBLE1BQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxHQUFBQyxHQUFBLEdBQUFOLE1BQUEsQ0FBQSxHQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUE0b0IsTUFBQSxHQUFBL29CLE1BQUEsQ0FBQSxNQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLENBQUEsR0FBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBNG9CLE1BQUEsR0FBQS9vQixNQUFBLENBQUEsTUFBQSxPQUFBLEVBQ0EsQ0FBQXFwQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxFQUFBRyxJQUFBLENBQUEsRUFBQUosTUFBQSxFQUFBL29CLE1BQUEsQ0FBQSxNQUFBLFFBQUFwQixFQUFBLEVBQUEsRUFDQSxDQUFBeXFCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBSixNQUFBLEVBQUEvb0IsTUFBQSxDQUFBLE1BQUEsUUFBQXBCLEVBQUEsQ0FBQSxFQUFBLEVBQ0EsQ0FBQXlxQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxFQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUE0b0IsTUFBQSxFQUFBL29CLE1BQUEsQ0FBQSxNQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLENBQUEsR0FBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBNG9CLE1BQUEsRUFBQS9vQixNQUFBLENBQUEsTUFBQSxPQUFBLEVBQ0EsQ0FBQXFwQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxHQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUE0b0IsTUFBQSxHQUFBL29CLE1BQUEsQ0FBQSxNQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBSixNQUFBLEVBQUEvb0IsTUFBQSxDQUFBLE1BQUEsUUFBQXBCLEVBQUEsQ0FBQSxFQUFBLEVBQ0EsQ0FBQXlxQixHQUFBLEdBQUFDLEdBQUEsR0FBQU4sTUFBQSxFQUFBRyxJQUFBLENBQUEsRUFBQUosTUFBQSxFQUFBL29CLE1BQUEsQ0FBQSxNQUFBLFFBQUFwQixFQUFBLEVBQUEsRUFDQSxDQUFBeXFCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQTRvQixNQUFBLEVBQUEvb0IsTUFBQSxDQUFBLE1BQUEsUUFBQXJCLEVBQUEsR0FBQSxFQUNBLENBQUEwcUIsR0FBQSxHQUFBQyxHQUFBLEdBQUFOLE1BQUEsQ0FBQSxHQUFBRyxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUE0b0IsTUFBQSxFQUFBL29CLE1BQUEsQ0FBQSxNQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsR0FBQUMsR0FBQSxHQUFBTixNQUFBLEdBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQTRvQixNQUFBLEdBQUEvb0IsTUFBQSxDQUFBLE1BQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxJQUFBQyxHQUFBLElBQUFOLE1BQUEsa0JBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxDQUFBLFFBQUFyQixFQUFBLEdBQUEsRUFDQSxDQUFBMHFCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLENBQUEsSUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsTUFBQXJCLEVBQUEsQ0FBQSxJQUFBc3FCLEdBQUEsQ0FBQSxJQUFBLENBQUEsSUFBQUMsR0FBQSxDQUFBLElBQUEsR0FBQSxFQUNBLENBQUFHLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQTRvQixNQUFBLEdBQUEvb0IsTUFBQSxDQUFBLE1BQUEsUUFBQXJCLEVBQUEsQ0FBQSxHQUFBLEVBQ0EsQ0FBQTBxQixHQUFBLEdBQUFDLEdBQUEsSUFBQUgsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxHQUFBQyxHQUFBLElBQUFILElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsRUFBQUMsR0FBQSxHQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQTRvQixNQUFBLENBQUEsSUFBQS9vQixNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxJQUFBQyxHQUFBLElBQUFOLE1BQUEsRUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBNG9CLE1BQUEsR0FBQS9vQixNQUFBLENBQUEsTUFBQSxPQUFBLEVBQ0EsQ0FBQXFwQixHQUFB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R0FBQSxJQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLEVBQUFHLElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQXhCLEVBQUEsR0FBQSxFQUNBLENBQUEwcUIsR0FBQSxJQUFBQyxHQUFBLElBQUFOLE1BQUEsSUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxJQUFBQyxHQUFBLElBQUFOLE1BQUEsRUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxJQUFBQyxHQUFBLElBQUFOLE1BQUEsRUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxJQUFBQyxHQUFBLElBQUFOLE1BQUEsRUFBQUcsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxJQUFBQyxHQUFBLElBQUFILElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBSCxJQUFBLENBQUEsRUFBQWhwQixNQUFBLFNBQUFILE1BQUEsQ0FBQSxPQUFBLEVBQ0EsQ0FBQXFwQixHQUFBLElBQUFDLEdBQUEsSUFBQUgsSUFBQSxDQUFBLEVBQUFocEIsTUFBQSxTQUFBSCxNQUFBLENBQUEsT0FBQSxFQUNBLENBQUFxcEIsR0FBQSxJQUFBQyxHQUFBLElBQUFILElBQUEsQ0FBQSxFQUFBaHBCLE1BQUEsU0FBQUgsTUFBQSxDQUFBLE9BQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdBQUEsSUFBQUMsR0FBQSxJQUFBTixNQUFBLElBQUE3b0IsTUFBQSxTQUFBSCxNQUFBLEVBQUEsRUFDQSxDQUFBcXBCLEdB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QVFjLElBQUcsRUFBRzBTLFVBQ2xDcnlCLFFBQUF5d0IsUUFBUXJxQixLQUFLaUgsUUFBTSxDLENBRTNCIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCIoZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuICAgIHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyA/IGZhY3RvcnkoZXhwb3J0cykgOlxuICAgIHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShbJ2V4cG9ydHMnXSwgZmFjdG9yeSkgOlxuICAgIChnbG9iYWwgPSBnbG9iYWwgfHwgc2VsZiwgZmFjdG9yeShnbG9iYWxbJ0BhYnJhaGFtL3JlZmxlY3Rpb24nXSA9IHt9KSk7XG59KHRoaXMsIChmdW5jdGlvbiAoZXhwb3J0cykgeyAndXNlIHN0cmljdCc7XG5cbiAgICBjb25zdCBNZXRhZGF0YSA9IG5ldyBXZWFrTWFwKCk7XG4gICAgZnVuY3Rpb24gZGVmaW5lTWV0YWRhdGEobWV0YWRhdGFLZXksIG1ldGFkYXRhVmFsdWUsIHRhcmdldCwgcHJvcGVydHlLZXkpIHtcbiAgICAgICAgcmV0dXJuIG9yZGluYXJ5RGVmaW5lT3duTWV0YWRhdGEobWV0YWRhdGFLZXksIG1ldGFkYXRhVmFsdWUsIHRhcmdldCwgcHJvcGVydHlLZXkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIHByb3BlcnR5S2V5LCBhdHRyaWJ1dGVzKSB7XG4gICAgICAgIGlmIChkZWNvcmF0b3JzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICByZXR1cm4gZGVjb3JhdGVDb25zdHJ1Y3RvcihkZWNvcmF0b3JzLCB0YXJnZXQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHByb3BlcnR5S2V5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBkZWNvcmF0ZVByb3BlcnR5KGRlY29yYXRvcnMsIHRhcmdldCwgcHJvcGVydHlLZXksIGF0dHJpYnV0ZXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZnVuY3Rpb24gbWV0YWRhdGEobWV0YWRhdGFLZXksIG1ldGFkYXRhVmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIGRlY29yYXRvcih0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgICAgICAgICBvcmRpbmFyeURlZmluZU93bk1ldGFkYXRhKG1ldGFkYXRhS2V5LCBtZXRhZGF0YVZhbHVlLCB0YXJnZXQsIHByb3BlcnR5S2V5KTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZ2V0TWV0YWRhdGEobWV0YWRhdGFLZXksIHRhcmdldCwgcHJvcGVydHlLZXkpIHtcbiAgICAgICAgcmV0dXJuIG9yZGluYXJ5R2V0TWV0YWRhdGEobWV0YWRhdGFLZXksIHRhcmdldCwgcHJvcGVydHlLZXkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBnZXRPd25NZXRhZGF0YShtZXRhZGF0YUtleSwgdGFyZ2V0LCBwcm9wZXJ0eUtleSkge1xuICAgICAgICByZXR1cm4gb3JkaW5hcnlHZXRPd25NZXRhZGF0YShtZXRhZGF0YUtleSwgdGFyZ2V0LCBwcm9wZXJ0eUtleSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGhhc093bk1ldGFkYXRhKG1ldGFkYXRhS2V5LCB0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgICAgIHJldHVybiAhIW9yZGluYXJ5R2V0T3duTWV0YWRhdGEobWV0YWRhdGFLZXksIHRhcmdldCwgcHJvcGVydHlLZXkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBoYXNNZXRhZGF0YShtZXRhZGF0YUtleSwgdGFyZ2V0LCBwcm9wZXJ0eUtleSkge1xuICAgICAgICByZXR1cm4gISFvcmRpbmFyeUdldE1ldGFkYXRhKG1ldGFkYXRhS2V5LCB0YXJnZXQsIHByb3BlcnR5S2V5KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZGVjb3JhdGVDb25zdHJ1Y3RvcihkZWNvcmF0b3JzLCB0YXJnZXQpIHtcbiAgICAgICAgZGVjb3JhdG9ycy5yZXZlcnNlKCkuZm9yRWFjaCgoZGVjb3JhdG9yKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkZWNvcmF0ZWQgPSBkZWNvcmF0b3IodGFyZ2V0KTtcbiAgICAgICAgICAgIGlmIChkZWNvcmF0ZWQpIHtcbiAgICAgICAgICAgICAgICB0YXJnZXQgPSBkZWNvcmF0ZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH1cbiAgICBmdW5jdGlvbiBkZWNvcmF0ZVByb3BlcnR5KGRlY29yYXRvcnMsIHRhcmdldCwgcHJvcGVydHlLZXksIGRlc2NyaXB0b3IpIHtcbiAgICAgICAgZGVjb3JhdG9ycy5yZXZlcnNlKCkuZm9yRWFjaCgoZGVjb3JhdG9yKSA9PiB7XG4gICAgICAgICAgICBkZXNjcmlwdG9yID0gZGVjb3JhdG9yKHRhcmdldCwgcHJvcGVydHlLZXksIGRlc2NyaXB0b3IpIHx8IGRlc2NyaXB0b3I7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGVzY3JpcHRvcjtcbiAgICB9XG4gICAgZnVuY3Rpb24gb3JkaW5hcnlEZWZpbmVPd25NZXRhZGF0YShtZXRhZGF0YUtleSwgbWV0YWRhdGFWYWx1ZSwgdGFyZ2V0LCBwcm9wZXJ0eUtleSkge1xuICAgICAgICBpZiAocHJvcGVydHlLZXkgJiYgIVsnc3RyaW5nJywgJ3N5bWJvbCddLmluY2x1ZGVzKHR5cGVvZiBwcm9wZXJ0eUtleSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICAoZ2V0TWV0YWRhdGFNYXAodGFyZ2V0LCBwcm9wZXJ0eUtleSkgfHwgY3JlYXRlTWV0YWRhdGFNYXAodGFyZ2V0LCBwcm9wZXJ0eUtleSkpXG4gICAgICAgICAgICAuc2V0KG1ldGFkYXRhS2V5LCBtZXRhZGF0YVZhbHVlKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb3JkaW5hcnlHZXRNZXRhZGF0YShtZXRhZGF0YUtleSwgdGFyZ2V0LCBwcm9wZXJ0eUtleSkge1xuICAgICAgICByZXR1cm4gISFvcmRpbmFyeUdldE93bk1ldGFkYXRhKG1ldGFkYXRhS2V5LCB0YXJnZXQsIHByb3BlcnR5S2V5KVxuICAgICAgICAgICAgPyBvcmRpbmFyeUdldE93bk1ldGFkYXRhKG1ldGFkYXRhS2V5LCB0YXJnZXQsIHByb3BlcnR5S2V5KVxuICAgICAgICAgICAgOiBPYmplY3QuZ2V0UHJvdG90eXBlT2YodGFyZ2V0KVxuICAgICAgICAgICAgICAgID8gb3JkaW5hcnlHZXRNZXRhZGF0YShtZXRhZGF0YUtleSwgT2JqZWN0LmdldFByb3RvdHlwZU9mKHRhcmdldCksIHByb3BlcnR5S2V5KVxuICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvcmRpbmFyeUdldE93bk1ldGFkYXRhKG1ldGFkYXRhS2V5LCB0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgICAgIGlmICh0YXJnZXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1ldGFkYXRhTWFwID0gZ2V0TWV0YWRhdGFNYXAodGFyZ2V0LCBwcm9wZXJ0eUtleSk7XG4gICAgICAgIHJldHVybiBtZXRhZGF0YU1hcCAmJiBtZXRhZGF0YU1hcC5nZXQobWV0YWRhdGFLZXkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBnZXRNZXRhZGF0YU1hcCh0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgICAgIHJldHVybiBNZXRhZGF0YS5nZXQodGFyZ2V0KSAmJiBNZXRhZGF0YS5nZXQodGFyZ2V0KS5nZXQocHJvcGVydHlLZXkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjcmVhdGVNZXRhZGF0YU1hcCh0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgICAgIGNvbnN0IHRhcmdldE1ldGFkYXRhID0gTWV0YWRhdGEuZ2V0KHRhcmdldCkgfHwgbmV3IE1hcCgpO1xuICAgICAgICBNZXRhZGF0YS5zZXQodGFyZ2V0LCB0YXJnZXRNZXRhZGF0YSk7XG4gICAgICAgIGNvbnN0IG1ldGFkYXRhTWFwID0gdGFyZ2V0TWV0YWRhdGEuZ2V0KHByb3BlcnR5S2V5KSB8fCAobmV3IE1hcCgpKTtcbiAgICAgICAgdGFyZ2V0TWV0YWRhdGEuc2V0KHByb3BlcnR5S2V5LCBtZXRhZGF0YU1hcCk7XG4gICAgICAgIHJldHVybiBtZXRhZGF0YU1hcDtcbiAgICB9XG4gICAgY29uc3QgUmVmbGVjdGlvbiA9IHtcbiAgICAgICAgZGVjb3JhdGUsXG4gICAgICAgIGRlZmluZU1ldGFkYXRhLFxuICAgICAgICBnZXRNZXRhZGF0YSxcbiAgICAgICAgZ2V0T3duTWV0YWRhdGEsXG4gICAgICAgIGhhc01ldGFkYXRhLFxuICAgICAgICBoYXNPd25NZXRhZGF0YSxcbiAgICAgICAgbWV0YWRhdGEsXG4gICAgfTtcbiAgICBPYmplY3QuYXNzaWduKFJlZmxlY3QsIFJlZmxlY3Rpb24pO1xuXG4gICAgZXhwb3J0cy5SZWZsZWN0aW9uID0gUmVmbGVjdGlvbjtcbiAgICBleHBvcnRzLmRlY29yYXRlID0gZGVjb3JhdGU7XG4gICAgZXhwb3J0cy5kZWZpbmVNZXRhZGF0YSA9IGRlZmluZU1ldGFkYXRhO1xuICAgIGV4cG9ydHMuZ2V0TWV0YWRhdGEgPSBnZXRNZXRhZGF0YTtcbiAgICBleHBvcnRzLmdldE93bk1ldGFkYXRhID0gZ2V0T3duTWV0YWRhdGE7XG4gICAgZXhwb3J0cy5oYXNNZXRhZGF0YSA9IGhhc01ldGFkYXRhO1xuICAgIGV4cG9ydHMuaGFzT3duTWV0YWRhdGEgPSBoYXNPd25NZXRhZGF0YTtcbiAgICBleHBvcnRzLm1ldGFkYXRhID0gbWV0YWRhdGE7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG59KSkpO1xuIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFIgPSB0eXBlb2YgUmVmbGVjdCA9PT0gJ29iamVjdCcgPyBSZWZsZWN0IDogbnVsbFxudmFyIFJlZmxlY3RBcHBseSA9IFIgJiYgdHlwZW9mIFIuYXBwbHkgPT09ICdmdW5jdGlvbidcbiAgPyBSLmFwcGx5XG4gIDogZnVuY3Rpb24gUmVmbGVjdEFwcGx5KHRhcmdldCwgcmVjZWl2ZXIsIGFyZ3MpIHtcbiAgICByZXR1cm4gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5LmNhbGwodGFyZ2V0LCByZWNlaXZlciwgYXJncyk7XG4gIH1cblxudmFyIFJlZmxlY3RPd25LZXlzXG5pZiAoUiAmJiB0eXBlb2YgUi5vd25LZXlzID09PSAnZnVuY3Rpb24nKSB7XG4gIFJlZmxlY3RPd25LZXlzID0gUi5vd25LZXlzXG59IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgUmVmbGVjdE93bktleXMgPSBmdW5jdGlvbiBSZWZsZWN0T3duS2V5cyh0YXJnZXQpIHtcbiAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGFyZ2V0KVxuICAgICAgLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHRhcmdldCkpO1xuICB9O1xufSBlbHNlIHtcbiAgUmVmbGVjdE93bktleXMgPSBmdW5jdGlvbiBSZWZsZWN0T3duS2V5cyh0YXJnZXQpIHtcbiAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGFyZ2V0KTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gUHJvY2Vzc0VtaXRXYXJuaW5nKHdhcm5pbmcpIHtcbiAgaWYgKGNvbnNvbGUgJiYgY29uc29sZS53YXJuKSBjb25zb2xlLndhcm4od2FybmluZyk7XG59XG5cbnZhciBOdW1iZXJJc05hTiA9IE51bWJlci5pc05hTiB8fCBmdW5jdGlvbiBOdW1iZXJJc05hTih2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT09IHZhbHVlO1xufVxuXG5mdW5jdGlvbiBFdmVudEVtaXR0ZXIoKSB7XG4gIEV2ZW50RW1pdHRlci5pbml0LmNhbGwodGhpcyk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IEV2ZW50RW1pdHRlcjtcbm1vZHVsZS5leHBvcnRzLm9uY2UgPSBvbmNlO1xuXG4vLyBCYWNrd2FyZHMtY29tcGF0IHdpdGggbm9kZSAwLjEwLnhcbkV2ZW50RW1pdHRlci5FdmVudEVtaXR0ZXIgPSBFdmVudEVtaXR0ZXI7XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuX2V2ZW50cyA9IHVuZGVmaW5lZDtcbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuX2V2ZW50c0NvdW50ID0gMDtcbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuX21heExpc3RlbmVycyA9IHVuZGVmaW5lZDtcblxuLy8gQnkgZGVmYXVsdCBFdmVudEVtaXR0ZXJzIHdpbGwgcHJpbnQgYSB3YXJuaW5nIGlmIG1vcmUgdGhhbiAxMCBsaXN0ZW5lcnMgYXJlXG4vLyBhZGRlZCB0byBpdC4gVGhpcyBpcyBhIHVzZWZ1bCBkZWZhdWx0IHdoaWNoIGhlbHBzIGZpbmRpbmcgbWVtb3J5IGxlYWtzLlxudmFyIGRlZmF1bHRNYXhMaXN0ZW5lcnMgPSAxMDtcblxuZnVuY3Rpb24gY2hlY2tMaXN0ZW5lcihsaXN0ZW5lcikge1xuICBpZiAodHlwZW9mIGxpc3RlbmVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwibGlzdGVuZXJcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgRnVuY3Rpb24uIFJlY2VpdmVkIHR5cGUgJyArIHR5cGVvZiBsaXN0ZW5lcik7XG4gIH1cbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KEV2ZW50RW1pdHRlciwgJ2RlZmF1bHRNYXhMaXN0ZW5lcnMnLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGRlZmF1bHRNYXhMaXN0ZW5lcnM7XG4gIH0sXG4gIHNldDogZnVuY3Rpb24oYXJnKSB7XG4gICAgaWYgKHR5cGVvZiBhcmcgIT09ICdudW1iZXInIHx8IGFyZyA8IDAgfHwgTnVtYmVySXNOYU4oYXJnKSkge1xuICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RoZSB2YWx1ZSBvZiBcImRlZmF1bHRNYXhMaXN0ZW5lcnNcIiBpcyBvdXQgb2YgcmFuZ2UuIEl0IG11c3QgYmUgYSBub24tbmVnYXRpdmUgbnVtYmVyLiBSZWNlaXZlZCAnICsgYXJnICsgJy4nKTtcbiAgICB9XG4gICAgZGVmYXVsdE1heExpc3RlbmVycyA9IGFyZztcbiAgfVxufSk7XG5cbkV2ZW50RW1pdHRlci5pbml0ID0gZnVuY3Rpb24oKSB7XG5cbiAgaWYgKHRoaXMuX2V2ZW50cyA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICB0aGlzLl9ldmVudHMgPT09IE9iamVjdC5nZXRQcm90b3R5cGVPZih0aGlzKS5fZXZlbnRzKSB7XG4gICAgdGhpcy5fZXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICB0aGlzLl9ldmVudHNDb3VudCA9IDA7XG4gIH1cblxuICB0aGlzLl9tYXhMaXN0ZW5lcnMgPSB0aGlzLl9tYXhMaXN0ZW5lcnMgfHwgdW5kZWZpbmVkO1xufTtcblxuLy8gT2J2aW91c2x5IG5vdCBhbGwgRW1pdHRlcnMgc2hvdWxkIGJlIGxpbWl0ZWQgdG8gMTAuIFRoaXMgZnVuY3Rpb24gYWxsb3dzXG4vLyB0aGF0IHRvIGJlIGluY3JlYXNlZC4gU2V0IHRvIHplcm8gZm9yIHVubGltaXRlZC5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuc2V0TWF4TGlzdGVuZXJzID0gZnVuY3Rpb24gc2V0TWF4TGlzdGVuZXJzKG4pIHtcbiAgaWYgKHR5cGVvZiBuICE9PSAnbnVtYmVyJyB8fCBuIDwgMCB8fCBOdW1iZXJJc05hTihuKSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgb2YgXCJuXCIgaXMgb3V0IG9mIHJhbmdlLiBJdCBtdXN0IGJlIGEgbm9uLW5lZ2F0aXZlIG51bWJlci4gUmVjZWl2ZWQgJyArIG4gKyAnLicpO1xuICB9XG4gIHRoaXMuX21heExpc3RlbmVycyA9IG47XG4gIHJldHVybiB0aGlzO1xufTtcblxuZnVuY3Rpb24gX2dldE1heExpc3RlbmVycyh0aGF0KSB7XG4gIGlmICh0aGF0Ll9tYXhMaXN0ZW5lcnMgPT09IHVuZGVmaW5lZClcbiAgICByZXR1cm4gRXZlbnRFbWl0dGVyLmRlZmF1bHRNYXhMaXN0ZW5lcnM7XG4gIHJldHVybiB0aGF0Ll9tYXhMaXN0ZW5lcnM7XG59XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZ2V0TWF4TGlzdGVuZXJzID0gZnVuY3Rpb24gZ2V0TWF4TGlzdGVuZXJzKCkge1xuICByZXR1cm4gX2dldE1heExpc3RlbmVycyh0aGlzKTtcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uIGVtaXQodHlwZSkge1xuICB2YXIgYXJncyA9IFtdO1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgYXJncy5wdXNoKGFyZ3VtZW50c1tpXSk7XG4gIHZhciBkb0Vycm9yID0gKHR5cGUgPT09ICdlcnJvcicpO1xuXG4gIHZhciBldmVudHMgPSB0aGlzLl9ldmVudHM7XG4gIGlmIChldmVudHMgIT09IHVuZGVmaW5lZClcbiAgICBkb0Vycm9yID0gKGRvRXJyb3IgJiYgZXZlbnRzLmVycm9yID09PSB1bmRlZmluZWQpO1xuICBlbHNlIGlmICghZG9FcnJvcilcbiAgICByZXR1cm4gZmFsc2U7XG5cbiAgLy8gSWYgdGhlcmUgaXMgbm8gJ2Vycm9yJyBldmVudCBsaXN0ZW5lciB0aGVuIHRocm93LlxuICBpZiAoZG9FcnJvcikge1xuICAgIHZhciBlcjtcbiAgICBpZiAoYXJncy5sZW5ndGggPiAwKVxuICAgICAgZXIgPSBhcmdzWzBdO1xuICAgIGlmIChlciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAvLyBOb3RlOiBUaGUgY29tbWVudHMgb24gdGhlIGB0aHJvd2AgbGluZXMgYXJlIGludGVudGlvbmFsLCB0aGV5IHNob3dcbiAgICAgIC8vIHVwIGluIE5vZGUncyBvdXRwdXQgaWYgdGhpcyByZXN1bHRzIGluIGFuIHVuaGFuZGxlZCBleGNlcHRpb24uXG4gICAgICB0aHJvdyBlcjsgLy8gVW5oYW5kbGVkICdlcnJvcicgZXZlbnRcbiAgICB9XG4gICAgLy8gQXQgbGVhc3QgZ2l2ZSBzb21lIGtpbmQgb2YgY29udGV4dCB0byB0aGUgdXNlclxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoJ1VuaGFuZGxlZCBlcnJvci4nICsgKGVyID8gJyAoJyArIGVyLm1lc3NhZ2UgKyAnKScgOiAnJykpO1xuICAgIGVyci5jb250ZXh0ID0gZXI7XG4gICAgdGhyb3cgZXJyOyAvLyBVbmhhbmRsZWQgJ2Vycm9yJyBldmVudFxuICB9XG5cbiAgdmFyIGhhbmRsZXIgPSBldmVudHNbdHlwZV07XG5cbiAgaWYgKGhhbmRsZXIgPT09IHVuZGVmaW5lZClcbiAgICByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKHR5cGVvZiBoYW5kbGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgUmVmbGVjdEFwcGx5KGhhbmRsZXIsIHRoaXMsIGFyZ3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBsZW4gPSBoYW5kbGVyLmxlbmd0aDtcbiAgICB2YXIgbGlzdGVuZXJzID0gYXJyYXlDbG9uZShoYW5kbGVyLCBsZW4pO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpXG4gICAgICBSZWZsZWN0QXBwbHkobGlzdGVuZXJzW2ldLCB0aGlzLCBhcmdzKTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcblxuZnVuY3Rpb24gX2FkZExpc3RlbmVyKHRhcmdldCwgdHlwZSwgbGlzdGVuZXIsIHByZXBlbmQpIHtcbiAgdmFyIG07XG4gIHZhciBldmVudHM7XG4gIHZhciBleGlzdGluZztcblxuICBjaGVja0xpc3RlbmVyKGxpc3RlbmVyKTtcblxuICBldmVudHMgPSB0YXJnZXQuX2V2ZW50cztcbiAgaWYgKGV2ZW50cyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgZXZlbnRzID0gdGFyZ2V0Ll9ldmVudHMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIHRhcmdldC5fZXZlbnRzQ291bnQgPSAwO1xuICB9IGVsc2Uge1xuICAgIC8vIFRvIGF2b2lkIHJlY3Vyc2lvbiBpbiB0aGUgY2FzZSB0aGF0IHR5cGUgPT09IFwibmV3TGlzdGVuZXJcIiEgQmVmb3JlXG4gICAgLy8gYWRkaW5nIGl0IHRvIHRoZSBsaXN0ZW5lcnMsIGZpcnN0IGVtaXQgXCJuZXdMaXN0ZW5lclwiLlxuICAgIGlmIChldmVudHMubmV3TGlzdGVuZXIgIT09IHVuZGVmaW5lZCkge1xuICAgICAgdGFyZ2V0LmVtaXQoJ25ld0xpc3RlbmVyJywgdHlwZSxcbiAgICAgICAgICAgICAgICAgIGxpc3RlbmVyLmxpc3RlbmVyID8gbGlzdGVuZXIubGlzdGVuZXIgOiBsaXN0ZW5lcik7XG5cbiAgICAgIC8vIFJlLWFzc2lnbiBgZXZlbnRzYCBiZWNhdXNlIGEgbmV3TGlzdGVuZXIgaGFuZGxlciBjb3VsZCBoYXZlIGNhdXNlZCB0aGVcbiAgICAgIC8vIHRoaXMuX2V2ZW50cyB0byBiZSBhc3NpZ25lZCB0byBhIG5ldyBvYmplY3RcbiAgICAgIGV2ZW50cyA9IHRhcmdldC5fZXZlbnRzO1xuICAgIH1cbiAgICBleGlzdGluZyA9IGV2ZW50c1t0eXBlXTtcbiAgfVxuXG4gIGlmIChleGlzdGluZyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgLy8gT3B0aW1pemUgdGhlIGNhc2Ugb2Ygb25lIGxpc3RlbmVyLiBEb24ndCBuZWVkIHRoZSBleHRyYSBhcnJheSBvYmplY3QuXG4gICAgZXhpc3RpbmcgPSBldmVudHNbdHlwZV0gPSBsaXN0ZW5lcjtcbiAgICArK3RhcmdldC5fZXZlbnRzQ291bnQ7XG4gIH0gZWxzZSB7XG4gICAgaWYgKHR5cGVvZiBleGlzdGluZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgLy8gQWRkaW5nIHRoZSBzZWNvbmQgZWxlbWVudCwgbmVlZCB0byBjaGFuZ2UgdG8gYXJyYXkuXG4gICAgICBleGlzdGluZyA9IGV2ZW50c1t0eXBlXSA9XG4gICAgICAgIHByZXBlbmQgPyBbbGlzdGVuZXIsIGV4aXN0aW5nXSA6IFtleGlzdGluZywgbGlzdGVuZXJdO1xuICAgICAgLy8gSWYgd2UndmUgYWxyZWFkeSBnb3QgYW4gYXJyYXksIGp1c3QgYXBwZW5kLlxuICAgIH0gZWxzZSBpZiAocHJlcGVuZCkge1xuICAgICAgZXhpc3RpbmcudW5zaGlmdChsaXN0ZW5lcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGV4aXN0aW5nLnB1c2gobGlzdGVuZXIpO1xuICAgIH1cblxuICAgIC8vIENoZWNrIGZvciBsaXN0ZW5lciBsZWFrXG4gICAgbSA9IF9nZXRNYXhMaXN0ZW5lcnModGFyZ2V0KTtcbiAgICBpZiAobSA+IDAgJiYgZXhpc3RpbmcubGVuZ3RoID4gbSAmJiAhZXhpc3Rpbmcud2FybmVkKSB7XG4gICAgICBleGlzdGluZy53YXJuZWQgPSB0cnVlO1xuICAgICAgLy8gTm8gZXJyb3IgY29kZSBmb3IgdGhpcyBzaW5jZSBpdCBpcyBhIFdhcm5pbmdcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLXN5bnRheFxuICAgICAgdmFyIHcgPSBuZXcgRXJyb3IoJ1Bvc3NpYmxlIEV2ZW50RW1pdHRlciBtZW1vcnkgbGVhayBkZXRlY3RlZC4gJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nLmxlbmd0aCArICcgJyArIFN0cmluZyh0eXBlKSArICcgbGlzdGVuZXJzICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnYWRkZWQuIFVzZSBlbWl0dGVyLnNldE1heExpc3RlbmVycygpIHRvICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAnaW5jcmVhc2UgbGltaXQnKTtcbiAgICAgIHcubmFtZSA9ICdNYXhMaXN0ZW5lcnNFeGNlZWRlZFdhcm5pbmcnO1xuICAgICAgdy5lbWl0dGVyID0gdGFyZ2V0O1xuICAgICAgdy50eXBlID0gdHlwZTtcbiAgICAgIHcuY291bnQgPSBleGlzdGluZy5sZW5ndGg7XG4gICAgICBQcm9jZXNzRW1pdFdhcm5pbmcodyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lciA9IGZ1bmN0aW9uIGFkZExpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gIHJldHVybiBfYWRkTGlzdGVuZXIodGhpcywgdHlwZSwgbGlzdGVuZXIsIGZhbHNlKTtcbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUub24gPSBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyO1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnByZXBlbmRMaXN0ZW5lciA9XG4gICAgZnVuY3Rpb24gcHJlcGVuZExpc3RlbmVyKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gX2FkZExpc3RlbmVyKHRoaXMsIHR5cGUsIGxpc3RlbmVyLCB0cnVlKTtcbiAgICB9O1xuXG5mdW5jdGlvbiBvbmNlV3JhcHBlcigpIHtcbiAgaWYgKCF0aGlzLmZpcmVkKSB7XG4gICAgdGhpcy50YXJnZXQucmVtb3ZlTGlzdGVuZXIodGhpcy50eXBlLCB0aGlzLndyYXBGbik7XG4gICAgdGhpcy5maXJlZCA9IHRydWU7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApXG4gICAgICByZXR1cm4gdGhpcy5saXN0ZW5lci5jYWxsKHRoaXMudGFyZ2V0KTtcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5lci5hcHBseSh0aGlzLnRhcmdldCwgYXJndW1lbnRzKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBfb25jZVdyYXAodGFyZ2V0LCB0eXBlLCBsaXN0ZW5lcikge1xuICB2YXIgc3RhdGUgPSB7IGZpcmVkOiBmYWxzZSwgd3JhcEZuOiB1bmRlZmluZWQsIHRhcmdldDogdGFyZ2V0LCB0eXBlOiB0eXBlLCBsaXN0ZW5lcjogbGlzdGVuZXIgfTtcbiAgdmFyIHdyYXBwZWQgPSBvbmNlV3JhcHBlci5iaW5kKHN0YXRlKTtcbiAgd3JhcHBlZC5saXN0ZW5lciA9IGxpc3RlbmVyO1xuICBzdGF0ZS53cmFwRm4gPSB3cmFwcGVkO1xuICByZXR1cm4gd3JhcHBlZDtcbn1cblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbmNlID0gZnVuY3Rpb24gb25jZSh0eXBlLCBsaXN0ZW5lcikge1xuICBjaGVja0xpc3RlbmVyKGxpc3RlbmVyKTtcbiAgdGhpcy5vbih0eXBlLCBfb25jZVdyYXAodGhpcywgdHlwZSwgbGlzdGVuZXIpKTtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnByZXBlbmRPbmNlTGlzdGVuZXIgPVxuICAgIGZ1bmN0aW9uIHByZXBlbmRPbmNlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgIGNoZWNrTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgICAgdGhpcy5wcmVwZW5kTGlzdGVuZXIodHlwZSwgX29uY2VXcmFwKHRoaXMsIHR5cGUsIGxpc3RlbmVyKSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG4vLyBFbWl0cyBhICdyZW1vdmVMaXN0ZW5lcicgZXZlbnQgaWYgYW5kIG9ubHkgaWYgdGhlIGxpc3RlbmVyIHdhcyByZW1vdmVkLlxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lciA9XG4gICAgZnVuY3Rpb24gcmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBsaXN0LCBldmVudHMsIHBvc2l0aW9uLCBpLCBvcmlnaW5hbExpc3RlbmVyO1xuXG4gICAgICBjaGVja0xpc3RlbmVyKGxpc3RlbmVyKTtcblxuICAgICAgZXZlbnRzID0gdGhpcy5fZXZlbnRzO1xuICAgICAgaWYgKGV2ZW50cyA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gdGhpcztcblxuICAgICAgbGlzdCA9IGV2ZW50c1t0eXBlXTtcbiAgICAgIGlmIChsaXN0ID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiB0aGlzO1xuXG4gICAgICBpZiAobGlzdCA9PT0gbGlzdGVuZXIgfHwgbGlzdC5saXN0ZW5lciA9PT0gbGlzdGVuZXIpIHtcbiAgICAgICAgaWYgKC0tdGhpcy5fZXZlbnRzQ291bnQgPT09IDApXG4gICAgICAgICAgdGhpcy5fZXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgZGVsZXRlIGV2ZW50c1t0eXBlXTtcbiAgICAgICAgICBpZiAoZXZlbnRzLnJlbW92ZUxpc3RlbmVyKVxuICAgICAgICAgICAgdGhpcy5lbWl0KCdyZW1vdmVMaXN0ZW5lcicsIHR5cGUsIGxpc3QubGlzdGVuZXIgfHwgbGlzdGVuZXIpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBsaXN0ICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHBvc2l0aW9uID0gLTE7XG5cbiAgICAgICAgZm9yIChpID0gbGlzdC5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgIGlmIChsaXN0W2ldID09PSBsaXN0ZW5lciB8fCBsaXN0W2ldLmxpc3RlbmVyID09PSBsaXN0ZW5lcikge1xuICAgICAgICAgICAgb3JpZ2luYWxMaXN0ZW5lciA9IGxpc3RbaV0ubGlzdGVuZXI7XG4gICAgICAgICAgICBwb3NpdGlvbiA9IGk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocG9zaXRpb24gPCAwKVxuICAgICAgICAgIHJldHVybiB0aGlzO1xuXG4gICAgICAgIGlmIChwb3NpdGlvbiA9PT0gMClcbiAgICAgICAgICBsaXN0LnNoaWZ0KCk7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIHNwbGljZU9uZShsaXN0LCBwb3NpdGlvbik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobGlzdC5sZW5ndGggPT09IDEpXG4gICAgICAgICAgZXZlbnRzW3R5cGVdID0gbGlzdFswXTtcblxuICAgICAgICBpZiAoZXZlbnRzLnJlbW92ZUxpc3RlbmVyICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgdGhpcy5lbWl0KCdyZW1vdmVMaXN0ZW5lcicsIHR5cGUsIG9yaWdpbmFsTGlzdGVuZXIgfHwgbGlzdGVuZXIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9mZiA9IEV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXI7XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlQWxsTGlzdGVuZXJzID1cbiAgICBmdW5jdGlvbiByZW1vdmVBbGxMaXN0ZW5lcnModHlwZSkge1xuICAgICAgdmFyIGxpc3RlbmVycywgZXZlbnRzLCBpO1xuXG4gICAgICBldmVudHMgPSB0aGlzLl9ldmVudHM7XG4gICAgICBpZiAoZXZlbnRzID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiB0aGlzO1xuXG4gICAgICAvLyBub3QgbGlzdGVuaW5nIGZvciByZW1vdmVMaXN0ZW5lciwgbm8gbmVlZCB0byBlbWl0XG4gICAgICBpZiAoZXZlbnRzLnJlbW92ZUxpc3RlbmVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICB0aGlzLl9ldmVudHMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICAgIHRoaXMuX2V2ZW50c0NvdW50ID0gMDtcbiAgICAgICAgfSBlbHNlIGlmIChldmVudHNbdHlwZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIGlmICgtLXRoaXMuX2V2ZW50c0NvdW50ID09PSAwKVxuICAgICAgICAgICAgdGhpcy5fZXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICBlbHNlXG4gICAgICAgICAgICBkZWxldGUgZXZlbnRzW3R5cGVdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuXG4gICAgICAvLyBlbWl0IHJlbW92ZUxpc3RlbmVyIGZvciBhbGwgbGlzdGVuZXJzIG9uIGFsbCBldmVudHNcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoZXZlbnRzKTtcbiAgICAgICAgdmFyIGtleTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICBrZXkgPSBrZXlzW2ldO1xuICAgICAgICAgIGlmIChrZXkgPT09ICdyZW1vdmVMaXN0ZW5lcicpIGNvbnRpbnVlO1xuICAgICAgICAgIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoJ3JlbW92ZUxpc3RlbmVyJyk7XG4gICAgICAgIHRoaXMuX2V2ZW50cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgIHRoaXMuX2V2ZW50c0NvdW50ID0gMDtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG5cbiAgICAgIGxpc3RlbmVycyA9IGV2ZW50c1t0eXBlXTtcblxuICAgICAgaWYgKHR5cGVvZiBsaXN0ZW5lcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVMaXN0ZW5lcih0eXBlLCBsaXN0ZW5lcnMpO1xuICAgICAgfSBlbHNlIGlmIChsaXN0ZW5lcnMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAvLyBMSUZPIG9yZGVyXG4gICAgICAgIGZvciAoaSA9IGxpc3RlbmVycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXJzW2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuXG5mdW5jdGlvbiBfbGlzdGVuZXJzKHRhcmdldCwgdHlwZSwgdW53cmFwKSB7XG4gIHZhciBldmVudHMgPSB0YXJnZXQuX2V2ZW50cztcblxuICBpZiAoZXZlbnRzID09PSB1bmRlZmluZWQpXG4gICAgcmV0dXJuIFtdO1xuXG4gIHZhciBldmxpc3RlbmVyID0gZXZlbnRzW3R5cGVdO1xuICBpZiAoZXZsaXN0ZW5lciA9PT0gdW5kZWZpbmVkKVxuICAgIHJldHVybiBbXTtcblxuICBpZiAodHlwZW9mIGV2bGlzdGVuZXIgPT09ICdmdW5jdGlvbicpXG4gICAgcmV0dXJuIHVud3JhcCA/IFtldmxpc3RlbmVyLmxpc3RlbmVyIHx8IGV2bGlzdGVuZXJdIDogW2V2bGlzdGVuZXJdO1xuXG4gIHJldHVybiB1bndyYXAgP1xuICAgIHVud3JhcExpc3RlbmVycyhldmxpc3RlbmVyKSA6IGFycmF5Q2xvbmUoZXZsaXN0ZW5lciwgZXZsaXN0ZW5lci5sZW5ndGgpO1xufVxuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVycyA9IGZ1bmN0aW9uIGxpc3RlbmVycyh0eXBlKSB7XG4gIHJldHVybiBfbGlzdGVuZXJzKHRoaXMsIHR5cGUsIHRydWUpO1xufTtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yYXdMaXN0ZW5lcnMgPSBmdW5jdGlvbiByYXdMaXN0ZW5lcnModHlwZSkge1xuICByZXR1cm4gX2xpc3RlbmVycyh0aGlzLCB0eXBlLCBmYWxzZSk7XG59O1xuXG5FdmVudEVtaXR0ZXIubGlzdGVuZXJDb3VudCA9IGZ1bmN0aW9uKGVtaXR0ZXIsIHR5cGUpIHtcbiAgaWYgKHR5cGVvZiBlbWl0dGVyLmxpc3RlbmVyQ291bnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gZW1pdHRlci5saXN0ZW5lckNvdW50KHR5cGUpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBsaXN0ZW5lckNvdW50LmNhbGwoZW1pdHRlciwgdHlwZSk7XG4gIH1cbn07XG5cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJDb3VudCA9IGxpc3RlbmVyQ291bnQ7XG5mdW5jdGlvbiBsaXN0ZW5lckNvdW50KHR5cGUpIHtcbiAgdmFyIGV2ZW50cyA9IHRoaXMuX2V2ZW50cztcblxuICBpZiAoZXZlbnRzICE9PSB1bmRlZmluZWQpIHtcbiAgICB2YXIgZXZsaXN0ZW5lciA9IGV2ZW50c1t0eXBlXTtcblxuICAgIGlmICh0eXBlb2YgZXZsaXN0ZW5lciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIDE7XG4gICAgfSBlbHNlIGlmIChldmxpc3RlbmVyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBldmxpc3RlbmVyLmxlbmd0aDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gMDtcbn1cblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5ldmVudE5hbWVzID0gZnVuY3Rpb24gZXZlbnROYW1lcygpIHtcbiAgcmV0dXJuIHRoaXMuX2V2ZW50c0NvdW50ID4gMCA/IFJlZmxlY3RPd25LZXlzKHRoaXMuX2V2ZW50cykgOiBbXTtcbn07XG5cbmZ1bmN0aW9uIGFycmF5Q2xvbmUoYXJyLCBuKSB7XG4gIHZhciBjb3B5ID0gbmV3IEFycmF5KG4pO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IG47ICsraSlcbiAgICBjb3B5W2ldID0gYXJyW2ldO1xuICByZXR1cm4gY29weTtcbn1cblxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAoOyBpbmRleCArIDEgPCBsaXN0Lmxlbmd0aDsgaW5kZXgrKylcbiAgICBsaXN0W2luZGV4XSA9IGxpc3RbaW5kZXggKyAxXTtcbiAgbGlzdC5wb3AoKTtcbn1cblxuZnVuY3Rpb24gdW53cmFwTGlzdGVuZXJzKGFycikge1xuICB2YXIgcmV0ID0gbmV3IEFycmF5KGFyci5sZW5ndGgpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHJldC5sZW5ndGg7ICsraSkge1xuICAgIHJldFtpXSA9IGFycltpXS5saXN0ZW5lciB8fCBhcnJbaV07XG4gIH1cbiAgcmV0dXJuIHJldDtcbn1cblxuZnVuY3Rpb24gb25jZShlbWl0dGVyLCBuYW1lKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgZnVuY3Rpb24gZXJyb3JMaXN0ZW5lcihlcnIpIHtcbiAgICAgIGVtaXR0ZXIucmVtb3ZlTGlzdGVuZXIobmFtZSwgcmVzb2x2ZXIpO1xuICAgICAgcmVqZWN0KGVycik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVzb2x2ZXIoKSB7XG4gICAgICBpZiAodHlwZW9mIGVtaXR0ZXIucmVtb3ZlTGlzdGVuZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgZW1pdHRlci5yZW1vdmVMaXN0ZW5lcignZXJyb3InLCBlcnJvckxpc3RlbmVyKTtcbiAgICAgIH1cbiAgICAgIHJlc29sdmUoW10uc2xpY2UuY2FsbChhcmd1bWVudHMpKTtcbiAgICB9O1xuXG4gICAgZXZlbnRUYXJnZXRBZ25vc3RpY0FkZExpc3RlbmVyKGVtaXR0ZXIsIG5hbWUsIHJlc29sdmVyLCB7IG9uY2U6IHRydWUgfSk7XG4gICAgaWYgKG5hbWUgIT09ICdlcnJvcicpIHtcbiAgICAgIGFkZEVycm9ySGFuZGxlcklmRXZlbnRFbWl0dGVyKGVtaXR0ZXIsIGVycm9yTGlzdGVuZXIsIHsgb25jZTogdHJ1ZSB9KTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBhZGRFcnJvckhhbmRsZXJJZkV2ZW50RW1pdHRlcihlbWl0dGVyLCBoYW5kbGVyLCBmbGFncykge1xuICBpZiAodHlwZW9mIGVtaXR0ZXIub24gPT09ICdmdW5jdGlvbicpIHtcbiAgICBldmVudFRhcmdldEFnbm9zdGljQWRkTGlzdGVuZXIoZW1pdHRlciwgJ2Vycm9yJywgaGFuZGxlciwgZmxhZ3MpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGV2ZW50VGFyZ2V0QWdub3N0aWNBZGRMaXN0ZW5lcihlbWl0dGVyLCBuYW1lLCBsaXN0ZW5lciwgZmxhZ3MpIHtcbiAgaWYgKHR5cGVvZiBlbWl0dGVyLm9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgaWYgKGZsYWdzLm9uY2UpIHtcbiAgICAgIGVtaXR0ZXIub25jZShuYW1lLCBsaXN0ZW5lcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVtaXR0ZXIub24obmFtZSwgbGlzdGVuZXIpO1xuICAgIH1cbiAgfSBlbHNlIGlmICh0eXBlb2YgZW1pdHRlci5hZGRFdmVudExpc3RlbmVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgLy8gRXZlbnRUYXJnZXQgZG9lcyBub3QgaGF2ZSBgZXJyb3JgIGV2ZW50IHNlbWFudGljcyBsaWtlIE5vZGVcbiAgICAvLyBFdmVudEVtaXR0ZXJzLCB3ZSBkbyBub3QgbGlzdGVuIGZvciBgZXJyb3JgIGV2ZW50cyBoZXJlLlxuICAgIGVtaXR0ZXIuYWRkRXZlbnRMaXN0ZW5lcihuYW1lLCBmdW5jdGlvbiB3cmFwTGlzdGVuZXIoYXJnKSB7XG4gICAgICAvLyBJRSBkb2VzIG5vdCBoYXZlIGJ1aWx0aW4gYHsgb25jZTogdHJ1ZSB9YCBzdXBwb3J0IHNvIHdlXG4gICAgICAvLyBoYXZlIHRvIGRvIGl0IG1hbnVhbGx5LlxuICAgICAgaWYgKGZsYWdzLm9uY2UpIHtcbiAgICAgICAgZW1pdHRlci5yZW1vdmVFdmVudExpc3RlbmVyKG5hbWUsIHdyYXBMaXN0ZW5lcik7XG4gICAgICB9XG4gICAgICBsaXN0ZW5lcihhcmcpO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcImVtaXR0ZXJcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgRXZlbnRFbWl0dGVyLiBSZWNlaXZlZCB0eXBlICcgKyB0eXBlb2YgZW1pdHRlcik7XG4gIH1cbn1cbiIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuQWJzdHJhY3REaXNjID0gdm9pZCAwO1xyXG5yZXF1aXJlKFwiLi9oZWFkbGVzc1wiKTtcclxuLyoqIEFic3RyYWN0IGNsYXNzIHJlcHJlc2VudGluZyBhIGdlbmVyaWMgZGlzYy4gKi9cclxuY2xhc3MgQWJzdHJhY3REaXNjIHtcclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhIGRpc2MuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHJvb20gVGhlIHJvb20gb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihyb29tKSB7XHJcbiAgICAgICAgdGhpcy5fcm9vbSA9IHJvb207XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBkaXN0YW5jZSBiZXR3ZWVuIHR3byBkaXNjcy5cclxuICAgICAqXHJcbiAgICAgKiBSZXR1cm5zIG51bGwgaWYgb25lIG9mIHRoZSBkaXNjcyBpcyBub3QgaW4gZ2FtZS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZGlzYyBBIGRpc2MuXHJcbiAgICAgKi9cclxuICAgIGRpc3RhbmNlVG8oZGlzYykge1xyXG4gICAgICAgIGlmIChpc05hTihwYXJzZUludCh0aGlzLnggKyBcIlwiKSkgfHwgaXNOYU4ocGFyc2VJbnQodGhpcy55ICsgXCJcIikpKVxyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICBpZiAoaXNOYU4ocGFyc2VJbnQoZGlzYy54ICsgXCJcIikpIHx8IGlzTmFOKHBhcnNlSW50KGRpc2MueSArIFwiXCIpKSlcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgaWYgKGlzTmFOKHBhcnNlSW50KHRoaXMucmFkaXVzICsgXCJcIikpIHx8IGlzTmFOKHBhcnNlSW50KGRpc2MueCArIFwiXCIpKSlcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgY29uc3QgeDEgPSB0aGlzLng7XHJcbiAgICAgICAgY29uc3QgeTEgPSB0aGlzLnk7XHJcbiAgICAgICAgY29uc3QgcjEgPSB0aGlzLnJhZGl1cztcclxuICAgICAgICBjb25zdCB4MiA9IGRpc2MueDtcclxuICAgICAgICBjb25zdCB5MiA9IGRpc2MueTtcclxuICAgICAgICBjb25zdCByMiA9IGRpc2MucmFkaXVzO1xyXG4gICAgICAgIGNvbnN0IGR4ID0geDEgLSB4MjtcclxuICAgICAgICBjb25zdCBkeSA9IHkxIC0geTI7XHJcbiAgICAgICAgY29uc3QgYyA9IE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XHJcbiAgICAgICAgcmV0dXJuIE1hdGgubWF4KDAsIGMgLSByMSAtIHIyKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogV2hldGhlciB0d28gZGlzY3MgYXJlIGNvbGxpZGluZy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZGlzYyBBIGRpc2MuXHJcbiAgICAgKi9cclxuICAgIGNvbGxpZGluZ1dpdGgoZGlzYykge1xyXG4gICAgICAgIGNvbnN0IGRpc3RhbmNlID0gdGhpcy5kaXN0YW5jZVRvKGRpc2MpO1xyXG4gICAgICAgIHJldHVybiBkaXN0YW5jZSA/IGRpc3RhbmNlIDw9IDAgOiBmYWxzZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVGhlIHggY29vcmRpbmF0ZSBvZiB0aGUgZGlzYydzIHBvc2l0aW9uLlxyXG4gICAgICovXHJcbiAgICBnZXQgeCgpIHtcclxuICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuX2Rpc2NPYmplY3QpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS54O1xyXG4gICAgfVxyXG4gICAgc2V0IHgodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9kaXNjT2JqZWN0ID0geyB4OiB2YWx1ZSB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgeSBjb29yZGluYXRlIG9mIHRoZSBkaXNjJ3MgcG9zaXRpb24uXHJcbiAgICAgKi9cclxuICAgIGdldCB5KCkge1xyXG4gICAgICAgIHZhciBfYTtcclxuICAgICAgICByZXR1cm4gKF9hID0gdGhpcy5fZGlzY09iamVjdCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnk7XHJcbiAgICB9XHJcbiAgICBzZXQgeSh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX2Rpc2NPYmplY3QgPSB7IHk6IHZhbHVlIH07XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSB4IGNvb3JkaW5hdGUgb2YgdGhlIGRpc2MncyBzcGVlZCB2ZWN0b3IuXHJcbiAgICAgKi9cclxuICAgIGdldCB4c3BlZWQoKSB7XHJcbiAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgIHJldHVybiAoX2EgPSB0aGlzLl9kaXNjT2JqZWN0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EueHNwZWVkO1xyXG4gICAgfVxyXG4gICAgc2V0IHhzcGVlZCh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX2Rpc2NPYmplY3QgPSB7IHhzcGVlZDogdmFsdWUgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVGhlIHkgY29vcmRpbmF0ZSBvZiB0aGUgZGlzYydzIHNwZWVkIHZlY3Rvci5cclxuICAgICAqL1xyXG4gICAgZ2V0IHlzcGVlZCgpIHtcclxuICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuX2Rpc2NPYmplY3QpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS55c3BlZWQ7XHJcbiAgICB9XHJcbiAgICBzZXQgeXNwZWVkKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5fZGlzY09iamVjdCA9IHsgeXNwZWVkOiB2YWx1ZSB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgeCBjb29yZGluYXRlIG9mIHRoZSBkaXNjJ3MgZ3Jhdml0eSB2ZWN0b3IuXHJcbiAgICAgKi9cclxuICAgIGdldCB4Z3Jhdml0eSgpIHtcclxuICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuX2Rpc2NPYmplY3QpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS54Z3Jhdml0eTtcclxuICAgIH1cclxuICAgIHNldCB4Z3Jhdml0eSh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX2Rpc2NPYmplY3QgPSB7IHhncmF2aXR5OiB2YWx1ZSB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgeSBjb29yZGluYXRlIG9mIHRoZSBkaXNjJ3MgZ3Jhdml0eSB2ZWN0b3IuXHJcbiAgICAgKi9cclxuICAgIGdldCB5Z3Jhdml0eSgpIHtcclxuICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuX2Rpc2NPYmplY3QpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS55Z3Jhdml0eTtcclxuICAgIH1cclxuICAgIHNldCB5Z3Jhdml0eSh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX2Rpc2NPYmplY3QgPSB7IHlncmF2aXR5OiB2YWx1ZSB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgZGlzYydzIHJhZGl1cy5cclxuICAgICAqL1xyXG4gICAgZ2V0IHJhZGl1cygpIHtcclxuICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuX2Rpc2NPYmplY3QpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5yYWRpdXM7XHJcbiAgICB9XHJcbiAgICBzZXQgcmFkaXVzKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5fZGlzY09iamVjdCA9IHsgcmFkaXVzOiB2YWx1ZSB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgZGlzYydzIGJvdW5jaW5nIGNvZWZmaWNpZW50LlxyXG4gICAgICovXHJcbiAgICBnZXQgYkNvZWZmKCkge1xyXG4gICAgICAgIHZhciBfYTtcclxuICAgICAgICByZXR1cm4gKF9hID0gdGhpcy5fZGlzY09iamVjdCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmJDb2VmZjtcclxuICAgIH1cclxuICAgIHNldCBiQ29lZmYodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9kaXNjT2JqZWN0ID0geyBiQ29lZmY6IHZhbHVlIH07XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBpbnZlcnNlIG9mIHRoZSBkaXNjJ3MgbWFzcy5cclxuICAgICAqL1xyXG4gICAgZ2V0IGludk1hc3MoKSB7XHJcbiAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgIHJldHVybiAoX2EgPSB0aGlzLl9kaXNjT2JqZWN0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuaW52TWFzcztcclxuICAgIH1cclxuICAgIHNldCBpbnZNYXNzKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5fZGlzY09iamVjdCA9IHsgaW52TWFzczogdmFsdWUgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVGhlIGRpc2MncyBkYW1waW5nIGZhY3Rvci5cclxuICAgICAqL1xyXG4gICAgZ2V0IGRhbXBpbmcoKSB7XHJcbiAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgIHJldHVybiAoX2EgPSB0aGlzLl9kaXNjT2JqZWN0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZGFtcGluZztcclxuICAgIH1cclxuICAgIHNldCBkYW1waW5nKHZhbHVlKSB7XHJcbiAgICAgICAgdGhpcy5fZGlzY09iamVjdCA9IHsgZGFtcGluZzogdmFsdWUgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVGhlIGRpc2MncyBjb2xsaXNpb24gbWFzay5cclxuICAgICAqXHJcbiAgICAgKiBSZXByZXNlbnRzIHdoaWNoIGdyb3VwcyB0aGUgZGlzYyBjYW4gY29sbGlkZSB3aXRoLlxyXG4gICAgICovXHJcbiAgICBnZXQgY01hc2soKSB7XHJcbiAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgIHJldHVybiAoX2EgPSB0aGlzLl9kaXNjT2JqZWN0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY01hc2s7XHJcbiAgICB9XHJcbiAgICBzZXQgY01hc2sodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9kaXNjT2JqZWN0ID0geyBjTWFzazogdmFsdWUgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVGhlIGRpc2MncyBjb2xsaXNpb24gZ3JvdXBzLlxyXG4gICAgICovXHJcbiAgICBnZXQgY0dyb3VwKCkge1xyXG4gICAgICAgIHZhciBfYTtcclxuICAgICAgICByZXR1cm4gKF9hID0gdGhpcy5fZGlzY09iamVjdCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNHcm91cDtcclxuICAgIH1cclxuICAgIHNldCBjR3JvdXAodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9kaXNjT2JqZWN0ID0geyBjR3JvdXA6IHZhbHVlIH07XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5BYnN0cmFjdERpc2MgPSBBYnN0cmFjdERpc2M7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFic3RyYWN0RGlzYy5qcy5tYXAiLCJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLmdldFJHQlN0cmluZyA9IGV4cG9ydHMuaXNMaWdodCA9IGV4cG9ydHMuc2hhZGVDb2xvciA9IGV4cG9ydHMuZ2V0UkdCID0gdm9pZCAwO1xyXG4vKipcclxuICogR2V0IFJHQiBjb2xvciBhcnJheSBmcm9tIGEgaGV4YWRlY2ltYWwgbnVtYmVyIG9yIHN0cmluZ1xyXG4gKi9cclxuZnVuY3Rpb24gZ2V0UkdCKGNvbG9yKSB7XHJcbiAgICBpZiAodHlwZW9mIGNvbG9yID09PSBcInN0cmluZ1wiKVxyXG4gICAgICAgIGNvbG9yID0gTnVtYmVyLnBhcnNlSW50KGNvbG9yLnJlcGxhY2UoXCIjXCIsIFwiXCIpKTtcclxuICAgIHJldHVybiBbXHJcbiAgICAgICAgKGNvbG9yID4+IDE2KSAmIDB4RkYsXHJcbiAgICAgICAgKGNvbG9yID4+IDgpICYgMHhGRixcclxuICAgICAgICBjb2xvciAmIDB4RkZcclxuICAgIF07XHJcbn1cclxuZXhwb3J0cy5nZXRSR0IgPSBnZXRSR0I7XHJcbi8qKlxyXG4gKiBTaGFkZXMgYSBjb2xvci5cclxuICpcclxuICogQGV4YW1wbGVcclxuICogLy8gd2hpdGUgdG8gZ3JheVxyXG4gKiBzaGFkZUNvbG9yKDB4RkZGRkZGLCAtMzApO1xyXG4gKi9cclxuZnVuY3Rpb24gc2hhZGVDb2xvcihjb2xvciwgcGVyY2VudCkge1xyXG4gICAgcmV0dXJuIGdldFJHQihjb2xvcikubWFwKGMgPT4ge1xyXG4gICAgICAgIGNvbnN0IGNvbG9yID0gYyAqICgxMDAgKyBwZXJjZW50KSAvIDEwMDtcclxuICAgICAgICByZXR1cm4gKGNvbG9yIDwgMjU1KSA/IGNvbG9yIDogMjU1O1xyXG4gICAgfSk7XHJcbn1cclxuZXhwb3J0cy5zaGFkZUNvbG9yID0gc2hhZGVDb2xvcjtcclxuLyoqXHJcbiAqIFdoZXRoZXIgYSBjb2xvciBpcyBsaWdodC5cclxuICovXHJcbmZ1bmN0aW9uIGlzTGlnaHQoY29sb3IpIHtcclxuICAgIGNvbnN0IHJnYiA9IGdldFJHQihjb2xvcik7XHJcbiAgICBjb25zdCB5aXEgPSAoKHJnYlswXSAqIDI5OSkgKyAocmdiWzFdICogNTg3KSArIChyZ2JbMl0gKiAxMTQpKSAvIDEwMDA7XHJcbiAgICByZXR1cm4geWlxID49IDEyODtcclxufVxyXG5leHBvcnRzLmlzTGlnaHQgPSBpc0xpZ2h0O1xyXG4vKipcclxuICogUGFyc2VzIGEgUkdCIGFycmF5IGludG8gYSBSR0Igc3RyaW5nLlxyXG4gKi9cclxuZnVuY3Rpb24gZ2V0UkdCU3RyaW5nKHJnYikge1xyXG4gICAgcmV0dXJuIFwicmdiKFwiICsgcmdiLmpvaW4oKSArIFwiKVwiO1xyXG59XHJcbmV4cG9ydHMuZ2V0UkdCU3RyaW5nID0gZ2V0UkdCU3RyaW5nO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db2xvci5qcy5tYXAiLCJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLkNvbW1hbmQgPSB2b2lkIDA7XHJcbmNvbnN0IFJvbGVfMSA9IHJlcXVpcmUoXCIuL1JvbGVcIik7XHJcbi8qKiBDbGFzcyByZXByZXNlbnRpbmcgYSBjb21tYW5kLiAqL1xyXG5jbGFzcyBDb21tYW5kIHtcclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhIGNvbW1hbmQgb2JqZWN0LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBvcHRpb25zIENvbW1hbmQgY29uZmlndXJhdGlvbnMuXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcclxuICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBjb21tYW5kJ3MgYWxpYXNlcy5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmFsaWFzZXMgPSBbXTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUaGUgcGVybWlzc2lvbiByb2xlcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIElmIGFsbCBvZiB0aGUgcGxheWVyJ3Mgcm9sZXMgYXJlIGJlbG93IHRoaXMsIHRoZXkgd2lsbCBiZSBibG9ja2VkIGZyb20gcnVubmluZyB0aGUgY29tbWFuZC5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLnJvbGVzID0gW107XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogV2hldGhlciB0byBkZWxldGUgdGhlIHBsYXllcidzIG1lc3NhZ2UuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5kZWxldGVNZXNzYWdlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBvcHRpb25zLm5hbWU7XHJcbiAgICAgICAgdGhpcy5hbGlhc2VzID0gKF9hID0gb3B0aW9ucy5hbGlhc2VzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB0aGlzLmFsaWFzZXM7XHJcbiAgICAgICAgdGhpcy5kZXNjID0gKF9iID0gb3B0aW9ucy5kZXNjKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBcIlwiO1xyXG4gICAgICAgIHRoaXMudXNhZ2UgPSAoX2MgPSBvcHRpb25zLnVzYWdlKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBcIlwiO1xyXG4gICAgICAgIHRoaXMucm9sZXMgPSAoX2QgPSBvcHRpb25zLnJvbGVzKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiB0aGlzLnJvbGVzO1xyXG4gICAgICAgIHRoaXMuZGVsZXRlTWVzc2FnZSA9IChfZSA9IG9wdGlvbnMuZGVsZXRlTWVzc2FnZSkgIT09IG51bGwgJiYgX2UgIT09IHZvaWQgMCA/IF9lIDogdGhpcy5kZWxldGVNZXNzYWdlO1xyXG4gICAgICAgIHRoaXMuZnVuYyA9IG9wdGlvbnMuZnVuYztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogV2hldGhlciB0aGUgcGxheWVyIGlzIGFsbG93ZWQgdG8gcnVuIHRoaXMgY29tbWFuZCBiYXNlZCBvbiB0aGVpciByb2xlcy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcGxheWVyIFRoZSBwbGF5ZXIuXHJcbiAgICAgKi9cclxuICAgIGlzQWxsb3dlZChwbGF5ZXIpIHtcclxuICAgICAgICBpZiAodGhpcy5yb2xlcy5pbmNsdWRlcyhSb2xlXzEuQWRtaW5Sb2xlKSAmJiBwbGF5ZXIuYWRtaW4pXHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIGlmIChwbGF5ZXIucm9sZXMuZmluZChyID0+IHIub3ZlcnJpZGUpKVxyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICByZXR1cm4gdGhpcy5yb2xlcy5sZW5ndGggPiAwID8gdGhpcy5yb2xlcy5zb21lKHJvbGUgPT4gcGxheWVyLmhhc1JvbGUocm9sZSkpIDogdHJ1ZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUnVucyB0aGUgY29tbWFuZC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gaW5mbyBUaGUgY29tbWFuZCdzIGV4ZWN1dGlvbiBpbmZvcm1hdGlvbi5cclxuICAgICAqL1xyXG4gICAgcnVuKGluZm8pIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICB0aGlzLmZ1bmMoaW5mbyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuQ29tbWFuZCA9IENvbW1hbmQ7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbW1hbmQuanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuZXhwb3J0cy5Db21tYW5kQXJndW1lbnQgPSBleHBvcnRzLnBhcmFtZXRlclR5cGVzID0gdm9pZCAwO1xyXG4vKipcclxuICogVXNlZnVsIHJlZ3VsYXIgZXhwcmVzc2lvbnMuXHJcbiAqL1xyXG5leHBvcnRzLnBhcmFtZXRlclR5cGVzID0ge1xyXG4gICAgbnVtYmVyOiAvXlxcZCskLyxcclxuICAgIHllc25vOiAvXih5KGVzKT98bihvKT8pL2ksXHJcbiAgICBuaWNrbmFtZTogL14oPz0uezEsMjV9JCkuKi9pLFxyXG4gICAgcGFzc3dvcmQ6IC9eW2EtekEtWjAtOV9ALiEqJD8mJS1dezEsMTZ9JC9pLFxyXG4gICAgZXh0ZW5kZWQ6IC9eW2EtekEtWjAtOVxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDI0Rl0qJC9pLFxyXG4gICAgc3BlY2lhbEV4dGVuZGVkOiAvXlthLXpBLVowLTlcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyNEZfQC4hKiQ/JiUtXSokL2lcclxufTtcclxuY2xhc3MgQ29tbWFuZEFyZ3VtZW50IHtcclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhIGNvbW1hbmQgYXJndW1lbnQgb2JqZWN0LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBhcmd1bWVudCBUaGUgY29tbWFuZCBhcmd1bWVudC5cclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IoYXJndW1lbnQpIHtcclxuICAgICAgICB0aGlzLl92YWx1ZSA9IGFyZ3VtZW50O1xyXG4gICAgICAgIHRoaXMubnVtYmVyID0gdGVzdE51bWJlcihhcmd1bWVudCk7XHJcbiAgICAgICAgdGhpcy55ZXNubyA9IHRlc3RZZXNObyhhcmd1bWVudCk7XHJcbiAgICAgICAgdGhpcy5wYXNzd29yZCA9IHRlc3RQYXNzd29yZChhcmd1bWVudCk7XHJcbiAgICAgICAgdGhpcy5leHRlbmRlZCA9IHRlc3RFeHRlbmRlZChhcmd1bWVudCk7XHJcbiAgICAgICAgdGhpcy5zcGVjaWFsRXh0ZW5kZWQgPSB0ZXN0U3BlY2lhbEV4dGVuZGVkKGFyZ3VtZW50KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUGFyc2VzIHRoZSBhcmd1bWVudCB0byBhIG51bWJlci5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gYXJndW1lbnQgQSBjb21tYW5kIGFyZ3VtZW50LlxyXG4gICAgICovXHJcbiAgICB0b051bWJlcigpIHtcclxuICAgICAgICByZXR1cm4gcGFyc2VJbnQodGhpcy5fdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgdG9TdHJpbmcoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuQ29tbWFuZEFyZ3VtZW50ID0gQ29tbWFuZEFyZ3VtZW50O1xyXG4vKipcclxuICogVGVzdHMgd2hldGhlciBpdCBpcyBhIHZhbGlkIG51bWJlci5cclxuICpcclxuICogQHBhcmFtIGFyZ3VtZW50IEEgY29tbWFuZCBhcmd1bWVudC5cclxuICovXHJcbmZ1bmN0aW9uIHRlc3ROdW1iZXIoYXJndW1lbnQpIHtcclxuICAgIHJldHVybiBleHBvcnRzLnBhcmFtZXRlclR5cGVzLm51bWJlci50ZXN0KGFyZ3VtZW50KTtcclxufVxyXG4vKipcclxuICogVGVzdHMgd2hldGhlciBpdCBpcyBhIHllcyBvciBhIG5vLlxyXG4gKlxyXG4gKiBAcGFyYW0gYXJndW1lbnQgQSBjb21tYW5kIGFyZ3VtZW50LlxyXG4gKi9cclxuZnVuY3Rpb24gdGVzdFllc05vKGFyZ3VtZW50KSB7XHJcbiAgICByZXR1cm4gZXhwb3J0cy5wYXJhbWV0ZXJUeXBlcy55ZXNuby50ZXN0KGFyZ3VtZW50KTtcclxufVxyXG4vKipcclxuICogVGVzdCB3aGV0aGVyIGl0IGlzIGEgdmFsaWQgcGFzc3dvcmQgYWNjb3JkaW5nIHRvIG91ciBzdGFuZGFyZHMuLlxyXG4gKlxyXG4gKiBAcGFyYW0gYXJndW1lbnQgQSBjb21tYW5kIGFyZ3VtZW50LlxyXG4gKi9cclxuZnVuY3Rpb24gdGVzdFBhc3N3b3JkKGFyZ3VtZW50KSB7XHJcbiAgICByZXR1cm4gZXhwb3J0cy5wYXJhbWV0ZXJUeXBlcy5wYXNzd29yZC50ZXN0KGFyZ3VtZW50KTtcclxufVxyXG4vKipcclxuICogVGVzdHMgd2hldGhlciBpdCBpcyBhbHBoYW51bWVyaWMgKHdpdGggKiBhbmQgJCBhcyBleGNlcHRpb25zKS5cclxuICpcclxuICogQHBhcmFtIGFyZ3VtZW50IEEgY29tbWFuZCBhcmd1bWVudC5cclxuICovXHJcbmZ1bmN0aW9uIHRlc3RFeHRlbmRlZChhcmd1bWVudCkge1xyXG4gICAgcmV0dXJuIGV4cG9ydHMucGFyYW1ldGVyVHlwZXMuZXh0ZW5kZWQudGVzdChhcmd1bWVudCk7XHJcbn1cclxuLyoqXHJcbiAqIEluY2x1ZGVzIEAuIT8mJS0gdG8gdGhlIGV4dGVuZGVkIHRlc3QuXHJcbiAqXHJcbiAqIEBwYXJhbSBhcmd1bWVudCBBIGNvbW1hbmQgYXJndW1lbnQuXHJcbiAqL1xyXG5mdW5jdGlvbiB0ZXN0U3BlY2lhbEV4dGVuZGVkKGFyZ3VtZW50KSB7XHJcbiAgICByZXR1cm4gZXhwb3J0cy5wYXJhbWV0ZXJUeXBlcy5zcGVjaWFsRXh0ZW5kZWQudGVzdChhcmd1bWVudCk7XHJcbn1cclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29tbWFuZEFyZ3VtZW50LmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuQ29tbWFuZExpc3QgPSB2b2lkIDA7XHJcbi8qKiBBIGNsYXNzIHJlcHJlc2VudGluZyBhIGxpc3Qgb2YgY29tbWFuZHMuICovXHJcbmNsYXNzIENvbW1hbmRMaXN0IHtcclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhIGxpc3Qgb2YgY29tbWFuZHMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHByZWZpeCBUaGUgY29tbWFuZHMnIHByZWZpeC5cclxuICAgICAqIEBwYXJhbSBpdGVtcyBBIGxpc3Qgb2YgY29tbWFuZHMgdG8gc3RhcnQgd2l0aC5cclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IocHJlZml4LCAuLi5pdGVtcykge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIENvbW1hbmQgbGlzdCBhcnJheS5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLl9saXN0ID0gW107XHJcbiAgICAgICAgdGhpcy5fcHJlZml4ID0gcHJlZml4O1xyXG4gICAgICAgIGl0ZW1zLmZvckVhY2goYyA9PiB0aGlzLl9saXN0LnB1c2goYykpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBBbiBhcnJheSB3aXRoIHRoZSBjb21tYW5kcy5cclxuICAgICAqL1xyXG4gICAgZ2V0IGxpc3QoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xpc3Q7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBwcmVmaXggdG8gd2hpY2ggdGhlIGNvbW1hbmQgd2lsbCBsaXN0ZW4uXHJcbiAgICAgKi9cclxuICAgIGdldCBwcmVmaXgoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ByZWZpeDtcclxuICAgIH1cclxuICAgIHNldCBwcmVmaXgodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9wcmVmaXggPSB2YWx1ZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQWRkcyBhIGNvbW1hbmQgdG8gdGhlIGxpc3QuXHJcbiAgICAgKlxyXG4gICAgICogSWYgdGhlIGNvbW1hbmQgbmFtZSBvciBhbGlhc2VzIGlzIGFscmVhZHkgYmVpbmcgdXNlZCBieSBhbm90aGVyIGNvbW1hbmQsIGl0IHdpbGwgcmVwbGFjZSB0aGVtLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBjb21tYW5kXHJcbiAgICAgKi9cclxuICAgIGFkZChjb21tYW5kKSB7XHJcbiAgICAgICAgY29tbWFuZC5hbGlhc2VzLmZvckVhY2goYSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlKGEpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMucmVtb3ZlKGNvbW1hbmQubmFtZSk7XHJcbiAgICAgICAgdGhpcy5fbGlzdC5wdXNoKGNvbW1hbmQpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIGEgY29tbWFuZC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gc2VhcmNoIENvbW1hbmQgbmFtZSBvciBhbGlhcy5cclxuICAgICAqL1xyXG4gICAgZ2V0KHNlYXJjaCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9saXN0LmZpbmQoY21kID0+IGNtZC5uYW1lID09PSBzZWFyY2gpIHx8IHRoaXMuX2xpc3QuZmluZChjbWQgPT4geyB2YXIgX2E7IHJldHVybiAoKF9hID0gY21kLmFsaWFzZXMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5pbmRleE9mKHNlYXJjaCkpICE9PSAtMTsgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZXMgYSBjb21tYW5kLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBjb21tYW5kIENvbW1hbmQgbmFtZSBvciBhbGlhcy5cclxuICAgICAqL1xyXG4gICAgcmVtb3ZlKGNvbW1hbmQpIHtcclxuICAgICAgICB0aGlzLl9saXN0ID0gdGhpcy5fbGlzdC5maWx0ZXIoY21kID0+IHsgdmFyIF9hOyByZXR1cm4gY21kLm5hbWUgIT09IGNvbW1hbmQgJiYgY21kLm5hbWUgIT09ICgoX2EgPSBjb21tYW5kKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubmFtZSk7IH0pO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuQ29tbWFuZExpc3QgPSBDb21tYW5kTGlzdDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29tbWFuZExpc3QuanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xyXG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XHJcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcclxuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cclxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XHJcbiAgICB9KTtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLmtleXMgPSBleHBvcnRzLmNsZWFyID0gZXhwb3J0cy5yZW1vdmUgPSBleHBvcnRzLnNldCA9IGV4cG9ydHMuZ2V0ID0gdm9pZCAwO1xyXG5jb25zdCBpZGJfMSA9IHJlcXVpcmUoXCJpZGJcIik7XHJcbi8qKlxyXG4gKiBUaGUgSVAncyBoaXN0b3JpZXMgb2JqZWN0IHN0b3JhZ2UuXHJcbiAqL1xyXG5jb25zdCBjb25uU3RvcmFnZSA9IFwiY29ubmVjdGlvbnNcIjtcclxuLyoqXHJcbiAqIFRoZSBkYXRhYmFzZSdzIG5hbWUuXHJcbiAqL1xyXG5jb25zdCBkYXRhYmFzZU5hbWUgPSBcImhheGJhbGwtZXh0ZW5kZWQtcm9vbVwiO1xyXG4vKipcclxuICogVGhlIGRhdGFiYXNlLlxyXG4gKi9cclxuY29uc3QgZGIgPSBpZGJfMS5vcGVuREIoZGF0YWJhc2VOYW1lLCAxLCB7XHJcbiAgICB1cGdyYWRlKGRiKSB7XHJcbiAgICAgICAgZGIuY3JlYXRlT2JqZWN0U3RvcmUoY29ublN0b3JhZ2UsIHtcclxuICAgICAgICAgICAga2V5UGF0aDogXCJpcFwiXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pO1xyXG4vKipcclxuICogR2V0cyBhbiBJUCdzIGhpc3Rvcnkgb24gdGhlIHJvb20uXHJcbiAqXHJcbiAqIEBwYXJhbSBrZXkgVGhlIElQLlxyXG4gKi9cclxuZnVuY3Rpb24gZ2V0KGtleSkge1xyXG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICByZXR1cm4gKHlpZWxkIGRiKS5nZXQoY29ublN0b3JhZ2UsIGtleSk7XHJcbiAgICB9KTtcclxufVxyXG5leHBvcnRzLmdldCA9IGdldDtcclxuLyoqXHJcbiAqIEluc2VydHMgYSBoaXN0b3J5IGluIHRoZSBkYXRhYmFzZS5cclxuICpcclxuICogQHBhcmFtIHZhbCBUaGUgaGlzdG9yeSBvYmplY3QuXHJcbiAqL1xyXG5mdW5jdGlvbiBzZXQodmFsKSB7XHJcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgIHJldHVybiAoeWllbGQgZGIpLnB1dChjb25uU3RvcmFnZSwgdmFsKTtcclxuICAgIH0pO1xyXG59XHJcbmV4cG9ydHMuc2V0ID0gc2V0O1xyXG4vKipcclxuICogUmVtb3ZlcyBhIGhpc3RvcnkgZnJvbSB0aGUgZGF0YWJhc2UuXHJcbiAqXHJcbiAqIEBwYXJhbSBrZXkgVGhlIGhpc3RvcnkncyBJUC5cclxuICovXHJcbmZ1bmN0aW9uIHJlbW92ZShrZXkpIHtcclxuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgcmV0dXJuICh5aWVsZCBkYikuZGVsZXRlKGNvbm5TdG9yYWdlLCBrZXkpO1xyXG4gICAgfSk7XHJcbn1cclxuZXhwb3J0cy5yZW1vdmUgPSByZW1vdmU7XHJcbi8qKlxyXG4gKiBDbGVhcnMgdGhlIElQIGRhdGFiYXNlLlxyXG4gKi9cclxuZnVuY3Rpb24gY2xlYXIoKSB7XHJcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgIHJldHVybiAoeWllbGQgZGIpLmNsZWFyKGNvbm5TdG9yYWdlKTtcclxuICAgIH0pO1xyXG59XHJcbmV4cG9ydHMuY2xlYXIgPSBjbGVhcjtcclxuLyoqXHJcbiAqIEdldCBhbGwga2V5cyBvbiB0aGUgZGF0YWJhc2UuXHJcbiAqL1xyXG5mdW5jdGlvbiBrZXlzKCkge1xyXG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcclxuICAgICAgICByZXR1cm4gKHlpZWxkIGRiKS5nZXRBbGxLZXlzKGNvbm5TdG9yYWdlKTtcclxuICAgIH0pO1xyXG59XHJcbmV4cG9ydHMua2V5cyA9IGtleXM7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbm5lY3Rpb25IaXN0b3J5LmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuRGlzYyA9IHZvaWQgMDtcclxuY29uc3QgQWJzdHJhY3REaXNjXzEgPSByZXF1aXJlKFwiLi9BYnN0cmFjdERpc2NcIik7XHJcbmNvbnN0IFNldHRpbmdzXzEgPSByZXF1aXJlKFwiLi9TZXR0aW5nc1wiKTtcclxuLyoqIEEgY2xhc3MgcmVwcmVzZW50aW5nIGEgZGlzYy4gKi9cclxuY2xhc3MgRGlzYyBleHRlbmRzIEFic3RyYWN0RGlzY18xLkFic3RyYWN0RGlzYyB7XHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYSBkaXNjIG9iamVjdC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcm9vbSBUaGUgcm9vbSBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0gZGlzY0luZGV4IFRoZSBkaXNjJ3MgaW5kZXguXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKHJvb20sIGRpc2NJbmRleCkge1xyXG4gICAgICAgIHN1cGVyKHJvb20pO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIERpc2MgY3VzdG9tIHNldHRpbmdzLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuc2V0dGluZ3MgPSBuZXcgU2V0dGluZ3NfMS5TZXR0aW5ncygpO1xyXG4gICAgICAgIHRoaXMuaW5kZXggPSBkaXNjSW5kZXg7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBEaXNjT2JqZWN0IG9mIHRoZSBkaXNjLlxyXG4gICAgICovXHJcbiAgICBnZXQgX2Rpc2NPYmplY3QoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Jvb20ubmF0aXZlLmdldERpc2NQcm9wZXJ0aWVzKHRoaXMuaW5kZXgpO1xyXG4gICAgfVxyXG4gICAgc2V0IF9kaXNjT2JqZWN0KHByb3BlcnRpZXMpIHtcclxuICAgICAgICB0aGlzLl9yb29tLm5hdGl2ZS5zZXREaXNjUHJvcGVydGllcyh0aGlzLmluZGV4LCBwcm9wZXJ0aWVzKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVGhlIGRpc2MncyBjb2xvci5cclxuICAgICAqXHJcbiAgICAgKiBTZXQgdGhlIHZhbHVlIHRvIC0xIHRvIG1ha2UgdGhlIGRpc2MgdHJhbnNwYXJlbnQuXHJcbiAgICAgKi9cclxuICAgIGdldCBjb2xvcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGlzY09iamVjdC5jb2xvcjtcclxuICAgIH1cclxuICAgIHNldCBjb2xvcih2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX2Rpc2NPYmplY3QgPSB7IGNvbG9yOiB2YWx1ZSB9O1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuRGlzYyA9IERpc2M7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURpc2MuanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuZXhwb3J0cy5Sb29tR2VvTGlzdCA9IGV4cG9ydHMuQ29sb3JzID0gZXhwb3J0cy5DaGF0U3R5bGUgPSBleHBvcnRzLkNoYXRTb3VuZHMgPSBleHBvcnRzLlN0YWRpdW1zID0gZXhwb3J0cy5UZWFtcyA9IHZvaWQgMDtcclxudmFyIFRlYW1zO1xyXG4oZnVuY3Rpb24gKFRlYW1zKSB7XHJcbiAgICBUZWFtc1tUZWFtc1tcIlNwZWN0YXRvcnNcIl0gPSAwXSA9IFwiU3BlY3RhdG9yc1wiO1xyXG4gICAgVGVhbXNbVGVhbXNbXCJSZWRcIl0gPSAxXSA9IFwiUmVkXCI7XHJcbiAgICBUZWFtc1tUZWFtc1tcIkJsdWVcIl0gPSAyXSA9IFwiQmx1ZVwiO1xyXG59KShUZWFtcyA9IGV4cG9ydHMuVGVhbXMgfHwgKGV4cG9ydHMuVGVhbXMgPSB7fSkpO1xyXG52YXIgU3RhZGl1bXM7XHJcbihmdW5jdGlvbiAoU3RhZGl1bXMpIHtcclxuICAgIFN0YWRpdW1zW1wiQ2xhc3NpY1wiXSA9IFwiQ2xhc3NpY1wiO1xyXG4gICAgU3RhZGl1bXNbXCJFYXN5XCJdID0gXCJFYXN5XCI7XHJcbiAgICBTdGFkaXVtc1tcIlNtYWxsXCJdID0gXCJTbWFsbFwiO1xyXG4gICAgU3RhZGl1bXNbXCJCaWdcIl0gPSBcIkJpZ1wiO1xyXG4gICAgU3RhZGl1bXNbXCJSb3VuZGVkXCJdID0gXCJSb3VuZGVkXCI7XHJcbiAgICBTdGFkaXVtc1tcIkhvY2tleVwiXSA9IFwiSG9ja2V5XCI7XHJcbiAgICBTdGFkaXVtc1tcIkJpZ0hvY2tleVwiXSA9IFwiQmlnSG9ja2V5XCI7XHJcbiAgICBTdGFkaXVtc1tcIkJpZ0Vhc3lcIl0gPSBcIkJpZ0Vhc3lcIjtcclxuICAgIFN0YWRpdW1zW1wiQmlnUm91bmRlZFwiXSA9IFwiQmlnUm91bmRlZFwiO1xyXG4gICAgU3RhZGl1bXNbXCJIdWdlXCJdID0gXCJIdWdlXCI7XHJcbn0pKFN0YWRpdW1zID0gZXhwb3J0cy5TdGFkaXVtcyB8fCAoZXhwb3J0cy5TdGFkaXVtcyA9IHt9KSk7XHJcbnZhciBDaGF0U291bmRzO1xyXG4oZnVuY3Rpb24gKENoYXRTb3VuZHMpIHtcclxuICAgIENoYXRTb3VuZHNbQ2hhdFNvdW5kc1tcIk5vbmVcIl0gPSAwXSA9IFwiTm9uZVwiO1xyXG4gICAgQ2hhdFNvdW5kc1tDaGF0U291bmRzW1wiTm9ybWFsXCJdID0gMV0gPSBcIk5vcm1hbFwiO1xyXG4gICAgQ2hhdFNvdW5kc1tDaGF0U291bmRzW1wiTm90aWZpY2F0aW9uXCJdID0gMl0gPSBcIk5vdGlmaWNhdGlvblwiO1xyXG59KShDaGF0U291bmRzID0gZXhwb3J0cy5DaGF0U291bmRzIHx8IChleHBvcnRzLkNoYXRTb3VuZHMgPSB7fSkpO1xyXG52YXIgQ2hhdFN0eWxlO1xyXG4oZnVuY3Rpb24gKENoYXRTdHlsZSkge1xyXG4gICAgQ2hhdFN0eWxlW1wiTm9ybWFsXCJdID0gXCJub3JtYWxcIjtcclxuICAgIENoYXRTdHlsZVtcIkJvbGRcIl0gPSBcImJvbGRcIjtcclxuICAgIENoYXRTdHlsZVtcIkl0YWxpY1wiXSA9IFwiaXRhbGljXCI7XHJcbiAgICBDaGF0U3R5bGVbXCJTbWFsbFwiXSA9IFwic21hbGxcIjtcclxuICAgIENoYXRTdHlsZVtcIlNtYWxsQm9sZFwiXSA9IFwic21hbGwtYm9sZFwiO1xyXG4gICAgQ2hhdFN0eWxlW1wiU21hbGxJdGFsaWNcIl0gPSBcInNtYWxsLWl0YWxpY1wiO1xyXG59KShDaGF0U3R5bGUgPSBleHBvcnRzLkNoYXRTdHlsZSB8fCAoZXhwb3J0cy5DaGF0U3R5bGUgPSB7fSkpO1xyXG52YXIgQ29sb3JzO1xyXG4oZnVuY3Rpb24gKENvbG9ycykge1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkFsaWNlQmx1ZVwiXSA9IDE1NzkyMzgzXSA9IFwiQWxpY2VCbHVlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiQW50aXF1ZVdoaXRlXCJdID0gMTY0NDQzNzVdID0gXCJBbnRpcXVlV2hpdGVcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJBcXVhXCJdID0gNjU1MzVdID0gXCJBcXVhXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiQXF1YU1hcmluZVwiXSA9IDgzODg1NjRdID0gXCJBcXVhTWFyaW5lXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiQXp1cmVcIl0gPSAxNTc5NDE3NV0gPSBcIkF6dXJlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiQmVpZ2VcIl0gPSAxNjExOTI2MF0gPSBcIkJlaWdlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiQmlzcXVlXCJdID0gMTY3NzAyNDRdID0gXCJCaXNxdWVcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJCbGFja1wiXSA9IDBdID0gXCJCbGFja1wiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkJsYW5jaGVEYWxtb25kXCJdID0gMTY3NzIwNDVdID0gXCJCbGFuY2hlRGFsbW9uZFwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkJsdWVcIl0gPSAyNTVdID0gXCJCbHVlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiQmx1ZVZpb2xldFwiXSA9IDkwNTUyMDJdID0gXCJCbHVlVmlvbGV0XCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiQnJvd25cIl0gPSAxMDgyNDIzNF0gPSBcIkJyb3duXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiQnVybHl3b29kXCJdID0gMTQ1OTYyMzFdID0gXCJCdXJseXdvb2RcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJDYWRldEJsdWVcIl0gPSA2MjY2NTI4XSA9IFwiQ2FkZXRCbHVlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiQ2hhcnRyZXVzZVwiXSA9IDgzODgzNTJdID0gXCJDaGFydHJldXNlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiQ2hvY29sYXRlXCJdID0gMTM3ODk0NzBdID0gXCJDaG9jb2xhdGVcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJDb3JhbFwiXSA9IDE2NzQ0MjcyXSA9IFwiQ29yYWxcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJDb3JuZmxvd2VyQmx1ZVwiXSA9IDY1OTE5ODFdID0gXCJDb3JuZmxvd2VyQmx1ZVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkNvcm5zaWxrXCJdID0gMTY3NzUzODhdID0gXCJDb3Juc2lsa1wiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkNyaW1zb25cIl0gPSAxNDQyMzEwMF0gPSBcIkNyaW1zb25cIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJDeWFuXCJdID0gNjU1MzVdID0gXCJDeWFuXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiRGFya0JsdWVcIl0gPSAxMzldID0gXCJEYXJrQmx1ZVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkRhcmtDeWFuXCJdID0gMzU3MjNdID0gXCJEYXJrQ3lhblwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkRhcmtHb2xkZW5Sb2RcIl0gPSAxMjA5MjkzOV0gPSBcIkRhcmtHb2xkZW5Sb2RcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJEYXJrR3JheVwiXSA9IDExMTE5MDE3XSA9IFwiRGFya0dyYXlcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJEYXJrR3JlZW5cIl0gPSAyNTYwMF0gPSBcIkRhcmtHcmVlblwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkRhcmtLaGFraVwiXSA9IDEyNDMzMjU5XSA9IFwiRGFya0toYWtpXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiRGFya01hZ2VudGFcIl0gPSA5MTA5NjQzXSA9IFwiRGFya01hZ2VudGFcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJEYXJrT2xpdmVHcmVlblwiXSA9IDU1OTc5OTldID0gXCJEYXJrT2xpdmVHcmVlblwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkRhcmtPcmFuZ2VcIl0gPSAxNjc0NzUyMF0gPSBcIkRhcmtPcmFuZ2VcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJEYXJrT3JjaGlkXCJdID0gMTAwNDAwMTJdID0gXCJEYXJrT3JjaGlkXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiRGFya1JlZFwiXSA9IDkxMDk1MDRdID0gXCJEYXJrUmVkXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiRGFya1NhbG1vblwiXSA9IDE1MzA4NDEwXSA9IFwiRGFya1NhbG1vblwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkRhcmtzZWFHcmVlblwiXSA9IDk0MTk5MTldID0gXCJEYXJrc2VhR3JlZW5cIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJEYXJrU2xhdGVCbHVlXCJdID0gNDczNDM0N10gPSBcIkRhcmtTbGF0ZUJsdWVcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJEYXJrU2xhdGVHcmF5XCJdID0gMzEwMDQ5NV0gPSBcIkRhcmtTbGF0ZUdyYXlcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJEYXJrVHVycXVvaXNlXCJdID0gNTI5NDVdID0gXCJEYXJrVHVycXVvaXNlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiRGFya1Zpb2xldFwiXSA9IDk2OTk1MzldID0gXCJEYXJrVmlvbGV0XCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiRGVlcFBpbmtcIl0gPSAxNjcxNjk0N10gPSBcIkRlZXBQaW5rXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiRGVlcFNreUJsdWVcIl0gPSA0OTE1MV0gPSBcIkRlZXBTa3lCbHVlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiRGltR3JheVwiXSA9IDY5MDgyNjVdID0gXCJEaW1HcmF5XCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiRG9kZ2VyQmx1ZVwiXSA9IDIwMDMxOTldID0gXCJEb2RnZXJCbHVlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiRmlyZWJyaWNrXCJdID0gMTE2NzQxNDZdID0gXCJGaXJlYnJpY2tcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJGbG9yYWxXaGl0ZVwiXSA9IDE2Nzc1OTIwXSA9IFwiRmxvcmFsV2hpdGVcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJGb3Jlc3RHcmVlblwiXSA9IDIyNjM4NDJdID0gXCJGb3Jlc3RHcmVlblwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkZ1Y2hzaWFcIl0gPSAxNjcxMTkzNV0gPSBcIkZ1Y2hzaWFcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJHYWluc2Jvcm9cIl0gPSAxNDQ3NDQ2MF0gPSBcIkdhaW5zYm9yb1wiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkdob3N0V2hpdGVcIl0gPSAxNjMxNjY3MV0gPSBcIkdob3N0V2hpdGVcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJHb2xkXCJdID0gMTY3NjY3MjBdID0gXCJHb2xkXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiR29sZGVuUm9kXCJdID0gMTQzMjkxMjBdID0gXCJHb2xkZW5Sb2RcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJHcmF5XCJdID0gODQyMTUwNF0gPSBcIkdyYXlcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJHcmVlblwiXSA9IDMyNzY4XSA9IFwiR3JlZW5cIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJHcmVlblllbGxvd1wiXSA9IDExNDAzMDU1XSA9IFwiR3JlZW5ZZWxsb3dcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJIb25leWRld1wiXSA9IDE1Nzk0MTYwXSA9IFwiSG9uZXlkZXdcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJIb3RQaW5rXCJdID0gMTY3Mzg3NDBdID0gXCJIb3RQaW5rXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiSW5kaWFuUmVkXCJdID0gMTM0NTg1MjRdID0gXCJJbmRpYW5SZWRcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJJbmRpZ29cIl0gPSA0OTE1MzMwXSA9IFwiSW5kaWdvXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiSXZvcnlcIl0gPSAxNjc3NzIwMF0gPSBcIkl2b3J5XCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiS2hha2lcIl0gPSAxNTc4NzY2MF0gPSBcIktoYWtpXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiTGF2ZW5kZXJcIl0gPSAxNTEzMjQxMF0gPSBcIkxhdmVuZGVyXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiTGF2ZW5kZXJibHVzaFwiXSA9IDE2NzczMzY1XSA9IFwiTGF2ZW5kZXJibHVzaFwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkxhd25HcmVlblwiXSA9IDgxOTA5NzZdID0gXCJMYXduR3JlZW5cIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJMZW1vbkNoaWZmb25cIl0gPSAxNjc3NTg4NV0gPSBcIkxlbW9uQ2hpZmZvblwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkxpZ2h0Qmx1ZVwiXSA9IDExMzkzMjU0XSA9IFwiTGlnaHRCbHVlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiTGlnaHRjb3JhbFwiXSA9IDE1NzYxNTM2XSA9IFwiTGlnaHRjb3JhbFwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkxpZ2h0Q3lhblwiXSA9IDE0NzQ1NTk5XSA9IFwiTGlnaHRDeWFuXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiTGlnaHRHb2xkZW5Sb2RZZWxsb3dcIl0gPSAxNjQ0ODIxMF0gPSBcIkxpZ2h0R29sZGVuUm9kWWVsbG93XCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiTGlnaHRHcmV5XCJdID0gMTM4ODIzMjNdID0gXCJMaWdodEdyZXlcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJMaWdodEdyZWVuXCJdID0gOTQ5ODI1Nl0gPSBcIkxpZ2h0R3JlZW5cIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJMaWdodFBpbmtcIl0gPSAxNjc1ODQ2NV0gPSBcIkxpZ2h0UGlua1wiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkxpZ2h0U2FsbW9uXCJdID0gMTY3NTI3NjJdID0gXCJMaWdodFNhbG1vblwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkxpZ2h0U2VhR3JlZW5cIl0gPSAyMTQyODkwXSA9IFwiTGlnaHRTZWFHcmVlblwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkxpZ2h0U2t5Qmx1ZVwiXSA9IDg5MDAzNDZdID0gXCJMaWdodFNreUJsdWVcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJMaWdodFNsYXRlR3JheVwiXSA9IDc4MzM3NTNdID0gXCJMaWdodFNsYXRlR3JheVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkxpZ2h0U3RlZWxCbHVlXCJdID0gMTE1ODQ3MzRdID0gXCJMaWdodFN0ZWVsQmx1ZVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkxpZ2h0WWVsbG93XCJdID0gMTY3NzcxODRdID0gXCJMaWdodFllbGxvd1wiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIkxpbWVcIl0gPSA2NTI4MF0gPSBcIkxpbWVcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJMaW1lR3JlZW5cIl0gPSAzMzI5MzMwXSA9IFwiTGltZUdyZWVuXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiTGluZW5cIl0gPSAxNjQ0NTY3MF0gPSBcIkxpbmVuXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiTWFnZW50YVwiXSA9IDE2NzExOTM1XSA9IFwiTWFnZW50YVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIk1hcm9vblwiXSA9IDgzODg2MDhdID0gXCJNYXJvb25cIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJNZWRpdW1BcXVhbWFyaW5lXCJdID0gNjczNzMyMl0gPSBcIk1lZGl1bUFxdWFtYXJpbmVcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJNZWRpdW1CbHVlXCJdID0gMjA1XSA9IFwiTWVkaXVtQmx1ZVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIk1lZGl1bW9yY2hpZFwiXSA9IDEyMjExNjY3XSA9IFwiTWVkaXVtb3JjaGlkXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiTWVkaXVtUHVycGxlXCJdID0gOTY2MjY4MF0gPSBcIk1lZGl1bVB1cnBsZVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIk1lZGl1bVNlYUdyZWVuXCJdID0gMzk3ODA5N10gPSBcIk1lZGl1bVNlYUdyZWVuXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiTWVkaXVtU2xhdGVCbHVlXCJdID0gODA4Nzc5MF0gPSBcIk1lZGl1bVNsYXRlQmx1ZVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIk1lZGl1bXNwcmluZ0dyZWVuXCJdID0gNjQxNTRdID0gXCJNZWRpdW1zcHJpbmdHcmVlblwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIk1lZGl1bVR1cnF1b2lzZVwiXSA9IDQ3NzIzMDBdID0gXCJNZWRpdW1UdXJxdW9pc2VcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJNZWRpdW1WaW9sZXRSZWRcIl0gPSAxMzA0NzE3M10gPSBcIk1lZGl1bVZpb2xldFJlZFwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIk1pZG5pZ2h0Qmx1ZVwiXSA9IDE2NDQ5MTJdID0gXCJNaWRuaWdodEJsdWVcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJNaW50Q3JlYW1cIl0gPSAxNjEyMTg1MF0gPSBcIk1pbnRDcmVhbVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIk1pc3R5Um9zZVwiXSA9IDE2NzcwMjczXSA9IFwiTWlzdHlSb3NlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiTW9jY2FzaW5cIl0gPSAxNjc3MDIyOV0gPSBcIk1vY2Nhc2luXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiTmF2YWpvV2hpdGVcIl0gPSAxNjc2ODY4NV0gPSBcIk5hdmFqb1doaXRlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiTmF2eVwiXSA9IDEyOF0gPSBcIk5hdnlcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJPbGRMYWNlXCJdID0gMTY2NDM1NThdID0gXCJPbGRMYWNlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiT2xpdmVcIl0gPSA4NDIxMzc2XSA9IFwiT2xpdmVcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJPbGl2ZURyYWJcIl0gPSA3MDQ4NzM5XSA9IFwiT2xpdmVEcmFiXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiT3JhbmdlXCJdID0gMTY3NTM5MjBdID0gXCJPcmFuZ2VcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJPcmFuZ2VSZWRcIl0gPSAxNjcyOTM0NF0gPSBcIk9yYW5nZVJlZFwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIk9yY2hpZFwiXSA9IDE0MzE1NzM0XSA9IFwiT3JjaGlkXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiUGFsZUdvbGRlblJvZFwiXSA9IDE1NjU3MTMwXSA9IFwiUGFsZUdvbGRlblJvZFwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIlBhbGVHcmVlblwiXSA9IDEwMDI1ODgwXSA9IFwiUGFsZUdyZWVuXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiUGFsZVR1cnF1b2lzZVwiXSA9IDExNTI5OTY2XSA9IFwiUGFsZVR1cnF1b2lzZVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIlBhbGVWaW9sZXRSZWRcIl0gPSAxNDE4NDU5NV0gPSBcIlBhbGVWaW9sZXRSZWRcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJQYXBheWFXaGlwXCJdID0gMTY3NzMwNzddID0gXCJQYXBheWFXaGlwXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiUGVhY2hwdWZmXCJdID0gMTY3Njc2NzNdID0gXCJQZWFjaHB1ZmZcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJQZXJ1XCJdID0gMTM0Njg5OTFdID0gXCJQZXJ1XCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiUGlua1wiXSA9IDE2NzYxMDM1XSA9IFwiUGlua1wiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIlBsdW1cIl0gPSAxNDUyNDYzN10gPSBcIlBsdW1cIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJQb3dkZXJCbHVlXCJdID0gMTE1OTE5MTBdID0gXCJQb3dkZXJCbHVlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiUHVycGxlXCJdID0gODM4ODczNl0gPSBcIlB1cnBsZVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIlJlYmVjY2FQdXJwbGVcIl0gPSA2Njk3ODgxXSA9IFwiUmViZWNjYVB1cnBsZVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIlJlZFwiXSA9IDE2NzExNjgwXSA9IFwiUmVkXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiUm9zeUJyb3duXCJdID0gMTIzNTc1MTldID0gXCJSb3N5QnJvd25cIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJSb3lhbEJsdWVcIl0gPSA0Mjg2OTQ1XSA9IFwiUm95YWxCbHVlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiU2FkZGxlQnJvd25cIl0gPSA5MTI3MTg3XSA9IFwiU2FkZGxlQnJvd25cIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJTYWxtb25cIl0gPSAxNjQxNjg4Ml0gPSBcIlNhbG1vblwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIlNhbmR5QnJvd25cIl0gPSAxNjAzMjg2NF0gPSBcIlNhbmR5QnJvd25cIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJTZWFHcmVlblwiXSA9IDMwNTAzMjddID0gXCJTZWFHcmVlblwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIlNlYXNoZWxsXCJdID0gMTY3NzQ2MzhdID0gXCJTZWFzaGVsbFwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIlNpZW5uYVwiXSA9IDEwNTA2Nzk3XSA9IFwiU2llbm5hXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiU2lsdmVyXCJdID0gMTI2MzIyNTZdID0gXCJTaWx2ZXJcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJTa3lCbHVlXCJdID0gODkwMDMzMV0gPSBcIlNreUJsdWVcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJTbGF0ZUJsdWVcIl0gPSA2OTcwMDYxXSA9IFwiU2xhdGVCbHVlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiU2xhdGVHcmF5XCJdID0gNzM3Mjk0NF0gPSBcIlNsYXRlR3JheVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIlNub3dcIl0gPSAxNjc3NTkzMF0gPSBcIlNub3dcIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJTcHJpbmdHcmVlblwiXSA9IDY1NDA3XSA9IFwiU3ByaW5nR3JlZW5cIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJTdGVlbEJsdWVcIl0gPSA0NjIwOTgwXSA9IFwiU3RlZWxCbHVlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiVGFuXCJdID0gMTM4MDg3ODBdID0gXCJUYW5cIjtcclxuICAgIENvbG9yc1tDb2xvcnNbXCJUZWFsXCJdID0gMzI4OTZdID0gXCJUZWFsXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiVGhpc3RsZVwiXSA9IDE0MjA0ODg4XSA9IFwiVGhpc3RsZVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIlRvbWF0b1wiXSA9IDE2NzM3MDk1XSA9IFwiVG9tYXRvXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiVHVycXVvaXNlXCJdID0gNDI1MTg1Nl0gPSBcIlR1cnF1b2lzZVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIlZpb2xldFwiXSA9IDE1NjMxMDg2XSA9IFwiVmlvbGV0XCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiV2hlYXRcIl0gPSAxNjExMzMzMV0gPSBcIldoZWF0XCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiV2hpdGVcIl0gPSAxNjc3NzIxNV0gPSBcIldoaXRlXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiV2hpdGVTbW9rZVwiXSA9IDE2MTE5Mjg1XSA9IFwiV2hpdGVTbW9rZVwiO1xyXG4gICAgQ29sb3JzW0NvbG9yc1tcIlllbGxvd1wiXSA9IDE2Nzc2OTYwXSA9IFwiWWVsbG93XCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiWWVsbG93R3JlZW5cIl0gPSAxMDE0NTA3NF0gPSBcIlllbGxvd0dyZWVuXCI7XHJcbiAgICBDb2xvcnNbQ29sb3JzW1wiSGF4YmFsbFwiXSA9IDkzNjAwNDNdID0gXCJIYXhiYWxsXCI7XHJcbn0pKENvbG9ycyA9IGV4cG9ydHMuQ29sb3JzIHx8IChleHBvcnRzLkNvbG9ycyA9IHt9KSk7XHJcbi8qKlxyXG4gKiBBIGxpc3Qgb2YgZ2VvbG9jYXRpb24gb3ZlcnJpZGVzIGZvciBjb3VudHJpZXMgd2l0aCBhIHByZXNlbmNlIGluIHRoZSBnYW1lJ3MgY29tbXVuaXR5LlxyXG4gKi9cclxuZXhwb3J0cy5Sb29tR2VvTGlzdCA9IHtcclxuICAgIC8vIEJyYXppbFxyXG4gICAgU2FvUGF1bG86IHsgY29kZTogXCJiclwiLCBsYXQ6IC0yMy41MzM3NzMsIGxvbjogLTQ2LjYyNTI5MCB9LFxyXG4gICAgUmlvZGVKYW5laXJvOiB7IGNvZGU6IFwiYnJcIiwgbGF0OiAtMjIuOTcwNzIyLCBsb246IC00My4xODIzNjUgfSxcclxuICAgIEN1cml0aWJhOiB7IGNvZGU6IFwiYnJcIiwgbGF0OiAtMjUuNDIzMTY0OTc0LCBsb246IC00OS4yNzA5OTg5MTYgfSxcclxuICAgIFBvcnRvQWxlZ3JlOiB7IGNvZGU6IFwiYnJcIiwgbGF0OiAtMzAuMDMzMDYsIGxvbjogLTUxLjIzIH0sXHJcbiAgICBTYWx2YWRvcjogeyBjb2RlOiBcImJyXCIsIGxhdDogLTEyLjk3MTExLCBsb246IC0zOC41MTA4MyB9LFxyXG4gICAgQnJhc2lsaWE6IHsgY29kZTogXCJiclwiLCBsYXQ6IC0xNS43Nzk3MiwgbG9uOiAtNDcuOTI5NzIgfSxcclxuICAgIEJlbG9Ib3Jpem9udGU6IHsgY29kZTogXCJiclwiLCBsYXQ6IC0xOS45MjA4MywgbG9uOiAtNDMuOTM3NzggfSxcclxuICAgIC8vIFVydWd1YXlcclxuICAgIE1vbnRldmlkZXU6IHsgY29kZTogXCJ1eVwiLCBsYXQ6IC0zNC45MDMyOCwgbG9uOiAtNTYuMTg4MTYgfSxcclxuICAgIC8vIEFyZ2VudGluYVxyXG4gICAgQnVlbm9zQWlyZXM6IHsgY29kZTogXCJhclwiLCBsYXQ6IC0zNC42MTMxNSwgbG9uOiAtNTguMzc3MjMgfSxcclxuICAgIENvcmRvYmE6IHsgY29kZTogXCJhclwiLCBsYXQ6IC0zMS40MTM1LCBsb246IC02NC4xODEwNSB9LFxyXG4gICAgUm9zYXJpbzogeyBjb2RlOiBcImFyXCIsIGxhdDogLTMyLjk0NjgyLCBsb246IC02MC42MzkzMiB9LFxyXG4gICAgLy8gQ2hpbGVcclxuICAgIFNhbnRpYWdvOiB7IGNvZGU6IFwiY2xcIiwgbGF0OiAtMzMuNDU2OTQsIGxvbjogLTcwLjY0ODI3IH0sXHJcbiAgICAvLyBDb2xvbWJpYVxyXG4gICAgQm9nb3RhOiB7IGNvZGU6IFwiY29cIiwgbGF0OiA0LjYwOTcxLCBsb246IC03NC4wODE3NSB9LFxyXG4gICAgLy8gUG9ydHVnYWxcclxuICAgIExpc2JvbjogeyBjb2RlOiBcInB0XCIsIGxhdDogMzguNzE2NjcsIGxvbjogLTkuMTMzMzMgfSxcclxuICAgIFBvcnRvOiB7IGNvZGU6IFwicHRcIiwgbGF0OiA0MS4xNDk2MSwgbG9uOiAtOC42MTA5OSB9LFxyXG4gICAgLy8gVW5pdGVkIFN0YXRlc1xyXG4gICAgTmV3WW9ya0NpdHk6IHsgY29kZTogXCJ1c1wiLCBsYXQ6IDQwLjcxNDI3LCBsb246IC03NC4wMDU5NyB9LFxyXG4gICAgTG9zQW5nZWxlczogeyBjb2RlOiBcInVzXCIsIGxhdDogMzQuMDUyMjMsIGxvbjogLTExOC4yNDM2OCB9LFxyXG4gICAgQ2hpY2FnbzogeyBjb2RlOiBcInVzXCIsIGxhdDogNDEuODUwMDMsIGxvbjogLTg3LjY1MDA1IH0sXHJcbiAgICBIb3VzdG9uOiB7IGNvZGU6IFwidXNcIiwgbGF0OiAyOS43NjMyOCwgbG9uOiAtOTUuMzYzMjcgfSxcclxuICAgIFdhc2hpbmd0b246IHsgY29kZTogXCJ1c1wiLCBsYXQ6IDM4Ljg5NTExLCBsb246IC03Ny4wMzYzNyB9LFxyXG4gICAgQm9zdG9uOiB7IGNvZGU6IFwidXNcIiwgbGF0OiA0Mi4zNTg0MywgbG9uOiAtNzEuMDU5NzcgfSxcclxuICAgIE1pYW1pOiB7IGNvZGU6IFwidXNcIiwgbGF0OiAyNS43NzQyNywgbG9uOiAtODAuMTkzNjYgfSxcclxuICAgIC8vIENhbmFkYVxyXG4gICAgVG9yb250bzogeyBjb2RlOiBcImNhXCIsIGxhdDogNDMuNzAwMTEsIGxvbjogLTc5LjQxNjMgfSxcclxuICAgIE1vbnRyZWFsOiB7IGNvZGU6IFwiY2FcIiwgbGF0OiA0NS41MDg4NCwgbG9uOiAtNzMuNTg3ODEgfSxcclxuICAgIC8vIFNwYWluXHJcbiAgICBNYWRyaWQ6IHsgY29kZTogXCJlc1wiLCBsYXQ6IDQwLjQxNjUsIGxvbjogLTMuNzAyNTYgfSxcclxuICAgIEJhcmNlbG9uYTogeyBjb2RlOiBcImVzXCIsIGxhdDogNDEuMzg4NzksIGxvbjogMi4xNTg5OSB9LFxyXG4gICAgVmFsZW5jaWE6IHsgY29kZTogXCJlc1wiLCBsYXQ6IDM5LjQ2OTc1LCBsb246IC0wLjM3NzM5IH0sXHJcbiAgICBTZXZpbGxlOiB7IGNvZGU6IFwiZXNcIiwgbGF0OiAzNy4zODI4MywgbG9uOiAtNS45NzMxNyB9LFxyXG4gICAgLy8gRnJhbmNlXHJcbiAgICBQYXJpczogeyBjb2RlOiBcImZyXCIsIGxhdDogNDguODUzNDEsIGxvbjogMi4zNDg4IH0sXHJcbiAgICBNYXJzZWlsbGU6IHsgY29kZTogXCJmclwiLCBsYXQ6IDQzLjI5Njk1LCBsb246IDUuMzgxMDcgfSxcclxuICAgIEx5b246IHsgY29kZTogXCJmclwiLCBsYXQ6IDQ1Ljc0ODQ2LCBsb246IDQuODQ2NzEgfSxcclxuICAgIFRvdWxvdXNlOiB7IGNvZGU6IFwiZnJcIiwgbGF0OiA0My42MDQyNiwgbG9uOiAxLjQ0MzY3IH0sXHJcbiAgICBOYW50ZXM6IHsgY29kZTogXCJmclwiLCBsYXQ6IDQ3LjIxNzI1LCBsb246IC0xLjU1MzM2IH0sXHJcbiAgICAvLyBJdGFseVxyXG4gICAgUm9tZTogeyBjb2RlOiBcIml0XCIsIGxhdDogNDEuODkxOTMsIGxvbjogMTIuNTExMzMgfSxcclxuICAgIE1pbGFuOiB7IGNvZGU6IFwiaXRcIiwgbGF0OiA0NS40NjQyNywgbG9uOiA5LjE4OTUxIH0sXHJcbiAgICBOYXBsZXM6IHsgY29kZTogXCJpdFwiLCBsYXQ6IDQwLjg1NjMxLCBsb246IDE0LjI0NjQxIH0sXHJcbiAgICBUdXJpbjogeyBjb2RlOiBcIml0XCIsIGxhdDogNDUuMDcwNDksIGxvbjogNy42ODY4MiB9LFxyXG4gICAgUGFsZXJtbzogeyBjb2RlOiBcIml0XCIsIGxhdDogMzguMTMyMDUsIGxvbjogMTMuMzM1NjEgfSxcclxuICAgIC8vIFVuaXRlZCBLaW5nZG9tXHJcbiAgICBMb25kb246IHsgY29kZTogXCJ1a1wiLCBsYXQ6IDUxLjUwODUzLCBsb246IC0wLjEyNTc0IH0sXHJcbiAgICBCaXJtaW5naGFtOiB7IGNvZGU6IFwidWtcIiwgbGF0OiA1Mi40ODE0MiwgbG9uOiAtMS44OTk4MyB9LFxyXG4gICAgTGl2ZXJwb29sOiB7IGNvZGU6IFwidWtcIiwgbGF0OiA1My40MTA1OCwgbG9uOiAtMi45Nzc5NCB9LFxyXG4gICAgLy8gR2VybWFueVxyXG4gICAgQmVybGluOiB7IGNvZGU6IFwiZGVcIiwgbGF0OiA1Mi41MjQzNywgbG9uOiAxMy40MTA1MyB9LFxyXG4gICAgSGFtYnVyZzogeyBjb2RlOiBcImRlXCIsIGxhdDogNTMuNTc1MzIsIGxvbjogMTAuMDE1MzQgfSxcclxuICAgIE11bmljaDogeyBjb2RlOiBcImRlXCIsIGxhdDogNDguMTM3NDMsIGxvbjogMTEuNTc1NDkgfSxcclxuICAgIENvbG9nbmU6IHsgY29kZTogXCJkZVwiLCBsYXQ6IDUwLjkzMzMzLCBsb246IDYuOTUgfSxcclxuICAgIEZyYW5rZnVydDogeyBjb2RlOiBcImRlXCIsIGxhdDogNTAuMTE1NTIsIGxvbjogOC42ODQxNyB9LFxyXG4gICAgLy8gR3JlZWNlXHJcbiAgICBBdGhlbnM6IHsgY29kZTogXCJnclwiLCBsYXQ6IDM4LjI3NDk0OTcsIGxvbjogMjMuODEwMjcxNyB9LFxyXG4gICAgLy8gQ3JvYXRpYVxyXG4gICAgWmFncmViOiB7IGNvZGU6IFwiaHJcIiwgbGF0OiA0NS44MTQ0NCwgbG9uOiAxNS45Nzc5OCB9LFxyXG4gICAgLy8gQm9zbmlhXHJcbiAgICBTYXJhamV2bzogeyBjb2RlOiBcImJhXCIsIGxhdDogNDMuODQ4NjQsIGxvbjogMTguMzU2NDQgfSxcclxuICAgIC8vIFJ1c3NpYVxyXG4gICAgTW9zY293OiB7IGNvZGU6IFwicnVcIiwgbGF0OiA1NS43NTIyMiwgbG9uOiAzNy42MTU1NiB9LFxyXG4gICAgU2FpbnRQZXRlcnNidXJnOiB7IGNvZGU6IFwicnVcIiwgbGF0OiA1OS45Mzg2MywgbG9uOiAzMC4zMTQxMyB9LFxyXG4gICAgLy8gU2VyYmlhXHJcbiAgICBCZWxncmFkZTogeyBjb2RlOiBcInJzXCIsIGxhdDogNDQuODA0MDEsIGxvbjogMjAuNDY1MTMgfSxcclxuICAgIC8vIE5ldGhlcmxhbmRzXHJcbiAgICBBbXN0ZXJkYW06IHsgY29kZTogXCJubFwiLCBsYXQ6IDUyLjM3NDAzLCBsb246IDQuODg5NjkgfSxcclxuICAgIC8vIFR1cmtleVxyXG4gICAgSXN0YW5idWw6IHsgY29kZTogXCJ0clwiLCBsYXQ6IDQxLjAxMzg0LCBsb246IDI4Ljk0OTY2IH0sXHJcbiAgICBBbmthcmE6IHsgY29kZTogXCJ0clwiLCBsYXQ6IDM5LjkxOTg3LCBsb246IDMyLjg1NDI3IH0sXHJcbiAgICBJem1pcjogeyBjb2RlOiBcInRyXCIsIGxhdDogMzguNDEyNzMsIGxvbjogMjcuMTM4MzggfSxcclxuICAgIEJ1cnNhOiB7IGNvZGU6IFwidHJcIiwgbGF0OiA0MC4xOTU1OSwgbG9uOiAyOS4wNjAxMyB9LFxyXG4gICAgQWRhbmE6IHsgY29kZTogXCJ0clwiLCBsYXQ6IDM3LjAwMTY3LCBsb246IDM1LjMyODg5IH0sXHJcbiAgICBHYXppYW50ZXA6IHsgY29kZTogXCJ0clwiLCBsYXQ6IDM3LjA1OTQ0LCBsb246IDM3LjM4MjUgfSxcclxuICAgIEtvbnlhOiB7IGNvZGU6IFwidHJcIiwgbGF0OiAzNy44NzEzNSwgbG9uOiAzMi40ODQ2NCB9LFxyXG4gICAgQW50YWx5YTogeyBjb2RlOiBcInRyXCIsIGxhdDogMzYuOTA4MTIsIGxvbjogMzAuNjk1NTYgfSxcclxuICAgIC8vIFBvbGFuZFxyXG4gICAgV2Fyc2F3OiB7IGNvZGU6IFwicGxcIiwgbGF0OiA1Mi4yMjk3NywgbG9uOiAyMS4wMTE3OCB9LFxyXG4gICAgTG9kejogeyBjb2RlOiBcInBsXCIsIGxhdDogNTEuNzUsIGxvbjogMTkuNDY2NjcgfSxcclxuICAgIEtyYWtvdzogeyBjb2RlOiBcInBsXCIsIGxhdDogNTAuMDYxNDMsIGxvbjogMTkuOTM2NTggfSxcclxuICAgIFdyb2NsYXc6IHsgY29kZTogXCJwbFwiLCBsYXQ6IDUxLjEsIGxvbjogMTcuMDMzMzMgfSxcclxuICAgIFBvem5hbjogeyBjb2RlOiBcInBsXCIsIGxhdDogNTIuNDA2OTIsIGxvbjogMTYuOTI5OTMgfSxcclxuICAgIEdkYW5zazogeyBjb2RlOiBcInBsXCIsIGxhdDogNTQuMzUyMDUsIGxvbjogMTguNjQ2MzcgfSxcclxuICAgIC8vIFJvbWFuaWFcclxuICAgIEJ1Y2hhcmVzdDogeyBjb2RlOiBcInJvXCIsIGxhdDogNDQuNDMyMjUsIGxvbjogMjYuMTA2MjYgfSxcclxuICAgIC8vIElzcmFlbFxyXG4gICAgSmVydXNhbGVtOiB7IGNvZGU6IFwiaWxcIiwgbGF0OiAzMS43NjkwNCwgbG9uOiAzNS4yMTYzMyB9LFxyXG4gICAgVGVsQXZpdjogeyBjb2RlOiBcImlsXCIsIGxhdDogMzIuMDgwODgsIGxvbjogMzQuNzgwNTcgfSxcclxuICAgIC8vIEdlb3JnaWFcclxuICAgIFRiaWxpc2k6IHsgY29kZTogXCJnZVwiLCBsYXQ6IDQxLjY5NDExLCBsb246IDQ0LjgzMzY4IH0sXHJcbiAgICAvLyBJbmRpYVxyXG4gICAgTXVtYmFpOiB7IGNvZGU6IFwiaW5cIiwgbGF0OiAxOS4wNzI4MywgbG9uOiA3Mi44ODI2MSB9LFxyXG4gICAgRGVsaGk6IHsgY29kZTogXCJpblwiLCBsYXQ6IDI4LjY1MTk1LCBsb246IDc3LjIzMTQ5IH0sXHJcbiAgICAvLyBBdXN0cmFsaWFcclxuICAgIFN5ZG5leTogeyBjb2RlOiBcImF1XCIsIGxhdDogLTMzLjg2Nzg1LCBsb246IDE1MS4yMDczMiB9LFxyXG4gICAgTWVsYm91cm5lOiB7IGNvZGU6IFwiYXVcIiwgbGF0OiAtMzcuODE0LCBsb246IDE0NC45NjMzMiB9LFxyXG4gICAgQnJpc2JhbmU6IHsgY29kZTogXCJhdVwiLCBsYXQ6IC0yNy40Njc5NCwgbG9uOiAxNTMuMDI4MDkgfSxcclxuICAgIC8vIFNpbmdhcG9yZVxyXG4gICAgU2luZ2Fwb3JlOiB7IGNvZGU6IFwic2dcIiwgbGF0OiAxLjI4OTY3LCBsb246IDEwMy44NTAwNyB9LFxyXG4gICAgLy8gU291dGggS29yZWFcclxuICAgIFNlb3VsOiB7IGNvZGU6IFwia3JcIiwgbGF0OiAzNy41NjYsIGxvbjogMTI2Ljk3ODQgfSxcclxuICAgIC8vIEphcGFuXHJcbiAgICBUb2t5bzogeyBjb2RlOiBcImpwXCIsIGxhdDogMzUuNjg5NSwgbG9uOiAxMzkuNjkxNzEgfVxyXG59O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1HbG9iYWwuanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XHJcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgb1trMl0gPSBtW2tdO1xyXG59KSk7XHJcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xyXG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcclxuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcclxufSk7XHJcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xyXG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcclxuICAgIHZhciByZXN1bHQgPSB7fTtcclxuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcclxuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMubG9nID0gZXhwb3J0cy5hZG1pbiA9IGV4cG9ydHMuY2hhdCA9IGV4cG9ydHMuZGlyZWN0ID0gZXhwb3J0cy5hbm5vdW5jZW1lbnQgPSBleHBvcnRzLmFub255bW91cyA9IHZvaWQgMDtcclxucmVxdWlyZShcIi4vdHlwZXNcIik7XHJcbmNvbnN0IENvbG9yID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL0NvbG9yXCIpKTtcclxuY29uc3QgR2xvYmFsXzEgPSByZXF1aXJlKFwiLi9HbG9iYWxcIik7XHJcbmNvbnN0IHRlbXBsYXRlID0gXCIlYyVzJWMgJWMlcyVjICVjJXNcIjtcclxuY29uc3QgdGFnID0gXCJkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Y29sb3I6IGJsYWNrOyBmb250LXdlaWdodDogYm9sZDsgcGFkZGluZzogM3B4IDdweCAzcHggN3B4OyBib3JkZXItcmFkaXVzOiAzcHggM3B4IDNweCAzcHg7XCI7XHJcbmNvbnN0IGFubm91bmNlbWVudFRhZyA9IGZvcm1hdFRhZyhHbG9iYWxfMS5Db2xvcnMuR29sZCk7XHJcbmNvbnN0IHByaXZhdGVUYWcgPSBmb3JtYXRUYWcoR2xvYmFsXzEuQ29sb3JzLlNreUJsdWUpO1xyXG5jb25zdCBjaGF0VGFnID0gZm9ybWF0VGFnKEdsb2JhbF8xLkNvbG9ycy5MaWdodEdyZWVuKTtcclxuY29uc3QgYWRtaW5UYWcgPSBmb3JtYXRUYWcoR2xvYmFsXzEuQ29sb3JzLkdvbGQpO1xyXG5jb25zdCB0aW1lc3RhbXBUYWcgPSBmb3JtYXRUYWcoR2xvYmFsXzEuQ29sb3JzLkxpZ2h0R3JleSk7XHJcbmNvbnN0IGFubm91bmNlbWVudFRhZ1RleHQgPSBcIvCfk6JcIjtcclxuY29uc3QgcHJpdmF0ZVRhZ1RleHQgPSBcIvCfk6UgXCI7XHJcbi8qKlxyXG4gKiBDb252ZXJ0cyBIYXhiYWxsJ3MgYW5ub3VuY2VtZW50IHR5cGVzIHRvIENTUy5cclxuICovXHJcbnZhciBDaGF0U3R5bGVDU1M7XHJcbihmdW5jdGlvbiAoQ2hhdFN0eWxlQ1NTKSB7XHJcbiAgICBDaGF0U3R5bGVDU1NbXCJCb2xkXCJdID0gXCJmb250LXdlaWdodDogYm9sZDtcIjtcclxuICAgIENoYXRTdHlsZUNTU1tcIkl0YWxpY1wiXSA9IFwiZm9udC1zdHlsZTogaXRhbGljO1wiO1xyXG4gICAgQ2hhdFN0eWxlQ1NTW1wiU21hbGxcIl0gPSBcImZvbnQtc2l6ZTogc21hbGw7XCI7XHJcbiAgICBDaGF0U3R5bGVDU1NbXCJTbWFsbEJvbGRcIl0gPSBcImZvbnQtc2l6ZTogc21hbGw7IGZvbnQtd2VpZ2h0OiBib2xkO1wiO1xyXG4gICAgQ2hhdFN0eWxlQ1NTW1wiU21hbGxJdGFsaWNcIl0gPSBcImZvbnQtc2l6ZTogc21hbGw7IGZvbnQtc3R5bGU6IGl0YWxpYztcIjtcclxufSkoQ2hhdFN0eWxlQ1NTIHx8IChDaGF0U3R5bGVDU1MgPSB7fSkpO1xyXG4vKipcclxuICogRm9ybWF0cyBhIENTUyB0YWcgd2l0aCB0aGUgc3BlY2lmaWVkIGNvbG9yLlxyXG4gKlxyXG4gKiBAcGFyYW0gY29sb3JcclxuICovXHJcbmZ1bmN0aW9uIGZvcm1hdFRhZyhjb2xvcikge1xyXG4gICAgcmV0dXJuIHRhZyArIGBiYWNrZ3JvdW5kLWNvbG9yOiAke0NvbG9yLmdldFJHQlN0cmluZyhDb2xvci5nZXRSR0IoY29sb3IpKX07YDtcclxufVxyXG4vKipcclxuICogR2V0cyBhIGZvcm1hdHRlZCB0aW1lc3RhbXAgb2YgdGhlIGN1cnJlbnQgdGltZS5cclxuICovXHJcbmZ1bmN0aW9uIHRpbWVzdGFtcCgpIHtcclxuICAgIHJldHVybiBgJHtuZXcgRGF0ZShEYXRlLm5vdygpIC0gKG5ldyBEYXRlKERhdGUubm93KCkpLmdldFRpbWV6b25lT2Zmc2V0KCkgKiA2MDAwMCkpLnRvSVNPU3RyaW5nKCkuc3Vic3RyKDExLCA4KX1gO1xyXG59XHJcbi8qKlxyXG4gKiBTZW5kcyBhIGN1c3RvbSBsb2cgd2l0aCBDU1Mgc3R5bGluZy5cclxuICpcclxuICogQHBhcmFtIG9wdGlvbnNcclxuICovXHJcbmZ1bmN0aW9uIGN1c3RvbUxvZyhvcHRpb25zKSB7XHJcbiAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lO1xyXG4gICAgbGV0IGNvbG9yID0gKF9hID0gb3B0aW9ucy5tZXNzYWdlLmNvbG9yKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBHbG9iYWxfMS5Db2xvcnMuQmxhY2s7XHJcbiAgICBjb25zdCBtZXNzYWdlQ29sb3IgPSBcImNvbG9yOiBcIiArIChDb2xvci5pc0xpZ2h0KGNvbG9yKSA/IENvbG9yLmdldFJHQlN0cmluZyhDb2xvci5zaGFkZUNvbG9yKGNvbG9yLCAtNDApKSA6IENvbG9yLmdldFJHQlN0cmluZyhDb2xvci5nZXRSR0IoY29sb3IpKSkgKyBcIjtcIjtcclxuICAgIGxldCBtZXNzYWdlU3R5bGUgPSBcIlwiO1xyXG4gICAgaWYgKG9wdGlvbnMubWVzc2FnZS5zdHlsZSA9PT0gR2xvYmFsXzEuQ2hhdFN0eWxlLkJvbGQpXHJcbiAgICAgICAgbWVzc2FnZVN0eWxlID0gQ2hhdFN0eWxlQ1NTLkJvbGQ7XHJcbiAgICBpZiAob3B0aW9ucy5tZXNzYWdlLnN0eWxlID09PSBHbG9iYWxfMS5DaGF0U3R5bGUuSXRhbGljKVxyXG4gICAgICAgIG1lc3NhZ2VTdHlsZSA9IENoYXRTdHlsZUNTUy5JdGFsaWM7XHJcbiAgICBpZiAob3B0aW9ucy5tZXNzYWdlLnN0eWxlID09PSBHbG9iYWxfMS5DaGF0U3R5bGUuU21hbGwpXHJcbiAgICAgICAgbWVzc2FnZVN0eWxlID0gQ2hhdFN0eWxlQ1NTLlNtYWxsO1xyXG4gICAgaWYgKG9wdGlvbnMubWVzc2FnZS5zdHlsZSA9PT0gR2xvYmFsXzEuQ2hhdFN0eWxlLlNtYWxsQm9sZClcclxuICAgICAgICBtZXNzYWdlU3R5bGUgPSBDaGF0U3R5bGVDU1MuU21hbGxCb2xkO1xyXG4gICAgaWYgKG9wdGlvbnMubWVzc2FnZS5zdHlsZSA9PT0gR2xvYmFsXzEuQ2hhdFN0eWxlLlNtYWxsSXRhbGljKVxyXG4gICAgICAgIG1lc3NhZ2VTdHlsZSA9IENoYXRTdHlsZUNTUy5TbWFsbEl0YWxpYztcclxuICAgIGFub255bW91cygoX2IgPSBvcHRpb25zLnRlbXBsYXRlKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiB0ZW1wbGF0ZSwgKF9jID0gb3B0aW9ucy50aW1lc3RhbXBUYWcpICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6IHRpbWVzdGFtcFRhZywgdGltZXN0YW1wKCksIFwiXCIsIChfZCA9IG9wdGlvbnMudGFnKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiBcIlwiLCAoX2UgPSBvcHRpb25zLnRhZ0NvbnRlbnQpICE9PSBudWxsICYmIF9lICE9PSB2b2lkIDAgPyBfZSA6IFwiXCIsIFwiXCIsIG1lc3NhZ2VDb2xvciArIG1lc3NhZ2VTdHlsZSwgb3B0aW9ucy5tZXNzYWdlLm1lc3NhZ2UpO1xyXG59XHJcbi8qKlxyXG4gKiBTZW5kcyBhbiBhbm9ueW1vdXMsIHVudHJhY2VhYmxlIGxvZy5cclxuICpcclxuICogQHBhcmFtIHBhcmFtc1xyXG4gKi9cclxuZnVuY3Rpb24gYW5vbnltb3VzKC4uLnBhcmFtcykge1xyXG4gICAgc2V0VGltZW91dChjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUsIC4uLnBhcmFtcykpO1xyXG59XHJcbmV4cG9ydHMuYW5vbnltb3VzID0gYW5vbnltb3VzO1xyXG4vKipcclxuICogTG9ncyBhIHJvb20gYW5ub3VuY2VtZW50LlxyXG4gKlxyXG4gKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSBvYmplY3QuXHJcbiAqL1xyXG5mdW5jdGlvbiBhbm5vdW5jZW1lbnQobWVzc2FnZSkge1xyXG4gICAgY3VzdG9tTG9nKHtcclxuICAgICAgICB0YWc6IGFubm91bmNlbWVudFRhZyxcclxuICAgICAgICB0YWdDb250ZW50OiBhbm5vdW5jZW1lbnRUYWdUZXh0LFxyXG4gICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXHJcbiAgICB9KTtcclxufVxyXG5leHBvcnRzLmFubm91bmNlbWVudCA9IGFubm91bmNlbWVudDtcclxuLyoqXHJcbiAqIExvZ3MgYSBwcml2YXRlIG1lc3NhZ2UuXHJcbiAqXHJcbiAqIEBwYXJhbSBtZXNzYWdlIFRoZSBtZXNzYWdlIG9iamVjdC5cclxuICogQHBhcmFtIHBsYXllciBUaGUgcGxheWVyIHdobyByZWNlaXZlZCB0aGUgbWVzc2FnZS5cclxuICovXHJcbmZ1bmN0aW9uIGRpcmVjdChtZXNzYWdlLCBwbGF5ZXIpIHtcclxuICAgIGN1c3RvbUxvZyh7XHJcbiAgICAgICAgdGFnOiBwcml2YXRlVGFnLFxyXG4gICAgICAgIHRhZ0NvbnRlbnQ6IHByaXZhdGVUYWdUZXh0ICsgKHBsYXllciA9PT0gbnVsbCB8fCBwbGF5ZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBsYXllci50YWcpLFxyXG4gICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcclxuICAgIH0pO1xyXG59XHJcbmV4cG9ydHMuZGlyZWN0ID0gZGlyZWN0O1xyXG4vKipcclxuICogTG9ncyBhIHBsYXllciBjaGF0IG1lc3NhZ2UuXHJcbiAqXHJcbiAqIEBwYXJhbSBtZXNzYWdlIFRoZSBtZXNzYWdlIG9iamVjdC5cclxuICogQHBhcmFtIHBsYXllciBUaGUgcGxheWVyIHdobyBzZW50IHRoZSBtZXNzYWdlLlxyXG4gKi9cclxuZnVuY3Rpb24gY2hhdChtZXNzYWdlLCBwbGF5ZXIpIHtcclxuICAgIGN1c3RvbUxvZyh7XHJcbiAgICAgICAgdGFnOiBjaGF0VGFnLFxyXG4gICAgICAgIHRhZ0NvbnRlbnQ6IHBsYXllciA9PT0gbnVsbCB8fCBwbGF5ZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBsYXllci50YWcsXHJcbiAgICAgICAgbWVzc2FnZTogbWVzc2FnZVxyXG4gICAgfSk7XHJcbn1cclxuZXhwb3J0cy5jaGF0ID0gY2hhdDtcclxuLyoqXHJcbiAqIExvZ3MgYW4gYWRtaW4ncyBjaGF0IG1lc3NhZ2UuXHJcbiAqXHJcbiAqIEBwYXJhbSBtZXNzYWdlIFRoZSBtZXNzYWdlIG9iamVjdC5cclxuICogQHBhcmFtIHBsYXllciBUaGUgcGxheWVyIHdobyBzZW50IHRoZSBtZXNzYWdlLlxyXG4gKi9cclxuZnVuY3Rpb24gYWRtaW4obWVzc2FnZSwgcGxheWVyKSB7XHJcbiAgICBjdXN0b21Mb2coe1xyXG4gICAgICAgIHRhZzogYWRtaW5UYWcsXHJcbiAgICAgICAgdGFnQ29udGVudDogcGxheWVyID09PSBudWxsIHx8IHBsYXllciA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGxheWVyLnRhZyxcclxuICAgICAgICBtZXNzYWdlOiBtZXNzYWdlXHJcbiAgICB9KTtcclxufVxyXG5leHBvcnRzLmFkbWluID0gYWRtaW47XHJcbi8qKlxyXG4gKiBMb2dzIGEgZ2VuZXJpYyBtZXNzYWdlLlxyXG4gKlxyXG4gKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSBvYmplY3QuXHJcbiAqL1xyXG5mdW5jdGlvbiBsb2cobWVzc2FnZSkge1xyXG4gICAgY3VzdG9tTG9nKHtcclxuICAgICAgICBtZXNzYWdlOiBtZXNzYWdlXHJcbiAgICB9KTtcclxufVxyXG5leHBvcnRzLmxvZyA9IGxvZztcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TG9nZ2VyLmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xyXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xyXG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xyXG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcclxuICAgIG9bazJdID0gbVtrXTtcclxufSkpO1xyXG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcclxufSkgOiBmdW5jdGlvbihvLCB2KSB7XHJcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XHJcbn0pO1xyXG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcclxuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XHJcbiAgICB2YXIgcmVzdWx0ID0ge307XHJcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XHJcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxufTtcclxudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XHJcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cclxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxyXG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcclxuICAgIH0pO1xyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuUGxheWVyID0gdm9pZCAwO1xyXG5yZXF1aXJlKFwiLi90eXBlc1wiKTtcclxuY29uc3QgQWJzdHJhY3REaXNjXzEgPSByZXF1aXJlKFwiLi9BYnN0cmFjdERpc2NcIik7XHJcbmNvbnN0IFNldHRpbmdzXzEgPSByZXF1aXJlKFwiLi9TZXR0aW5nc1wiKTtcclxuY29uc3QgQ29ubmVjdGlvbkhpc3RvcnkgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vQ29ubmVjdGlvbkhpc3RvcnlcIikpO1xyXG5jb25zdCBSb2xlTGlzdF8xID0gcmVxdWlyZShcIi4vUm9sZUxpc3RcIik7XHJcbi8qKiBBIGNsYXNzIHJlcHJlc2VudGluZyBhIHBsYXllciAqL1xyXG5jbGFzcyBQbGF5ZXIgZXh0ZW5kcyBBYnN0cmFjdERpc2NfMS5BYnN0cmFjdERpc2Mge1xyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGEgUGxheWVyIG9iamVjdC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcm9vbSBUaGUgcm9vbSBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0gcGxheWVyT2JqZWN0IFRoZSBwbGF5ZXIgYmFzaWMgaW5mb3JtYXRpb24uXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKHJvb20sIHBsYXllck9iamVjdCkge1xyXG4gICAgICAgIHN1cGVyKHJvb20pO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBsaW1pdCBkaXN0YW5jZSB0byBhIGRpc2MgdGhhdCBwcmV2ZW50cyBpdCBmcm9tIGJlaW5nIGtpY2tlZCBieSB0aGUgcGxheWVyLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogVGhlIGJhbGwgd2lsbCBiZSBraWNrYWJsZSBhdCBhbnkgZGlzdGFuY2Ugc2hvcnRlciB0aGFuIHRoaXMuXHJcbiAgICAgICAgICogQHByaXZhdGVcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLl9raWNrTGltaXREaXN0YW5jZSA9IDQ7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhlIHVzZXJzJyBwZXJtaXNzaW9uIHJvbGVzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogUm9sZXMgYXJlIHVzZWQgYXMgYSBwZXJtaXNzaW9uIHN5c3RlbSBieSBjb21tYW5kcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIElmIGEgY29tbWFuZCBoYXMgYmVlbiBkZWZpbmVkIHdpdGggYSBjZXJ0YWluIHJvbGUsIGl0J2xsIGNoZWNrIHdoZXRoZXIgdGhlIHBsYXllciBoYXMgaXQgdG9vLlxyXG4gICAgICAgICAqIEBwcml2YXRlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5fcm9sZXMgPSBuZXcgUm9sZUxpc3RfMS5Sb2xlTGlzdCgpO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFBsYXllciBjdXN0b20gc2V0dGluZ3MuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBUaGlzIGlzIHVzZWZ1bCBpZiB5b3Ugd2FudCB0byBjcmVhdGUgeW91ciBvd24gcHJvcGVydGllcyBmb3IgeW91ciBwbGF5ZXJzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGV4YW1wbGVcclxuICAgICAgICAgKiAvLyBDcmVhdGUgcHJlZml4ZXMgZm9yIHlvdXIgcGxheWVycycgbWVzc2FnZXNcclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIHJvb20ub25QbGF5ZXJKb2luID0gZnVuY3Rpb24gKHBsYXllcikge1xyXG4gICAgICAgICAqICAgICAgLy8gU2V0IHVwIHByZWZpeCBzZXR0aW5nXHJcbiAgICAgICAgICogICAgICBwbGF5ZXIuc2V0dGluZ3MucHJlZml4ID0gXCJbVG9wIDFdXCI7XHJcbiAgICAgICAgICogfVxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogcm9vbS5vblBsYXllckNoYXQgPSBmdW5jdGlvbiAocGxheWVyLCBtZXNzYWdlKSB7XHJcbiAgICAgICAgICogICAgICAvLyBPdmVycmlkZSB0aGUgcGxheWVyJ3MgbWVzc2FnZSB3aXRoIHRoZSBuZXcgcHJlZml4IHNldHRpbmdcclxuICAgICAgICAgKiAgICAgIHJvb20uc2VuZCh7IG1lc3NhZ2U6IGAke3BsYXllci5zZXR0aW5ncy5wcmVmaXh9ICR7cGxheWVyLm5hbWV9OiAke21lc3NhZ2V9YCB9KTtcclxuICAgICAgICAgKiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgKiB9XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5zZXR0aW5ncyA9IG5ldyBTZXR0aW5nc18xLlNldHRpbmdzKCk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQ29vbGRvd24gaW4gc2Vjb25kcyBiZXR3ZWVuIGNvbW1hbmRzLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuY29tbWFuZHNDb29sZG93biA9IDA7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogV2hldGhlciB0aGUgcGxheWVyIGlzIGFibGUgdG8gcmVhZCB0aGUgcm9vbSBjaGF0LlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogSWYgdGhpcyBpcyBmYWxzZSwgdGhlIGBSb29tLnNlbmRgIGFuZCBgUm9vbS5jaGF0YCBtZXRob2RzIHdpbGwgaWdub3JlIHRoaXMgcGxheWVyLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogVGhpcyB3b24ndCBoYXZlIGFueSBlZmZlY3Qgb24gdGhlIG5hdGl2ZSBgc2VuZEFubm91bmNlbWVudGAgYW5kIGBzZW5kQ2hhdGAgbWV0aG9kcywgdGhvdWdoLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuY2FuUmVhZENoYXQgPSB0cnVlO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFdoZXRoZXIgdGhlIHBsYXllciBpcyBhYmxlIHRvIHVzZSBjb21tYW5kcy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIElmIHRoaXMgaXMgZmFsc2UsIGNvbW1hbmRzIHdpbGwgYmUgaWdub3JlZCBmb3IgdGhpcyBwbGF5ZXIuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5jYW5Vc2VDb21tYW5kcyA9IHRydWU7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhlIGxhc3QgdGltZSB0aGUgcGxheWVyIHJhbiBhIGNvbW1hbmQuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5fbGFzdENvbW1hbmRUaW1lID0gMDtcclxuICAgICAgICB0aGlzLm5hbWUgPSBwbGF5ZXJPYmplY3QubmFtZTtcclxuICAgICAgICB0aGlzLmlkID0gcGxheWVyT2JqZWN0LmlkO1xyXG4gICAgICAgIHRoaXMuYXV0aCA9IHBsYXllck9iamVjdC5hdXRoO1xyXG4gICAgICAgIHRoaXMuY29ubiA9IHBsYXllck9iamVjdC5jb25uO1xyXG4gICAgICAgIHRoaXMuaXAgPSB0aGlzLl9kZWNvZGVDb25uKHRoaXMuY29ubik7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEZldGNoZXMgdGhlIHBsYXllcidzIGdlb2xvY2F0aW9uIGJhc2VkIG9uIHRoZWlyIElQLCBzdG9yZXMgaXQgb24gdGhlIGBnZW9sb2NhdGlvbmAgcHJvcGVydHkgYW5kIHJldHVybnMgaXQuXHJcbiAgICAgKlxyXG4gICAgICogVGhpcyBjYW4gZmFpbCBpZiB0aGUgZmV0Y2ggb3BlcmF0aW9uIGZhaWxzLlxyXG4gICAgICovXHJcbiAgICBmZXRjaEdlb0xvY2F0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGNvbm5IaXN0b3J5ID0geWllbGQgQ29ubmVjdGlvbkhpc3RvcnkuZ2V0KHRoaXMuaXApO1xyXG4gICAgICAgICAgICBpZiAoY29ubkhpc3RvcnkpIHtcclxuICAgICAgICAgICAgICAgIGlmIChjb25uSGlzdG9yeS5nZW8pIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9nZW8gPSBjb25uSGlzdG9yeS5nZW87XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2dlbztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCByZXF1ZXN0ID0geWllbGQgZmV0Y2goYGh0dHBzOi8vaXBhcGkuY28vJHt0aGlzLmlwfS9qc29uL2ApO1xyXG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIHJlcXVlc3QuanNvbigpO1xyXG4gICAgICAgICAgICB0aGlzLl9nZW8gPSB7XHJcbiAgICAgICAgICAgICAgICBjaXR5OiByZXNwb25zZS5jaXR5LFxyXG4gICAgICAgICAgICAgICAgY29udGluZW50OiByZXNwb25zZS5jb250aW5lbnRfY29kZSxcclxuICAgICAgICAgICAgICAgIGNvdW50cnk6IHJlc3BvbnNlLmNvdW50cnksXHJcbiAgICAgICAgICAgICAgICBsYW5ndWFnZTogcmVzcG9uc2UubGFuZ3VhZ2VzLnNwbGl0KFwiLFwiKVswXSxcclxuICAgICAgICAgICAgICAgIG9yZzogcmVzcG9uc2Uub3JnLFxyXG4gICAgICAgICAgICAgICAgcmVnaW9uOiByZXNwb25zZS5yZWdpb24sXHJcbiAgICAgICAgICAgICAgICB0aW1lem9uZTogcmVzcG9uc2UudGltZXpvbmUsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9nZW87XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIERlY29kZXMgdGhlIGBjb25uYCBwcm9wZXJ0eSB0byBnZXQgdGhlIHBsYXllcidzIElQLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBoZXggVGhlIHN0cmluZyB0byBiZSBkZWNvZGVkLlxyXG4gICAgICovXHJcbiAgICBfZGVjb2RlQ29ubihzdHIpIHtcclxuICAgICAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHN0ci5yZXBsYWNlKC8oLi4pL2csICclJDEnKSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIE92ZXJyaWRlcyB0aGUgcGxheWVyJ3MgYXZhdGFyLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBhdmF0YXIgVGhlIG5ldyBhdmF0YXIuXHJcbiAgICAgKi9cclxuICAgIHNldEF2YXRhcihhdmF0YXIpIHtcclxuICAgICAgICB0aGlzLl9yb29tLm5hdGl2ZS5zZXRQbGF5ZXJBdmF0YXIodGhpcy5pZCwgYXZhdGFyKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmVtb3ZlcyB0aGUgb3ZlcnJpZGVyIGZvciB0aGUgcGxheWVyJ3MgYXZhdGFyLlxyXG4gICAgICovXHJcbiAgICBjbGVhckF2YXRhcigpIHtcclxuICAgICAgICB0aGlzLl9yb29tLm5hdGl2ZS5zZXRQbGF5ZXJBdmF0YXIodGhpcy5pZCwgbnVsbCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEtpY2tzIHRoZSBwbGF5ZXIgZnJvbSB0aGUgcm9vbS5cclxuICAgICAqL1xyXG4gICAga2ljayhyZWFzb24pIHtcclxuICAgICAgICB0aGlzLl9yb29tLm5hdGl2ZS5raWNrUGxheWVyKHRoaXMuaWQsIHJlYXNvbiAhPT0gbnVsbCAmJiByZWFzb24gIT09IHZvaWQgMCA/IHJlYXNvbiA6IFwiXCIsIGZhbHNlKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQmFucyB0aGUgcGxheWVyIGZyb20gam9pbmluZyBhZ2Fpbi5cclxuICAgICAqXHJcbiAgICAgKiBIYXhiYWxsIGJhbnMgYXJlIElQIGJhbnMsIHNvIGlmIHRoZSBwbGF5ZXIgY2hhbmdlcyB0aGVpciBJUCwgdGhleSB3aWxsIGJlIGFibGUgdG8gam9pbiB0aGUgcm9vbSBhZ2Fpbi5cclxuICAgICAqL1xyXG4gICAgYmFuKHJlYXNvbikge1xyXG4gICAgICAgIHRoaXMuX3Jvb20ubmF0aXZlLmtpY2tQbGF5ZXIodGhpcy5pZCwgcmVhc29uICE9PSBudWxsICYmIHJlYXNvbiAhPT0gdm9pZCAwID8gcmVhc29uIDogXCJcIiwgdHJ1ZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFNlbmRzIGEgcHJpdmF0ZSBtZXNzYWdlIHRvIHRoZSBwbGF5ZXIuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgVGhlIG1lc3NhZ2Ugb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICByZXBseShtZXNzYWdlKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmNhblJlYWRDaGF0KVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgbWVzc2FnZS50YXJnZXRJRCA9IHRoaXMuaWQ7XHJcbiAgICAgICAgdGhpcy5fcm9vbS5zZW5kKG1lc3NhZ2UpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVja3Mgd2hldGhlciB0aGUgcGxheWVyIGlzIGluIGEga2lja2FibGUgZGlzdGFuY2UgcmVsYXRpdmUgdG8gdGhlIHNwZWNpZmllZCBkaXNjLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBkaXNjIEEgZGlzYyBpbiB0aGUgbWFwLlxyXG4gICAgICovXHJcbiAgICBjYW5LaWNrKGRpc2MpIHtcclxuICAgICAgICBjb25zdCBkaXN0YW5jZSA9IGRpc2MuZGlzdGFuY2VUbyh0aGlzKTtcclxuICAgICAgICByZXR1cm4gZGlzdGFuY2UgPyBkaXN0YW5jZSA8IHRoaXMuX2tpY2tMaW1pdERpc3RhbmNlIDogZmFsc2U7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBwbGF5ZXIgY2FuIGV4ZWN1dGUgY29tbWFuZHMgbm93IGJhc2VkIG9uIHRoZWlyIGNvbW1hbmQgY29vbGRvd24gc2V0dGluZ3MuXHJcbiAgICAgKi9cclxuICAgIGNhblJ1bkNvbW1hbmRzQ29vbGRvd24oKSB7XHJcbiAgICAgICAgaWYgKERhdGUubm93KCkgLSB0aGlzLl9sYXN0Q29tbWFuZFRpbWUgPiB0aGlzLmNvbW1hbmRzQ29vbGRvd24gKiAxMDAwKVxyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgdGhlIGNvbW1hbmQgY29vbGRvd24gbGFzdCBjb21tYW5kIHRpbWUuXHJcbiAgICAgKi9cclxuICAgIHVwZGF0ZUNvb2xkb3duKCkge1xyXG4gICAgICAgIHRoaXMuX2xhc3RDb21tYW5kVGltZSA9IERhdGUubm93KCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEF0dGFjaGVzIGEgbmV3IHJvbGUgdG8gdGhlIHBsYXllci5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcm9sZVxyXG4gICAgICovXHJcbiAgICBhZGRSb2xlKHJvbGUpIHtcclxuICAgICAgICB0aGlzLl9yb2xlcy5hZGQocm9sZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZXMgYSBwbGF5ZXIncyByb2xlLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSByb2xlXHJcbiAgICAgKi9cclxuICAgIHJlbW92ZVJvbGUocm9sZSkge1xyXG4gICAgICAgIHRoaXMuX3JvbGVzLnJlbW92ZShyb2xlKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2tzIHdoZXRoZXIgYSBwbGF5ZXIgaGFzIHRoZSBzcGVjaWZpZWQgcm9sZS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcm9sZVxyXG4gICAgICovXHJcbiAgICBoYXNSb2xlKHJvbGUpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcm9sZXMuaGFzKHJvbGUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgUGxheWVyT2JqZWN0IG9mIHRoZSBwbGF5ZXIuXHJcbiAgICAgKi9cclxuICAgIGdldCBfcGxheWVyT2JqZWN0KCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9yb29tLm5hdGl2ZS5nZXRQbGF5ZXIodGhpcy5pZCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBEaXNjT2JqZWN0IG9mIHRoZSBwbGF5ZXIuXHJcbiAgICAgKi9cclxuICAgIGdldCBfZGlzY09iamVjdCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcm9vbS5uYXRpdmUuZ2V0UGxheWVyRGlzY1Byb3BlcnRpZXModGhpcy5pZCk7XHJcbiAgICB9XHJcbiAgICBzZXQgX2Rpc2NPYmplY3QocHJvcGVydGllcykge1xyXG4gICAgICAgIHRoaXMuX3Jvb20ubmF0aXZlLnNldFBsYXllckRpc2NQcm9wZXJ0aWVzKHRoaXMuaWQsIHByb3BlcnRpZXMpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgcGxheWVyJ3MgdGVhbS5cclxuICAgICAqL1xyXG4gICAgZ2V0IHRlYW0oKSB7XHJcbiAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgIHJldHVybiAoX2EgPSB0aGlzLl9wbGF5ZXJPYmplY3QpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50ZWFtO1xyXG4gICAgfVxyXG4gICAgc2V0IHRlYW0odGVhbSkge1xyXG4gICAgICAgIHRoaXMuX3Jvb20ubmF0aXZlLnNldFBsYXllclRlYW0odGhpcy5pZCwgdGVhbSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBwbGF5ZXIncyByb2xlcy5cclxuICAgICAqXHJcbiAgICAgKiBSb2xlcyBhcmUgdXNlZCBhcyBhIHBlcm1pc3Npb24gc3lzdGVtIGJ5IGNvbW1hbmRzLlxyXG4gICAgICpcclxuICAgICAqIElmIGEgY29tbWFuZCBoYXMgYmVlbiBkZWZpbmVkIHdpdGggYSBjZXJ0YWluIHJvbGUsIGl0J2xsIGNoZWNrIHdoZXRoZXIgdGhlIHBsYXllciBoYXMgaXQgdG9vLlxyXG4gICAgICovXHJcbiAgICBnZXQgcm9sZXMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JvbGVzLnJvbGVzO1xyXG4gICAgfVxyXG4gICAgZ2V0IHRvcFJvbGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucm9sZXMuc29ydCgoYSwgYikgPT4gYi5wb3NpdGlvbiAtIGEucG9zaXRpb24pWzBdO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgcGxheWVyJ3MgYWRtaW4gc3RhdHVzLlxyXG4gICAgICovXHJcbiAgICBnZXQgYWRtaW4oKSB7XHJcbiAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgIHJldHVybiAoX2EgPSB0aGlzLl9wbGF5ZXJPYmplY3QpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5hZG1pbjtcclxuICAgIH1cclxuICAgIHNldCBhZG1pbih2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuX3Jvb20ubmF0aXZlLnNldFBsYXllckFkbWluKHRoaXMuaWQsIHZhbHVlKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVGhlIHBsYXllcidzIHBvc2l0aW9uIGluIHRoZSBtYXAuXHJcbiAgICAgKi9cclxuICAgIGdldCBwb3NpdGlvbigpIHtcclxuICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuX3BsYXllck9iamVjdCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnBvc2l0aW9uO1xyXG4gICAgfVxyXG4gICAgc2V0IHBvc2l0aW9uKHBvcykge1xyXG4gICAgICAgIHRoaXMuX2Rpc2NPYmplY3QgPSB7IHg6IHBvcy54LCB5OiBwb3MueSB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgcGxheWVyJ3MgdGFnIChuYW1lICNpZCkuXHJcbiAgICAgKi9cclxuICAgIGdldCB0YWcoKSB7XHJcbiAgICAgICAgcmV0dXJuIGAke3RoaXMubmFtZX0gIyR7dGhpcy5pZH1gO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgcGxheWVyJ3MgbWVudGlvbiAoYEBwbGF5ZXJgKS5cclxuICAgICAqL1xyXG4gICAgZ2V0IG1lbnRpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIGBAJHt0aGlzLm5hbWUucmVwbGFjZSgvIC9nLCBcIl9cIil9YDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVGhlIHBsYXllcidzIGdlb2xvY2F0aW9uIGJhc2VkIG9uIHRoZWlyIElQLlxyXG4gICAgICpcclxuICAgICAqIFRoaXMgdmFsdWUgaXMgbm90IHNldCBhdCB0aGUgYG9uUGxheWVySm9pbmAgZXZlbnQgYW5kIHdpbGwgYmUgbnVsbCB1bnRpbCBpdCBpcyBmZXRjaGVkLlxyXG4gICAgICpcclxuICAgICAqIE9uY2UgZmV0Y2hlZCwgdGhlIGBvblBsYXllckdlb0xvY2F0aW9uRmV0Y2hgIGV2ZW50IHdpbGwgYmUgY2FsbGVkLlxyXG4gICAgICovXHJcbiAgICBnZXQgZ2VvbG9jYXRpb24oKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9nZW8pXHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZW87XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5QbGF5ZXIgPSBQbGF5ZXI7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBsYXllci5qcy5tYXAiLCJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLlBsYXllckxpc3QgPSB2b2lkIDA7XHJcbnJlcXVpcmUoXCIuL3R5cGVzXCIpO1xyXG5jb25zdCBHbG9iYWxfMSA9IHJlcXVpcmUoXCIuL0dsb2JhbFwiKTtcclxuLyoqIENsYXNzIHJlcHJlc2VudGluZyBhIGxpc3Qgb2YgcGxheWVycy4gKi9cclxuY2xhc3MgUGxheWVyTGlzdCB7XHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYSBQbGF5ZXJMaXN0IG9iamVjdC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gaXRlbXMgQW4gYXJyYXkgb2YgcGxheWVycy5cclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3IoLi4uaXRlbXMpIHtcclxuICAgICAgICBpdGVtcy5mb3JFYWNoKHAgPT4gdGhpcy5hZGQocCkpO1xyXG4gICAgfVxyXG4gICAgW1N5bWJvbC5pdGVyYXRvcl0oKSB7XHJcbiAgICAgICAgbGV0IGkgPSAwO1xyXG4gICAgICAgIGNvbnN0IGFyciA9IHRoaXMudmFsdWVzKCk7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmV4dDogKCkgPT4gKHtcclxuICAgICAgICAgICAgICAgIHZhbHVlOiBhcnJbaSsrXSxcclxuICAgICAgICAgICAgICAgIGRvbmU6IGkgPiBhcnIubGVuZ3RoXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogSG93IG1hbnkgcGxheWVycyBhcmUgb24gdGhlIGxpc3QuXHJcbiAgICAgKi9cclxuICAgIGdldCBzaXplKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlcygpLmxlbmd0aDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQWRkcyBhIHBsYXllciB0byB0aGUgbGlzdC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcGxheWVyIEEgcGxheWVyLlxyXG4gICAgICovXHJcbiAgICBhZGQocGxheWVyKSB7XHJcbiAgICAgICAgdGhpc1twbGF5ZXIuaWRdID0gcGxheWVyO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW1vdmVzIGEgcGxheWVyIGZyb20gdGhlIGxpc3QuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHBsYXllciBBIHBsYXllciwgYSBQbGF5ZXJPYmplY3Qgb3IgYSBwbGF5ZXIgSUQuXHJcbiAgICAgKi9cclxuICAgIHJlbW92ZShwbGF5ZXIpIHtcclxuICAgICAgICBkZWxldGUgdGhpc1t0eXBlb2YgcGxheWVyID09PSBcIm51bWJlclwiID8gcGxheWVyIDogcGxheWVyLmlkXTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyBhIHBsYXllciBmcm9tIHRoZSBsaXN0LlxyXG4gICAgICpcclxuICAgICAqIElmIHlvdSdyZSB1c2luZyB0aGlzIHRvIGZpbmQgcGxheWVycyBieSB0aGVpciBJRCwgY29uc2lkZXIgdXNpbmcgYHBsYXllcnNbaWRdYCBpbnN0ZWFkLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBwcmVkaWNhdGUgQSBwbGF5ZXIgSUQgb3IgYSBmdW5jdGlvbi5cclxuICAgICAqL1xyXG4gICAgZ2V0KHByZWRpY2F0ZSkge1xyXG4gICAgICAgIGlmICh0eXBlb2YgcHJlZGljYXRlID09PSBcInVuZGVmaW5lZFwiKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgaWYgKHR5cGVvZiBwcmVkaWNhdGUgPT09IFwibnVtYmVyXCIpXHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzW3ByZWRpY2F0ZV07XHJcbiAgICAgICAgZm9yIChjb25zdCBwbGF5ZXIgb2YgdGhpcykge1xyXG4gICAgICAgICAgICBpZiAocHJlZGljYXRlKHBsYXllcikpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcGxheWVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyBtdWx0aXBsZSBwbGF5ZXJzIGJhc2VkIG9uIGEgZmlsdGVyaW5nIGZ1bmN0aW9uLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBwcmVkaWNhdGUgQSBmdW5jdGlvbi5cclxuICAgICAqL1xyXG4gICAgZ2V0QWxsKHByZWRpY2F0ZSkge1xyXG4gICAgICAgIGNvbnN0IHBsYXllcnMgPSBuZXcgUGxheWVyTGlzdCgpO1xyXG4gICAgICAgIGZvciAoY29uc3QgcGxheWVyIG9mIHRoaXMpIHtcclxuICAgICAgICAgICAgaWYgKHByZWRpY2F0ZShwbGF5ZXIpKSB7XHJcbiAgICAgICAgICAgICAgICBwbGF5ZXJzLmFkZChwbGF5ZXIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBwbGF5ZXJzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIGFuIGFycmF5IG9mIGFsbCBwbGF5ZXJzLlxyXG4gICAgICovXHJcbiAgICB2YWx1ZXMoKSB7XHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC52YWx1ZXModGhpcyk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIHBsYXllcnMgYWNjb3JkaW5nIHRvIHRoZWlyIG9yZGVyIGluIHRoZSByb29tIGxpc3QuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHJvb20gQSByb29tIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgb3JkZXIocm9vbSkge1xyXG4gICAgICAgIGNvbnN0IG9yZGVyZWRMaXN0ID0gdGhpcy52YWx1ZXMoKTtcclxuICAgICAgICBjb25zdCBwbGF5ZXJMaXN0ID0gcm9vbS5uYXRpdmUuZ2V0UGxheWVyTGlzdCgpO1xyXG4gICAgICAgIG9yZGVyZWRMaXN0LnNvcnQoKGEsIGIpID0+IHBsYXllckxpc3QuZmluZEluZGV4KHAgPT4gcC5pZCA9PT0gYS5pZCkgLSBwbGF5ZXJMaXN0LmZpbmRJbmRleChwID0+IHAuaWQgPT09IGIuaWQpKTtcclxuICAgICAgICByZXR1cm4gWy4uLm9yZGVyZWRMaXN0XTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgZmlyc3QgcGxheWVyIG9uIHRoZSBsaXN0LlxyXG4gICAgICovXHJcbiAgICBmaXJzdCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZXMoKVswXTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgbGFzdCBwbGF5ZXIgb24gdGhlIGxpc3QuXHJcbiAgICAgKi9cclxuICAgIGxhc3QoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWVzKCkucG9wKCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdldHMgcGxheWVycyBieSB0aGVpciBuYW1lLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBuYW1lIFRoZSBuYW1lIG9mIHRoZSBwbGF5ZXIuXHJcbiAgICAgKi9cclxuICAgIGdldEJ5TmFtZShuYW1lKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QWxsKHBsYXllciA9PiBwbGF5ZXIubmFtZSA9PT0gbmFtZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdldHMgcGxheWVycyBieSB0aGVpciBwdWJsaWMgSUQuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGF1dGggVGhlIFB1YmxpYyBJRCBvZiB0aGUgcGxheWVyLlxyXG4gICAgICovXHJcbiAgICBnZXRCeUF1dGgoYXV0aCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmdldEFsbChwbGF5ZXIgPT4gcGxheWVyLmF1dGggPT09IGF1dGgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHBsYXllcnMgYnkgdGhlaXIgY29ubiBvciBJUC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gY29ubk9ySVAgQSBjb25uIHZhbHVlIG9yIElQLlxyXG4gICAgICovXHJcbiAgICBnZXRCeUNvbm5PcklQKGNvbm5PcklQKSB7XHJcbiAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgIHJldHVybiAoX2EgPSB0aGlzLmdldEFsbChwbGF5ZXIgPT4gcGxheWVyLmNvbm4gPT09IGNvbm5PcklQKSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogdGhpcy5nZXRBbGwocGxheWVyID0+IHBsYXllci5pcCA9PT0gY29ubk9ySVApO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBLaWNrcyBhbGwgcGxheWVycyBvbiB0aGUgbGlzdC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcmVhc29uXHJcbiAgICAgKi9cclxuICAgIGtpY2socmVhc29uKSB7XHJcbiAgICAgICAgdGhpcy52YWx1ZXMoKS5mb3JFYWNoKHBsYXllciA9PiBwbGF5ZXIua2ljayhyZWFzb24pKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQmFucyBhbGwgcGxheWVycyBvbiB0aGUgbGlzdC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcmVhc29uXHJcbiAgICAgKi9cclxuICAgIGJhbihyZWFzb24pIHtcclxuICAgICAgICB0aGlzLnZhbHVlcygpLmZvckVhY2gocGxheWVyID0+IHBsYXllci5iYW4ocmVhc29uKSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIHJvb20ncyBzcGVjdGF0b3JzLlxyXG4gICAgICovXHJcbiAgICBzcGVjdGF0b3JzKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmdldEFsbChwbGF5ZXIgPT4gcGxheWVyLnRlYW0gPT09IEdsb2JhbF8xLlRlYW1zLlNwZWN0YXRvcnMpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSByZWQgdGVhbSdzIHBsYXllcnMuXHJcbiAgICAgKi9cclxuICAgIHJlZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5nZXRBbGwocGxheWVyID0+IHBsYXllci50ZWFtID09PSBHbG9iYWxfMS5UZWFtcy5SZWQpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBibHVlIHRlYW0ncyBwbGF5ZXJzLlxyXG4gICAgICovXHJcbiAgICBibHVlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmdldEFsbChwbGF5ZXIgPT4gcGxheWVyLnRlYW0gPT09IEdsb2JhbF8xLlRlYW1zLkJsdWUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSByZWQgYW5kIGJsdWUgdGVhbXMnIHBsYXllcnMuXHJcbiAgICAgKi9cclxuICAgIHRlYW1zKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmdldEFsbChwbGF5ZXIgPT4gcGxheWVyLnRlYW0gIT09IEdsb2JhbF8xLlRlYW1zLlNwZWN0YXRvcnMpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIGFsbCBwbGF5ZXJzIHdpdGggYWRtaW4gc3RhdHVzLlxyXG4gICAgICovXHJcbiAgICBhZG1pbnMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QWxsKHBsYXllciA9PiBwbGF5ZXIuYWRtaW4pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTZW5kcyBhIHByaXZhdGUgbWVzc2FnZSB0byBhbGwgcGxheWVycyBvbiB0aGUgbGlzdC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBBIG1lc3NhZ2Ugb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICByZXBseShtZXNzYWdlKSB7XHJcbiAgICAgICAgZm9yIChjb25zdCBwbGF5ZXIgb2YgdGhpcykge1xyXG4gICAgICAgICAgICBwbGF5ZXIucmVwbHkobWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgYSBQbGF5ZXJMaXN0LlxyXG4gICAgICovXHJcbiAgICB0b1N0cmluZygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZXMoKS5tYXAocCA9PiBgJHtwLm5hbWV9ICgke3AuaWR9KWApLmpvaW4oXCIsIFwiKTtcclxuICAgIH1cclxufVxyXG5leHBvcnRzLlBsYXllckxpc3QgPSBQbGF5ZXJMaXN0O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1QbGF5ZXJMaXN0LmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuY3JlYXRlRXZlbnQgPSBleHBvcnRzLmNyZWF0ZUNvbW1hbmQgPSBleHBvcnRzLmNyZWF0ZVBsdWdpbiA9IHZvaWQgMDtcclxucmVxdWlyZShcIkBhYnJhaGFtL3JlZmxlY3Rpb25cIik7XHJcbi8qKlxyXG4gKiBDcmVhdGVzIGEgcGx1Z2luLlxyXG4gKlxyXG4gKiBQbHVnaW5zIGFyZSBzZWxmLWNvbnRhaW5lZCwgcmV1c2FibGUgbW9kdWxlcyB0aGF0IGNhbiBiZSBhZGRlZCB0byBhIFJvb20gb2JqZWN0LlxyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlUGx1Z2luKHRhcmdldCkge1xyXG4gICAgUmVmbGVjdC5kZWZpbmVNZXRhZGF0YSgnaGVyOnBsdWdpbicsIHRydWUsIHRhcmdldCk7XHJcbn1cclxuZXhwb3J0cy5jcmVhdGVQbHVnaW4gPSBjcmVhdGVQbHVnaW47XHJcbi8qKlxyXG4gKiBDcmVhdGVzIGEgY29tbWFuZCBmb3IgYSBwbHVnaW4uXHJcbiAqXHJcbiAqIFRoZSBuYW1lIG9mIHRoZSBmdW5jdGlvbiB3aWxsIGJlIHRoZSBuYW1lIG9mIHRoZSBjb21tYW5kLCBhbmQgdGhlIGZ1bmN0aW9uIGl0c2VsZiB3aWxsIGJlIHRoZSBgZnVuY2AgcHJvcGVydHkuXHJcbiAqXHJcbiAqIEBwYXJhbSBvcHRpb25zIENvbW1hbmQgb3B0aW9ucyAod2l0aG91dCBuYW1lIG9yIGZ1bmMgcHJvcGVydGllcykuXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVDb21tYW5kKG9wdGlvbnMpIHtcclxuICAgIHJldHVybiAodGFyZ2V0LCBrZXksIGRlc2NyaXB0b3IpID0+IHtcclxuICAgICAgICBjb25zdCBjb21tYW5kcyA9IFJlZmxlY3QuZ2V0TWV0YWRhdGEoJ2hlcjpjb21tYW5kcycsIHRhcmdldCk7XHJcbiAgICAgICAgY29uc3QgY29tbWFuZCA9IE9iamVjdC5hc3NpZ24oeyBuYW1lOiBrZXksIGZ1bmM6IGRlc2NyaXB0b3IudmFsdWUgfSwgb3B0aW9ucyk7XHJcbiAgICAgICAgaWYgKGNvbW1hbmRzKSB7XHJcbiAgICAgICAgICAgIGNvbW1hbmRzLnB1c2goY29tbWFuZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBSZWZsZWN0LmRlZmluZU1ldGFkYXRhKCdoZXI6Y29tbWFuZHMnLCBbY29tbWFuZF0sIHRhcmdldCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufVxyXG5leHBvcnRzLmNyZWF0ZUNvbW1hbmQgPSBjcmVhdGVDb21tYW5kO1xyXG4vKipcclxuICogQ3JlYXRlcyBhbiBldmVudCBmb3IgYSBwbHVnaW4uXHJcbiAqL1xyXG5jb25zdCBjcmVhdGVFdmVudCA9ICh0YXJnZXQsIGtleSwgZGVzY3JpcHRvcikgPT4ge1xyXG4gICAgY29uc3QgZXZlbnRzID0gUmVmbGVjdC5nZXRNZXRhZGF0YSgnaGVyOmV2ZW50cycsIHRhcmdldCk7XHJcbiAgICBjb25zdCBldmVudCA9IHsgbmFtZToga2V5LCBmdW5jOiBkZXNjcmlwdG9yLnZhbHVlIH07XHJcbiAgICBpZiAoZXZlbnRzKSB7XHJcbiAgICAgICAgZXZlbnRzLnB1c2goZXZlbnQpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgUmVmbGVjdC5kZWZpbmVNZXRhZGF0YSgnaGVyOmV2ZW50cycsIFtldmVudF0sIHRhcmdldCk7XHJcbiAgICB9XHJcbn07XHJcbmV4cG9ydHMuY3JlYXRlRXZlbnQgPSBjcmVhdGVFdmVudDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGx1Z2luLmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuUm9sZSA9IGV4cG9ydHMuQWRtaW5Sb2xlID0gdm9pZCAwO1xyXG5jb25zdCBHbG9iYWxfMSA9IHJlcXVpcmUoXCIuL0dsb2JhbFwiKTtcclxuY29uc3QgU2V0dGluZ3NfMSA9IHJlcXVpcmUoXCIuL1NldHRpbmdzXCIpO1xyXG5leHBvcnRzLkFkbWluUm9sZSA9IFwiYWRtaW5cIjtcclxuLyoqIENsYXNzIHJlcHJlc2VudGluZyBhIHBsYXllciByb2xlLiAqL1xyXG5jbGFzcyBSb2xlIHtcclxuICAgIGNvbnN0cnVjdG9yKG5hbWUpIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBXaGV0aGVyIHRoaXMgcm9sZSBpcyBhbiBhZG1pbiByb2xlIG9yIG5vdC5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmFkbWluID0gZmFsc2U7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhlIGNvbG9yIG9mIHRoaXMgcm9sZS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIFRoaXMgc2V0dGluZyBzZXJ2ZXMgb25seSBhcyB1c2VmdWwgaW5mb3JtYXRpb24gYW5kIGRvZXMgbm90aGluZyBieSBkZWZhdWx0LlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuY29sb3IgPSBHbG9iYWxfMS5Db2xvcnMuV2hpdGU7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhlIHByZWZpeCBvZiB0aGlzIHJvbGUgaW4gdGhlIGNoYXQuXHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiBUaGlzIHNldHRpbmcgc2VydmVzIG9ubHkgYXMgdXNlZnVsIGluZm9ybWF0aW9uIGFuZCBkb2VzIG5vdGhpbmcgYnkgZGVmYXVsdC5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLnByZWZpeCA9IFwiXCI7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogSWYgdGhpcyBpcyBzZXQgdHJ1ZSB0aGVuIHRoaXMgcm9sZSB3aWxsIG92ZXJyaWRlIGFsbCBwZXJtaXNzaW9uIHNldHRpbmdzLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMub3ZlcnJpZGUgPSBmYWxzZTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUaGUgcG9zaXRpb24gb2YgdGhlIHJvbGUgY29tcGFyZWQgdG8gb3RoZXIgcm9sZXMuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IDA7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQ3VzdG9tIHNldHRpbmdzIGZvciB0aGlzIHJvbGUuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5zZXR0aW5ncyA9IG5ldyBTZXR0aW5nc18xLlNldHRpbmdzKCk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZSAhPT0gbnVsbCAmJiBuYW1lICE9PSB2b2lkIDAgPyBuYW1lIDogXCJcIjtcclxuICAgIH1cclxuICAgIHNldE5hbWUobmFtZSkge1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcbiAgICBzZXRBZG1pbigpIHtcclxuICAgICAgICB0aGlzLmFkbWluID0gdHJ1ZTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuICAgIHNldENvbG9yKGNvbG9yKSB7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9IGNvbG9yO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG4gICAgc2V0UHJlZml4KHByZWZpeCkge1xyXG4gICAgICAgIHRoaXMucHJlZml4ID0gcHJlZml4O1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG4gICAgc2V0T3ZlcnJpZGUoKSB7XHJcbiAgICAgICAgdGhpcy5vdmVycmlkZSA9IHRydWU7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcbiAgICBzZXRQb3NpdGlvbihwb3NpdGlvbikge1xyXG4gICAgICAgIHRoaXMucG9zaXRpb24gPSBwb3NpdGlvbjtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxufVxyXG5leHBvcnRzLlJvbGUgPSBSb2xlO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Sb2xlLmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmV4cG9ydHMuUm9sZUxpc3QgPSB2b2lkIDA7XHJcbnJlcXVpcmUoXCIuL3R5cGVzXCIpO1xyXG4vKiogQ2xhc3MgcmVwcmVzZW50aW5nIGEgbGlzdCBvZiByb2xlcy4gKi9cclxuY2xhc3MgUm9sZUxpc3Qge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5hZG1pblJvbGVzID0gW107XHJcbiAgICAgICAgdGhpcy5wbGF5ZXJSb2xlcyA9IFtdO1xyXG4gICAgfVxyXG4gICAgZ2V0IHJvbGVzKCkge1xyXG4gICAgICAgIHJldHVybiBbLi4udGhpcy5hZG1pblJvbGVzLCAuLi50aGlzLnBsYXllclJvbGVzXTtcclxuICAgIH1cclxuICAgIGFkZChyb2xlKSB7XHJcbiAgICAgICAgaWYgKHJvbGUuYWRtaW4pIHtcclxuICAgICAgICAgICAgdGhpcy5hZG1pblJvbGVzLnB1c2gocm9sZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnBsYXllclJvbGVzLnB1c2gocm9sZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG4gICAgcmVtb3ZlKHJvbGUpIHtcclxuICAgICAgICBjb25zdCByb2xlTmFtZSA9IHR5cGVvZiByb2xlID09PSBcInN0cmluZ1wiID8gcm9sZSA6IHJvbGUubmFtZTtcclxuICAgICAgICB0aGlzLmFkbWluUm9sZXMgPSB0aGlzLmFkbWluUm9sZXMuZmlsdGVyKHIgPT4gci5uYW1lICE9PSByb2xlTmFtZSk7XHJcbiAgICAgICAgdGhpcy5wbGF5ZXJSb2xlcyA9IHRoaXMucGxheWVyUm9sZXMuZmlsdGVyKHIgPT4gci5uYW1lICE9PSByb2xlTmFtZSk7XHJcbiAgICB9XHJcbiAgICBnZXQocm9sZSkge1xyXG4gICAgICAgIGNvbnN0IHJvbGVOYW1lID0gdHlwZW9mIHJvbGUgPT09IFwic3RyaW5nXCIgPyByb2xlIDogcm9sZS5uYW1lO1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJvbGVzLmZpbmQociA9PiByLm5hbWUgPT09IHJvbGVOYW1lKTtcclxuICAgIH1cclxuICAgIGhhcyhyb2xlKSB7XHJcbiAgICAgICAgY29uc3Qgcm9sZU5hbWUgPSB0eXBlb2Ygcm9sZSA9PT0gXCJzdHJpbmdcIiA/IHJvbGUgOiByb2xlLm5hbWU7XHJcbiAgICAgICAgaWYgKHRoaXMucm9sZXMuZmluZChyID0+IHIubmFtZSA9PT0gcm9sZU5hbWUpKVxyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5Sb2xlTGlzdCA9IFJvbGVMaXN0O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Sb2xlTGlzdC5qcy5tYXAiLCJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xyXG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcclxufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBvW2syXSA9IG1ba107XHJcbn0pKTtcclxudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XHJcbn0pIDogZnVuY3Rpb24obywgdikge1xyXG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xyXG59KTtcclxudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XHJcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xyXG4gICAgdmFyIHJlc3VsdCA9IHt9O1xyXG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xyXG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbn07XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuZXhwb3J0cy5Sb29tID0gdm9pZCAwO1xyXG5yZXF1aXJlKFwiQGFicmFoYW0vcmVmbGVjdGlvblwiKTtcclxucmVxdWlyZShcIi4vdHlwZXNcIik7XHJcbmNvbnN0IExvZ2dlciA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9Mb2dnZXJcIikpO1xyXG5jb25zdCBQbGF5ZXJfMSA9IHJlcXVpcmUoXCIuL1BsYXllclwiKTtcclxuY29uc3QgQ29tbWFuZF8xID0gcmVxdWlyZShcIi4vQ29tbWFuZFwiKTtcclxuY29uc3QgRGlzY18xID0gcmVxdWlyZShcIi4vRGlzY1wiKTtcclxuY29uc3QgUGxheWVyTGlzdF8xID0gcmVxdWlyZShcIi4vUGxheWVyTGlzdFwiKTtcclxuY29uc3QgQ29tbWFuZExpc3RfMSA9IHJlcXVpcmUoXCIuL0NvbW1hbmRMaXN0XCIpO1xyXG5jb25zdCBDb21tYW5kQXJndW1lbnRfMSA9IHJlcXVpcmUoXCIuL0NvbW1hbmRBcmd1bWVudFwiKTtcclxuY29uc3QgQ29ubkhpc3RvcnkgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vQ29ubmVjdGlvbkhpc3RvcnlcIikpO1xyXG5jb25zdCBHbG9iYWxfMSA9IHJlcXVpcmUoXCIuL0dsb2JhbFwiKTtcclxuY29uc3QgU2V0dGluZ3NfMSA9IHJlcXVpcmUoXCIuL1NldHRpbmdzXCIpO1xyXG5jb25zdCBldmVudHNfMSA9IHJlcXVpcmUoXCJldmVudHNcIik7XHJcbi8qKiBDbGFzcyByZXByZXNlbnRpbmcgYSBIYXhiYWxsIHJvb20uICovXHJcbmNsYXNzIFJvb20ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBTdGFydHMgdGhlIHJvb20gYW5kIHN0b3JlcyBpdCBpbiB0aGUgd2luZG93IG9iamVjdC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcm9vbUNvbmZpZ1xyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihyb29tQ29uZmlnKSB7XHJcbiAgICAgICAgdmFyIF9hLCBfYjtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUaGUgbGlzdCBvZiBIYXhiYWxsIGRpc2NzLlxyXG4gICAgICAgICAqIEBwcml2YXRlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5fZGlzY3MgPSBbXTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUaGUgbGlzdCBvZiBwbHVnaW5zLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuX3BsdWdpbnMgPSBbXTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBDb250YWlucyBmbGFnIGNvbnN0YW50cyB0aGF0IGFyZSB1c2VkIGFzIGhlbHBlcnMgZm9yIHJlYWRpbmcgYW5kIHdyaXRpbmcgY29sbGlzaW9uIGZsYWdzLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuQ29sbGlzaW9uRmxhZ3MgPSB7XHJcbiAgICAgICAgICAgIGFsbDogNjMsXHJcbiAgICAgICAgICAgIGJhbGw6IDEsXHJcbiAgICAgICAgICAgIGJsdWU6IDQsXHJcbiAgICAgICAgICAgIGJsdWVLTzogMTYsXHJcbiAgICAgICAgICAgIGMwOiAyNjg0MzU0NTYsXHJcbiAgICAgICAgICAgIGMxOiA1MzY4NzA5MTIsXHJcbiAgICAgICAgICAgIGMyOiAxMDczNzQxODI0LFxyXG4gICAgICAgICAgICBjMzogLTIxNDc0ODM2NDgsXHJcbiAgICAgICAgICAgIGtpY2s6IDY0LFxyXG4gICAgICAgICAgICByZWQ6IDIsXHJcbiAgICAgICAgICAgIHJlZEtPOiA4LFxyXG4gICAgICAgICAgICBzY29yZTogMTI4LFxyXG4gICAgICAgICAgICB3YWxsOiAzMixcclxuICAgICAgICB9O1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFJvb20gY3VzdG9tIHNldHRpbmdzLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogVGhpcyBpcyB1c2VmdWwgaWYgeW91IHdhbnQgdG8gaGF2ZSBnbG9iYWwgdmFyaWFibGVzIChlc3BlY2lhbGx5IGluIHBsdWdpbnMpLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQGV4YW1wbGVcclxuICAgICAgICAgKiByb29tLnNldHRpbmdzLmNoYXRtdXRlZCA9IHRydWU7XHJcbiAgICAgICAgICpcclxuICAgICAgICAgKiByb29tLm9uUGxheWVyQ2hhdCA9IGZ1bmN0aW9uIChwbGF5ZXIsIG1lc3NhZ2UpIHtcclxuICAgICAgICAgKiAgaWYgKHJvb20uc2V0dGluZ3MuY2hhdG11dGVkKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICogfVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuc2V0dGluZ3MgPSBuZXcgU2V0dGluZ3NfMS5TZXR0aW5ncygpO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIE5vZGVKUyBldmVudCBlbWl0dGVyIGZvciB0aGUgaW1wbGVtZW50YXRpb24gb2YgY3VzdG9tIGV2ZW50cy5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmN1c3RvbUV2ZW50cyA9IG5ldyBldmVudHNfMS5FdmVudEVtaXR0ZXIoKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBXaGV0aGVyIHRvIHVzZSB0aGUgcm9vbSdzIG93biBleHRlbmRlZCBsb2dnZXIuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5sb2dnaW5nID0gdHJ1ZTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBNZXNzYWdlIHRocm93biB3aGVuIGEgcGxheWVyIHVzZXMgYSBjb21tYW5kIHdpdGhvdXQgaGF2aW5nIHBlcm1pc3Npb24gdG8gZG8gdGhhdC5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLl9pbnN1ZmZpY2llbnRQZXJtaXNzaW9uc01lc3NhZ2UgPSB7XHJcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiWW91J3JlIG5vdCBhbGxvd2VkIHRvIHVzZSB0aGlzIGNvbW1hbmQhXCIsXHJcbiAgICAgICAgICAgIGNvbG9yOiBHbG9iYWxfMS5Db2xvcnMuUmVkLFxyXG4gICAgICAgICAgICBzdHlsZTogR2xvYmFsXzEuQ2hhdFN0eWxlLkJvbGQsXHJcbiAgICAgICAgICAgIHNvdW5kOiBHbG9iYWxfMS5DaGF0U291bmRzLk5vdGlmaWNhdGlvblxyXG4gICAgICAgIH07XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogTWVzc2FnZSB0aHJvd24gd2hlbiBhIHBsYXllciB1c2VzIGEgY29tbWFuZCB0b28gZmFzdC5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLl9wbGF5ZXJDb21tYW5kQ29vbGRvd25NZXNzYWdlID0ge1xyXG4gICAgICAgICAgICBtZXNzYWdlOiBcIkRvbid0IHR5cGUgY29tbWFuZHMgdG9vIGZhc3QhXCIsXHJcbiAgICAgICAgICAgIGNvbG9yOiBHbG9iYWxfMS5Db2xvcnMuUmVkLFxyXG4gICAgICAgICAgICBzdHlsZTogR2xvYmFsXzEuQ2hhdFN0eWxlLkJvbGQsXHJcbiAgICAgICAgICAgIHNvdW5kOiBHbG9iYWxfMS5DaGF0U291bmRzLk5vdGlmaWNhdGlvblxyXG4gICAgICAgIH07XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhlIGRlZmF1bHQgcHJlZml4LlxyXG4gICAgICAgICAqIEBwcml2YXRlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5fZGVmYXVsdFByZWZpeCA9IFwiIVwiO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFdoZXRoZXIgdGhlIGdhbWUgaXMgcGF1c2VkIG9yIG5vdC5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLl9wYXVzZWQgPSBmYWxzZTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBHZXRzIGEgbWVzc2FnZSBjb21tYW5kIHN0cnVjdHVyZS5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIFRoZSBmaXJzdCBpdGVtIG9mIHRoZSBhcnJheSBpcyB0aGUgY29tbWFuZCBuYW1lLCB3aGlsZSB0aGUgcmVzdCBhcmUgdGhlIGFyZ3VtZW50cy5cclxuICAgICAgICAgKlxyXG4gICAgICAgICAqIEBwYXJhbSBtZXNzYWdlIFRoZSBwbGF5ZXIgbWVzc2FnZS5cclxuICAgICAgICAgKiBAcmV0dXJucyBUaGUgbWVzc2FnZSBzdHJ1Y3R1cmUuXHJcbiAgICAgICAgICogQHByaXZhdGVcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLl9kZXNjb25zdHJ1Y3RNZXNzYWdlID0gKG1lc3NhZ2UpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2Uuc2xpY2UodGhpcy5wcmVmaXgubGVuZ3RoKS50cmltKCkuc3BsaXQoLyArLyk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBSZXRyaWV2ZXMgdGhlIGNvbW1hbmQgbmFtZSBmcm9tIGEgbWVzc2FnZSBjb21tYW5kLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIG1lc3NhZ2UgVGhlIHBsYXllciBtZXNzYWdlLlxyXG4gICAgICAgICAqIEByZXR1cm5zIFRoZSBjb21tYW5kIG5hbWUuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5fZ2V0Q29tbWFuZE5hbWUgPSAobWVzc2FnZSkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZGVzY29uc3RydWN0TWVzc2FnZShtZXNzYWdlKVswXS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogUmV0cmlldmVzIHRoZSBjb21tYW5kIGFyZ3VtZW50cyBmcm9tIGEgbWVzc2FnZSBjb21tYW5kLlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICogQHBhcmFtIG1lc3NhZ2UgVGhlIHBsYXllciBtZXNzYWdlLlxyXG4gICAgICAgICAqIEByZXR1cm5zIFRoZSBjb21tYW5kIGFyZ3VtZW50cy5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLl9nZXRBcmd1bWVudHMgPSAobWVzc2FnZSkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZGVzY29uc3RydWN0TWVzc2FnZShtZXNzYWdlKS5zbGljZSgxKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmICh3aW5kb3dbXCJyb29tXCJdICE9PSB1bmRlZmluZWQpXHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBpbnN0YW50aWF0ZSB0d2ljZSFcIik7XHJcbiAgICAgICAgaWYgKHJvb21Db25maWcubm9QbGF5ZXIgPT0gbnVsbClcclxuICAgICAgICAgICAgcm9vbUNvbmZpZy5ub1BsYXllciA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5fcm9vbSA9IHdpbmRvdy5IQkluaXQocm9vbUNvbmZpZyk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gcm9vbUNvbmZpZy5yb29tTmFtZTtcclxuICAgICAgICB0aGlzLnBsYXllck5hbWUgPSByb29tQ29uZmlnLnBsYXllck5hbWU7XHJcbiAgICAgICAgdGhpcy5tYXhQbGF5ZXJzID0gcm9vbUNvbmZpZy5tYXhQbGF5ZXJzO1xyXG4gICAgICAgIHRoaXMuZ2VvID0gcm9vbUNvbmZpZy5nZW87XHJcbiAgICAgICAgdGhpcy50b2tlbiA9IHJvb21Db25maWcudG9rZW47XHJcbiAgICAgICAgdGhpcy5ub1BsYXllciA9IChfYSA9IHJvb21Db25maWcubm9QbGF5ZXIpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHRydWU7XHJcbiAgICAgICAgdGhpcy5fcGFzc3dvcmQgPSAoX2IgPSByb29tQ29uZmlnLnBhc3N3b3JkKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBudWxsO1xyXG4gICAgICAgIHRoaXMuX3BsYXllcnMgPSBuZXcgUGxheWVyTGlzdF8xLlBsYXllckxpc3QoKTtcclxuICAgICAgICB0aGlzLl9jb21tYW5kcyA9IG5ldyBDb21tYW5kTGlzdF8xLkNvbW1hbmRMaXN0KHRoaXMuX2RlZmF1bHRQcmVmaXgpO1xyXG4gICAgICAgIHRoaXMucHJlZml4ID0gdGhpcy5fZGVmYXVsdFByZWZpeDtcclxuICAgICAgICB0aGlzLl9zZXRBbGxFdmVudHMoKTtcclxuICAgICAgICB0aGlzLl9pbml0aWFsTWVzc2FnZSgpO1xyXG4gICAgICAgIHdpbmRvd1tcInJvb21cIl0gPSB0aGlzO1xyXG4gICAgICAgIHdpbmRvd1tcIkNvbG9yc1wiXSA9IEdsb2JhbF8xLkNvbG9ycztcclxuICAgICAgICB3aW5kb3dbXCJDaGF0U291bmRzXCJdID0gR2xvYmFsXzEuQ2hhdFNvdW5kcztcclxuICAgICAgICB3aW5kb3dbXCJDaGF0U3R5bGVcIl0gPSBHbG9iYWxfMS5DaGF0U3R5bGU7XHJcbiAgICAgICAgd2luZG93W1wiVGVhbXNcIl0gPSBHbG9iYWxfMS5UZWFtcztcclxuICAgICAgICB3aW5kb3dbXCJTdGFkaXVtc1wiXSA9IEdsb2JhbF8xLlN0YWRpdW1zO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBVcGRhdGVzIHRoZSBvblBsYXllckJhbm5lZCBhbmQgb25QbGF5ZXJLaWNrZWQgZXZlbnRzLlxyXG4gICAgICovXHJcbiAgICBfc2V0S2lja0V2ZW50KCkge1xyXG4gICAgICAgIHRoaXMuX3Jvb20ub25QbGF5ZXJLaWNrZWQgPSAoa2lja2VkUGxheWVyLCByZWFzb24sIGJhbiwgYnlQbGF5ZXIpID0+IHtcclxuICAgICAgICAgICAgaWYgKHRoaXMubG9nZ2luZykge1xyXG4gICAgICAgICAgICAgICAgTG9nZ2VyLmxvZyh7IG1lc3NhZ2U6IGAke2tpY2tlZFBsYXllci5uYW1lfSB3YXMgJHtiYW4gPyBcImJhbm5lZFwiIDogXCJraWNrZWRcIn0gJHtieVBsYXllciA/IGBieSAke2J5UGxheWVyLm5hbWV9IGAgOiBgYH0ke3JlYXNvbiA/IGAoJHtyZWFzb259KWAgOiBgYH1gLCBjb2xvcjogR2xvYmFsXzEuQ29sb3JzLkhheGJhbGwgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGJhbikge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcnVuRXZlbnQoXCJvblBsYXllckJhbm5lZFwiLCB0aGlzLl9vblBsYXllckJhbm5lZEZ1bmN0aW9uLCBraWNrZWRQbGF5ZXIsIHJlYXNvbiwgYnlQbGF5ZXIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcnVuRXZlbnQoXCJvblBsYXllcktpY2tlZFwiLCB0aGlzLl9vblBsYXllcktpY2tlZEZ1bmN0aW9uLCBraWNrZWRQbGF5ZXIsIHJlYXNvbiwgYnlQbGF5ZXIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU2V0IGFsbCBldmVudHMgdG8gYSBlbXB0eSBmdW5jdGlvbiBzbyB0aGUgY2hhbmdlcyBtYWRlIHRvIHRoZSBuYXRpdmUgZXZlbnRzIHdpbGwgd29yay5cclxuICAgICAqIEBwcml2YXRlXHJcbiAgICAgKi9cclxuICAgIF9zZXRBbGxFdmVudHMoKSB7XHJcbiAgICAgICAgdGhpcy5vbkdhbWVQYXVzZSA9ICgpID0+IHsgfTtcclxuICAgICAgICB0aGlzLm9uR2FtZVN0YXJ0ID0gKCkgPT4geyB9O1xyXG4gICAgICAgIHRoaXMub25HYW1lU3RvcCA9ICgpID0+IHsgfTtcclxuICAgICAgICB0aGlzLm9uR2FtZVRpY2sgPSAoKSA9PiB7IH07XHJcbiAgICAgICAgdGhpcy5vbkdhbWVVbnBhdXNlID0gKCkgPT4geyB9O1xyXG4gICAgICAgIHRoaXMub25LaWNrUmF0ZUxpbWl0U2V0ID0gKCkgPT4geyB9O1xyXG4gICAgICAgIHRoaXMub25QbGF5ZXJBY3Rpdml0eSA9ICgpID0+IHsgfTtcclxuICAgICAgICB0aGlzLm9uUGxheWVyQWRtaW5DaGFuZ2UgPSAoKSA9PiB7IH07XHJcbiAgICAgICAgdGhpcy5vblBsYXllckJhbGxLaWNrID0gKCkgPT4geyB9O1xyXG4gICAgICAgIHRoaXMub25QbGF5ZXJCYW5uZWQgPSAoKSA9PiB7IH07XHJcbiAgICAgICAgdGhpcy5vblBsYXllckNoYXQgPSAoKSA9PiB0cnVlO1xyXG4gICAgICAgIHRoaXMub25QbGF5ZXJKb2luID0gKCkgPT4geyB9O1xyXG4gICAgICAgIHRoaXMub25QbGF5ZXJLaWNrZWQgPSAoKSA9PiB7IH07XHJcbiAgICAgICAgdGhpcy5vblBsYXllckxlYXZlID0gKCkgPT4geyB9O1xyXG4gICAgICAgIHRoaXMub25QbGF5ZXJUZWFtQ2hhbmdlID0gKCkgPT4geyB9O1xyXG4gICAgICAgIHRoaXMub25Qb3NpdGlvbnNSZXNldCA9ICgpID0+IHsgfTtcclxuICAgICAgICB0aGlzLm9uUm9vbUxpbmsgPSAoKSA9PiB7IH07XHJcbiAgICAgICAgdGhpcy5vblN0YWRpdW1DaGFuZ2UgPSAoKSA9PiB7IH07XHJcbiAgICAgICAgdGhpcy5vblRlYW1Hb2FsID0gKCkgPT4geyB9O1xyXG4gICAgICAgIHRoaXMub25UZWFtVmljdG9yeSA9ICgpID0+IHsgfTtcclxuICAgICAgICB0aGlzLm9uUGxheWVyR2VvTG9jYXRpb25GZXRjaCA9ICgpID0+IHsgfTtcclxuICAgICAgICB0aGlzLm9uUGxheWVyUnVuQ29tbWFuZCA9ICgpID0+IHsgfTtcclxuICAgIH1cclxuICAgIF9ydW5FdmVudChuYW1lLCBmdW5jLCAuLi5hcmdzKSB7XHJcbiAgICAgICAgdGhpcy5fcGx1Z2lucy5mb3JFYWNoKHBsdWdpbiA9PiB7XHJcbiAgICAgICAgICAgIHBsdWdpbi5ldmVudHMuZm9yRWFjaChldmVudCA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQubmFtZSA9PT0gbmFtZSlcclxuICAgICAgICAgICAgICAgICAgICBldmVudC5mdW5jKC4uLmFyZ3MpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBmdW5jKC4uLmFyZ3MpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTZW5kcyBhbiBpbmZvcm1hdGl2ZSBtZXNzYWdlLlxyXG4gICAgICpcclxuICAgICAqIFRoaXMgbWV0aG9kIGlzIGNhbGxlZCBvbmNlIHdoZW4gdGhlIHJvb20gaXMgc3RhcnRlZC5cclxuICAgICAqL1xyXG4gICAgX2luaXRpYWxNZXNzYWdlKCkge1xyXG4gICAgICAgIExvZ2dlci5hbm9ueW1vdXMoXCIlY0hheGJhbGwgRXh0ZW5kZWQgUm9vbVwiLCBcImNvbG9yOiMyMzNFODI7IGRpc3BsYXk6IGJsb2NrO2ZvbnQtd2VpZ2h0OmJvbGQ7IGZvbnQtc2l6ZTozOHB4OyBiYWNrZ3JvdW5kOiNmZmY7XCIpO1xyXG4gICAgICAgIExvZ2dlci5hbm9ueW1vdXMoXCIlY0EgYmV0dGVyIEFQSSBmb3IgSGF4YmFsbFwiLCBcImNvbG9yOiMyMjI7IGZvbnQtZmFtaWx5OidVYnVudHUnOyBmb250LXdlaWdodDoxMDA7IGZvbnQtc2l6ZToyNHB4OyBiYWNrZ3JvdW5kOiNmZmY7XCIpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBFdmVudCBjYWxsZWQgd2hlbiBhIHBsYXllciBraWNrcyB0aGUgYmFsbC5cclxuICAgICAqXHJcbiAgICAgKiBAZXZlbnRcclxuICAgICAqL1xyXG4gICAgc2V0IG9uUGxheWVyQmFsbEtpY2soZnVuYykge1xyXG4gICAgICAgIHRoaXMuX3Jvb20ub25QbGF5ZXJCYWxsS2ljayA9IChwKSA9PiB0aGlzLl9ydW5FdmVudChcIm9uUGxheWVyQmFsbEtpY2tcIiwgZnVuYywgdGhpcy5wbGF5ZXJzW3AuaWRdKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRXZlbnQgY2FsbGVkIHdoZW4gYSBwbGF5ZXIgaXMga2lja2VkIGZyb20gdGhlIHJvb20uXHJcbiAgICAgKlxyXG4gICAgICogVGhpcyBldmVudCBpcyBhbHdheXMgY2FsbGVkIGFmdGVyIHRoZSBvblBsYXllckxlYXZlIGV2ZW50LlxyXG4gICAgICpcclxuICAgICAqICoqV2FybmluZzogYmFucyBoYXZlIGJlZW4gbW92ZWQgdG8gb25QbGF5ZXJCYW5uZWQuKipcclxuICAgICAqXHJcbiAgICAgKiBAZXZlbnRcclxuICAgICAqL1xyXG4gICAgc2V0IG9uUGxheWVyS2lja2VkKGZ1bmMpIHtcclxuICAgICAgICB0aGlzLl9vblBsYXllcktpY2tlZEZ1bmN0aW9uID0gZnVuYztcclxuICAgICAgICB0aGlzLl9zZXRLaWNrRXZlbnQoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRXZlbnQgY2FsbGVkIHdoZW4gYSBwbGF5ZXIgaXMgYmFubmVkIGZyb20gdGhlIHJvb20uXHJcbiAgICAgKlxyXG4gICAgICogVGhpcyBldmVudCBpcyBhbHdheXMgY2FsbGVkIGFmdGVyIHRoZSBvblBsYXllckxlYXZlIGV2ZW50LlxyXG4gICAgICpcclxuICAgICAqIEBldmVudFxyXG4gICAgICovXHJcbiAgICBzZXQgb25QbGF5ZXJCYW5uZWQoZnVuYykge1xyXG4gICAgICAgIHRoaXMuX29uUGxheWVyQmFubmVkRnVuY3Rpb24gPSBmdW5jO1xyXG4gICAgICAgIHRoaXMuX3NldEtpY2tFdmVudCgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBFdmVudCBjYWxsZWQgd2hlbiB0aGUgZ2FtZSB0aWNrcyAoNjAgdGlja3MgcGVyIHNlY29uZCkuXHJcbiAgICAgKlxyXG4gICAgICogVGhpcyBldmVudCB3aWxsIG5vdCBjYWxsZWQgaWYgbm8gZ2FtZSBpcyBpbiBwcm9ncmVzcyBvciB0aGUgZ2FtZSBpcyBwYXVzZWQuXHJcbiAgICAgKlxyXG4gICAgICogQGV2ZW50XHJcbiAgICAgKi9cclxuICAgIHNldCBvbkdhbWVUaWNrKGZ1bmMpIHtcclxuICAgICAgICB0aGlzLl9yb29tLm9uR2FtZVRpY2sgPSAoKSA9PiB0aGlzLl9ydW5FdmVudChcIm9uR2FtZVRpY2tcIiwgZnVuYyk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEV2ZW50IGNhbGxlZCB3aGVuIGEgdGVhbSBzY29yZXMgYSBnb2FsLlxyXG4gICAgICpcclxuICAgICAqIEBldmVudFxyXG4gICAgICovXHJcbiAgICBzZXQgb25UZWFtR29hbChmdW5jKSB7XHJcbiAgICAgICAgdGhpcy5fcm9vbS5vblRlYW1Hb2FsID0gKHRlYW0pID0+IHRoaXMuX3J1bkV2ZW50KFwib25UZWFtR29hbFwiLCBmdW5jLCB0ZWFtKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRXZlbnQgY2FsbGVkIHdoZW4gdGhlIGRpc2NzJyBwb3NpdGlvbnMgYXJlIHJlc2V0IGFmdGVyIGEgZ29hbC5cclxuICAgICAqXHJcbiAgICAgKiBAZXZlbnRcclxuICAgICAqL1xyXG4gICAgc2V0IG9uUG9zaXRpb25zUmVzZXQoZnVuYykge1xyXG4gICAgICAgIHRoaXMuX3Jvb20ub25Qb3NpdGlvbnNSZXNldCA9ICgpID0+IHRoaXMuX3J1bkV2ZW50KFwib25Qb3NpdGlvbnNSZXNldFwiLCBmdW5jKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRXZlbnQgY2FsbGVkIHdoZW4gYSBwbGF5ZXIgZ2l2ZXMgc2lnbnMgb2YgYWN0aXZpdHksIHN1Y2ggYXMgcHJlc3NpbmcgYSBrZXkuXHJcbiAgICAgKlxyXG4gICAgICogVGhpcyBldmVudCBpcyB1c2VmdWwgZm9yIGRldGVjdGluZyBpbmFjdGl2ZSBwbGF5ZXJzLlxyXG4gICAgICpcclxuICAgICAqIEBldmVudFxyXG4gICAgICovXHJcbiAgICBzZXQgb25QbGF5ZXJBY3Rpdml0eShmdW5jKSB7XHJcbiAgICAgICAgdGhpcy5fcm9vbS5vblBsYXllckFjdGl2aXR5ID0gKHApID0+IHRoaXMuX3J1bkV2ZW50KFwib25QbGF5ZXJBY3Rpdml0eVwiLCBmdW5jLCB0aGlzLnBsYXllcnNbcC5pZF0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBFdmVudCBjYWxsZWQgd2hlbiBhIHBsYXllciBnZXRzIHRoZSByb29tJ3MgbGluay5cclxuICAgICAqXHJcbiAgICAgKiBAZXZlbnRcclxuICAgICAqL1xyXG4gICAgc2V0IG9uUm9vbUxpbmsoZnVuYykge1xyXG4gICAgICAgIHRoaXMuX3Jvb20ub25Sb29tTGluayA9IChsaW5rKSA9PiB0aGlzLl9ydW5FdmVudChcIm9uUm9vbUxpbmtcIiwgZnVuYywgbGluayk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEV2ZW50IGNhbGxlZCB3aGVuIHRoZSBraWNrIHJhdGUgaXMgc2V0LlxyXG4gICAgICpcclxuICAgICAqIEBldmVudFxyXG4gICAgICovXHJcbiAgICBzZXQgb25LaWNrUmF0ZUxpbWl0U2V0KGZ1bmMpIHtcclxuICAgICAgICB0aGlzLl9yb29tLm9uS2lja1JhdGVMaW1pdFNldCA9IChtLCByLCBiLCBiUCkgPT4gdGhpcy5fcnVuRXZlbnQoXCJvbktpY2tSYXRlTGltaXRTZXRcIiwgZnVuYywgbSwgciwgYiwgdGhpcy5wbGF5ZXJzW2JQID09PSBudWxsIHx8IGJQID09PSB2b2lkIDAgPyB2b2lkIDAgOiBiUC5pZF0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBFdmVudCBjYWxsZWQgd2hlbiBhIHBsYXllciBqb2lucyB0aGUgcm9vbS5cclxuICAgICAqXHJcbiAgICAgKiBgZ2VvbG9jYXRpb25gIGlzIG5vdCBhdmFpbGFibGUgaGVyZSBhbmQgd2lsbCByZXR1cm4gYHVuZGVmaW5lZGAuIFVzZSB0aGUgYG9uUGxheWVyR2VvTG9jYXRpb25GZXRjaGAgZXZlbnQgaW5zdGVhZC5cclxuICAgICAqXHJcbiAgICAgKiBAZXZlbnRcclxuICAgICAqL1xyXG4gICAgc2V0IG9uUGxheWVySm9pbihmdW5jKSB7XHJcbiAgICAgICAgdGhpcy5fcm9vbS5vblBsYXllckpvaW4gPSAocCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBwbGF5ZXIgPSBuZXcgUGxheWVyXzEuUGxheWVyKHRoaXMsIHApO1xyXG4gICAgICAgICAgICB0aGlzLnBsYXllcnMuYWRkKHBsYXllcik7XHJcbiAgICAgICAgICAgIHBsYXllci5mZXRjaEdlb0xvY2F0aW9uKCkudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBwbGF5ZXJJbmZvID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIGlkOiBwbGF5ZXIuaWQsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0aDogcGxheWVyLmF1dGgsXHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogcGxheWVyLm5hbWUsXHJcbiAgICAgICAgICAgICAgICAgICAgam9pbmVkQXQ6IG5ldyBEYXRlKERhdGUubm93KCkpXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgQ29ubkhpc3RvcnkuZ2V0KHBsYXllci5pcCkudGhlbihoaXN0b3J5ID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaGlzdG9yeSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5LnBsYXllcnMucHVzaChwbGF5ZXJJbmZvKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29ubkhpc3Rvcnkuc2V0KGhpc3RvcnkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgQ29ubkhpc3Rvcnkuc2V0KHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlwOiBwbGF5ZXIuaXAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZW86IHBsYXllci5nZW9sb2NhdGlvbixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllcnM6IFtwbGF5ZXJJbmZvXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX29uUGxheWVyR2VvTG9jYXRpb25GZXRjaEZ1bmN0aW9uKHBsYXllcik7XHJcbiAgICAgICAgICAgIH0pLmNhdGNoKGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIlVuYWJsZSB0byBmZXRjaCBwbGF5ZXIncyBnZW9sb2NhdGlvblwiLCBlKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmxvZ2dpbmcpIHtcclxuICAgICAgICAgICAgICAgIExvZ2dlci5sb2coeyBtZXNzYWdlOiBgJHtwbGF5ZXIubmFtZX0gaGFzIGpvaW5lZGAsIGNvbG9yOiBHbG9iYWxfMS5Db2xvcnMuSGF4YmFsbCB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLl9ydW5FdmVudChcIm9uUGxheWVySm9pblwiLCBmdW5jLCBwbGF5ZXIpO1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEV2ZW50IGNhbGxlZCB3aGVuIGEgcGxheWVyIGxlYXZlcyB0aGUgcm9vbS5cclxuICAgICAqXHJcbiAgICAgKiBAZXZlbnRcclxuICAgICAqL1xyXG4gICAgc2V0IG9uUGxheWVyTGVhdmUoZnVuYykge1xyXG4gICAgICAgIHRoaXMuX3Jvb20ub25QbGF5ZXJMZWF2ZSA9IChwKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHBsYXllciA9IHRoaXMucGxheWVyc1twLmlkXTtcclxuICAgICAgICAgICAgdGhpcy5wbGF5ZXJzLnJlbW92ZShwbGF5ZXIpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5sb2dnaW5nKSB7XHJcbiAgICAgICAgICAgICAgICBMb2dnZXIubG9nKHsgbWVzc2FnZTogYCR7cGxheWVyLm5hbWV9IGhhcyBsZWZ0YCwgY29sb3I6IEdsb2JhbF8xLkNvbG9ycy5IYXhiYWxsIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuX3J1bkV2ZW50KFwib25QbGF5ZXJMZWF2ZVwiLCBmdW5jLCBwbGF5ZXIpO1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEV2ZW50IGNhbGxlZCB3aGVuIGEgdGVhbSB3aW5zIHRoZSBnYW1lLlxyXG4gICAgICpcclxuICAgICAqIEBldmVudFxyXG4gICAgICovXHJcbiAgICBzZXQgb25UZWFtVmljdG9yeShmdW5jKSB7XHJcbiAgICAgICAgdGhpcy5fcm9vbS5vblRlYW1WaWN0b3J5ID0gKHNjb3JlcykgPT4ge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5sb2dnaW5nKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB0ZWFtV29uID0gc2NvcmVzLnJlZCA+IHNjb3Jlcy5ibHVlID8gXCJSZWRcIiA6IFwiQmx1ZVwiO1xyXG4gICAgICAgICAgICAgICAgTG9nZ2VyLmxvZyh7IG1lc3NhZ2U6IGAke3RlYW1Xb259IHRlYW0gd29uIHRoZSBtYXRjaGAsIGNvbG9yOiBHbG9iYWxfMS5Db2xvcnMuSGF4YmFsbCB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLl9ydW5FdmVudChcIm9uVGVhbVZpY3RvcnlcIiwgZnVuYywgc2NvcmVzKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBFdmVudCBjYWxsZWQgd2hlbiBhIHBsYXllciBzZW5kcyBhIG1lc3NhZ2UuXHJcbiAgICAgKlxyXG4gICAgICogSWYgdGhlIGV2ZW50IGZ1bmN0aW9uIHJldHVybnMgYGZhbHNlYCB0aGUgbWVzc2FnZSB3aWxsIG5vdCBiZSBzZW50LlxyXG4gICAgICpcclxuICAgICAqIEBldmVudFxyXG4gICAgICovXHJcbiAgICBzZXQgb25QbGF5ZXJDaGF0KGZ1bmMpIHtcclxuICAgICAgICB0aGlzLl9yb29tLm9uUGxheWVyQ2hhdCA9IChwLCBtc2cpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcGxheWVyID0gdGhpcy5wbGF5ZXJzW3AuaWRdO1xyXG4gICAgICAgICAgICBjb25zdCBjb21tYW5kID0gdGhpcy5fY29tbWFuZHMuZ2V0KHRoaXMuX2dldENvbW1hbmROYW1lKG1zZykpO1xyXG4gICAgICAgICAgICBsZXQgY29tbWFuZFJ1biA9IG51bGw7XHJcbiAgICAgICAgICAgIGlmIChtc2dbMF0gPT09IHRoaXMucHJlZml4ICYmIGNvbW1hbmQgJiYgcGxheWVyLmNhblVzZUNvbW1hbmRzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXBsYXllci5jYW5SdW5Db21tYW5kc0Nvb2xkb3duKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBwbGF5ZXIucmVwbHkodGhpcy5fcGxheWVyQ29tbWFuZENvb2xkb3duTWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKCFjb21tYW5kLmlzQWxsb3dlZChwbGF5ZXIpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGxheWVyLnJlcGx5KHRoaXMuX2luc3VmZmljaWVudFBlcm1pc3Npb25zTWVzc2FnZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY29uc3QgYXJncyA9IHRoaXMuX2dldEFyZ3VtZW50cyhtc2cpLm1hcChhcmcgPT4gbmV3IENvbW1hbmRBcmd1bWVudF8xLkNvbW1hbmRBcmd1bWVudChhcmcpKTtcclxuICAgICAgICAgICAgICAgIGNvbW1hbmRSdW4gPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXhlY0luZm8gPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXllcjogcGxheWVyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhdDogbmV3IERhdGUoRGF0ZS5ub3coKSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG1zZyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcm9vbTogdGhpcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXJndW1lbnRzOiBhcmdzXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICBjb21tYW5kLnJ1bihleGVjSW5mbyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fb25QbGF5ZXJSdW5Db21tYW5kRnVuY3Rpb24ocGxheWVyLCBjb21tYW5kLCBleGVjSW5mbyk7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgcGxheWVyLnVwZGF0ZUNvb2xkb3duKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoY29tbWFuZC5kZWxldGVNZXNzYWdlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29tbWFuZFJ1bigpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmb3IgKGNvbnN0IHBsdWdpbiBvZiB0aGlzLl9wbHVnaW5zKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIHBsdWdpbi5ldmVudHMpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZXZlbnQubmFtZSA9PT0gXCJvblBsYXllckNoYXRcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXZlbnQuZnVuYyhwbGF5ZXIsIG1zZykgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29tbWFuZFJ1bilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21tYW5kUnVuKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGZ1bmMocGxheWVyLCBtc2cpID09PSBmYWxzZSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvbW1hbmRSdW4pXHJcbiAgICAgICAgICAgICAgICAgICAgY29tbWFuZFJ1bigpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmxvZ2dpbmcpIHtcclxuICAgICAgICAgICAgICAgIGlmIChwbGF5ZXIuYWRtaW4pIHtcclxuICAgICAgICAgICAgICAgICAgICBMb2dnZXIuYWRtaW4oeyBtZXNzYWdlOiBtc2cgfSwgcGxheWVyKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIExvZ2dlci5jaGF0KHsgbWVzc2FnZTogbXNnIH0sIHBsYXllcik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGNvbW1hbmRSdW4pXHJcbiAgICAgICAgICAgICAgICBjb21tYW5kUnVuKCk7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRXZlbnQgY2FsbGVkIHdoZW4gdGhlIGEgZ2FtZSBpcyBzdGFydGVkLlxyXG4gICAgICpcclxuICAgICAqIGBieVBsYXllcmAgd2lsbCBiZSBudWxsIGlmIHRoZSBnYW1lIGlzIHN0YXJ0ZWQgcHJvZ3JhbWF0aWNhbGx5IChzdWNoIGFzIHRoZSBgc3RhcnQoKWAgbWV0aG9kKS5cclxuICAgICAqXHJcbiAgICAgKiBAZXZlbnRcclxuICAgICAqL1xyXG4gICAgc2V0IG9uR2FtZVN0YXJ0KGZ1bmMpIHtcclxuICAgICAgICB0aGlzLl9yb29tLm9uR2FtZVN0YXJ0ID0gKHApID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcGxheWVyID0gdGhpcy5wbGF5ZXJzW3AgPT09IG51bGwgfHwgcCA9PT0gdm9pZCAwID8gdm9pZCAwIDogcC5pZF07XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmxvZ2dpbmcpXHJcbiAgICAgICAgICAgICAgICBMb2dnZXIubG9nKHsgbWVzc2FnZTogYEdhbWUgc3RhcnRlZCAke3BsYXllciA/IGBieSAke3BsYXllci5uYW1lfWAgOiBgYH1gLCBjb2xvcjogR2xvYmFsXzEuQ29sb3JzLkhheGJhbGwgfSk7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5kaXNjQ291bnQgLSB0aGlzLnBsYXllcnMudGVhbXMoKS5zaXplOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2Rpc2NzLnB1c2gobmV3IERpc2NfMS5EaXNjKHRoaXMsIGkpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLl9ydW5FdmVudChcIm9uR2FtZVN0YXJ0XCIsIGZ1bmMsIHBsYXllcik7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRXZlbnQgY2FsbGVkIHdoZW4gdGhlIGdhbWUgaXMgc3RvcHBlZC5cclxuICAgICAqXHJcbiAgICAgKiBgYnlQbGF5ZXJgIHdpbGwgYmUgbnVsbCBpZiB0aGUgZ2FtZSBpcyBzdGFydGVkIHByb2dyYW1hdGljYWxseSAoc3VjaCBhcyB0aGUgYHN0b3AoKWAgbWV0aG9kKS5cclxuICAgICAqXHJcbiAgICAgKiBAZXZlbnRcclxuICAgICAqL1xyXG4gICAgc2V0IG9uR2FtZVN0b3AoZnVuYykge1xyXG4gICAgICAgIHRoaXMuX3Jvb20ub25HYW1lU3RvcCA9IChiUCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9wYXVzZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgY29uc3QgcGxheWVyID0gdGhpcy5wbGF5ZXJzW2JQID09PSBudWxsIHx8IGJQID09PSB2b2lkIDAgPyB2b2lkIDAgOiBiUC5pZF07XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmxvZ2dpbmcpXHJcbiAgICAgICAgICAgICAgICBMb2dnZXIubG9nKHsgbWVzc2FnZTogYEdhbWUgc3RvcHBlZCAke3BsYXllciA/IGBieSAke3BsYXllci5uYW1lfWAgOiBgYH1gLCBjb2xvcjogR2xvYmFsXzEuQ29sb3JzLkhheGJhbGwgfSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2Rpc2NzID0gW107XHJcbiAgICAgICAgICAgIHRoaXMuX3J1bkV2ZW50KFwib25HYW1lU3RvcFwiLCBmdW5jLCBwbGF5ZXIpO1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEV2ZW50IGNhbGxlZCB3aGVuIGEgcGxheWVyJ3MgYWRtaW4gc3RhdHVzIGlzIGNoYW5nZWQuXHJcbiAgICAgKlxyXG4gICAgICogYGJ5UGxheWVyYCB3aWxsIGJlIG51bGwgaWYgdGhlIHBsYXllcidzIGFkbWluIHN0YXR1cyBpcyBjaGFuZ2VkIHByb2dyYW1hdGljYWxseSAoc3VjaCBhcyB0aGUgYHBsYXllci5hZG1pbmAgcHJvcGVydHkpLlxyXG4gICAgICpcclxuICAgICAqIEBldmVudFxyXG4gICAgICovXHJcbiAgICBzZXQgb25QbGF5ZXJBZG1pbkNoYW5nZShmdW5jKSB7XHJcbiAgICAgICAgdGhpcy5fcm9vbS5vblBsYXllckFkbWluQ2hhbmdlID0gKGNQLCBiUCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBjaGFuZ2VkUGxheWVyID0gdGhpcy5wbGF5ZXJzW2NQLmlkXTtcclxuICAgICAgICAgICAgY29uc3QgYnlQbGF5ZXIgPSB0aGlzLnBsYXllcnNbYlAgPT09IG51bGwgfHwgYlAgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGJQLmlkXTtcclxuICAgICAgICAgICAgaWYgKHRoaXMubG9nZ2luZykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGNoYW5nZWRQbGF5ZXIuYWRtaW4pIHtcclxuICAgICAgICAgICAgICAgICAgICBMb2dnZXIubG9nKHsgbWVzc2FnZTogYCR7Y2hhbmdlZFBsYXllci5uYW1lfSB3YXMgZ2l2ZW4gYWRtaW4gcmlnaHRzICR7YnlQbGF5ZXIgPyBgYnkgJHtieVBsYXllci5uYW1lfWAgOiBgYH1gLCBjb2xvcjogR2xvYmFsXzEuQ29sb3JzLkhheGJhbGwgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBMb2dnZXIubG9nKHsgbWVzc2FnZTogYCR7Y2hhbmdlZFBsYXllci5uYW1lfSdzIGFkbWluIHJpZ2h0cyB3ZXJlIHRha2VuIGF3YXkgJHtieVBsYXllciA/IGBieSAke2J5UGxheWVyLm5hbWV9YCA6IGBgfWAsIGNvbG9yOiBHbG9iYWxfMS5Db2xvcnMuSGF4YmFsbCB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLl9ydW5FdmVudChcIm9uUGxheWVyQWRtaW5DaGFuZ2VcIiwgZnVuYywgY2hhbmdlZFBsYXllciwgYnlQbGF5ZXIpO1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEV2ZW50IGNhbGxlZCB3aGVuIGEgcGxheWVyIGlzIG1vdmVkIHRvIGFub3RoZXIgdGVhbS5cclxuICAgICAqXHJcbiAgICAgKiBgYnlQbGF5ZXJgIHdpbGwgYmUgbnVsbCBpZiB0aGUgcGxheWVyIGlzIG1vdmVkIHByb2dyYW1hdGljYWxseSAoc3VjaCBhcyB0aGUgYHBsYXllci50ZWFtYCBwcm9wZXJ0eSkuXHJcbiAgICAgKlxyXG4gICAgICogQGV2ZW50XHJcbiAgICAgKi9cclxuICAgIHNldCBvblBsYXllclRlYW1DaGFuZ2UoZnVuYykge1xyXG4gICAgICAgIHRoaXMuX3Jvb20ub25QbGF5ZXJUZWFtQ2hhbmdlID0gKGNQLCBiUCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBjaGFuZ2VkUGxheWVyID0gdGhpcy5wbGF5ZXJzW2NQLmlkXTtcclxuICAgICAgICAgICAgY29uc3QgYnlQbGF5ZXIgPSB0aGlzLnBsYXllcnNbYlAgPT09IG51bGwgfHwgYlAgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGJQLmlkXTtcclxuICAgICAgICAgICAgaWYgKHRoaXMubG9nZ2luZykge1xyXG4gICAgICAgICAgICAgICAgbGV0IHRlYW0gPSBcIlwiO1xyXG4gICAgICAgICAgICAgICAgLyogVE9ETzogRmlsdGVyIGRpc2MgKi9cclxuICAgICAgICAgICAgICAgIGlmIChjaGFuZ2VkUGxheWVyLnRlYW0gPT09IEdsb2JhbF8xLlRlYW1zLlJlZClcclxuICAgICAgICAgICAgICAgICAgICB0ZWFtID0gXCJSZWRcIjtcclxuICAgICAgICAgICAgICAgIGlmIChjaGFuZ2VkUGxheWVyLnRlYW0gPT09IEdsb2JhbF8xLlRlYW1zLkJsdWUpXHJcbiAgICAgICAgICAgICAgICAgICAgdGVhbSA9IFwiQmx1ZVwiO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNoYW5nZWRQbGF5ZXIudGVhbSA9PT0gR2xvYmFsXzEuVGVhbXMuU3BlY3RhdG9ycylcclxuICAgICAgICAgICAgICAgICAgICB0ZWFtID0gXCJTcGVjdGF0b3JzXCI7XHJcbiAgICAgICAgICAgICAgICBMb2dnZXIubG9nKHsgbWVzc2FnZTogYCR7Y2hhbmdlZFBsYXllci5uYW1lfSB3YXMgbW92ZWQgdG8gJHt0ZWFtfSAke2J5UGxheWVyID8gYGJ5ICR7YnlQbGF5ZXIubmFtZX1gIDogYGB9YCwgY29sb3I6IEdsb2JhbF8xLkNvbG9ycy5IYXhiYWxsIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuX3J1bkV2ZW50KFwib25QbGF5ZXJUZWFtQ2hhbmdlXCIsIGZ1bmMsIGNoYW5nZWRQbGF5ZXIsIGJ5UGxheWVyKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBFdmVudCBjYWxsZWQgd2hlbiB0aGUgZ2FtZSBpcyBwYXVzZWQuXHJcbiAgICAgKlxyXG4gICAgICogYGJ5UGxheWVyYCB3aWxsIGJlIG51bGwgaWYgdGhlIGdhbWUgaXMgcGF1c2VkIHByb2dyYW1hdGljYWxseSAoc3VjaCBhcyB0aGUgYHBhdXNlKClgIG1ldGhvZCkuXHJcbiAgICAgKlxyXG4gICAgICogQGV2ZW50XHJcbiAgICAgKi9cclxuICAgIHNldCBvbkdhbWVQYXVzZShmdW5jKSB7XHJcbiAgICAgICAgdGhpcy5fcm9vbS5vbkdhbWVQYXVzZSA9IChiUCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9wYXVzZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICBjb25zdCBieVBsYXllciA9IHRoaXMucGxheWVyc1tiUCA9PT0gbnVsbCB8fCBiUCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYlAuaWRdO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5sb2dnaW5nKSB7XHJcbiAgICAgICAgICAgICAgICBMb2dnZXIubG9nKHsgbWVzc2FnZTogYEdhbWUgcGF1c2VkICR7YnlQbGF5ZXIgPyBgYnkgJHtieVBsYXllci5uYW1lfWAgOiBgYH1gLCBjb2xvcjogR2xvYmFsXzEuQ29sb3JzLkhheGJhbGwgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5fcnVuRXZlbnQoXCJvbkdhbWVQYXVzZVwiLCBmdW5jLCBieVBsYXllcik7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRXZlbnQgY2FsbGVkIHdoZW4gdGhlIGdhbWUgaXMgdW5wYXVzZWQuXHJcbiAgICAgKlxyXG4gICAgICogYGJ5UGxheWVyYCB3aWxsIGJlIG51bGwgaWYgdGhlIGdhbWUgaXMgdW5wYXVzZWQgcHJvZ3JhbWF0aWNhbGx5IChzdWNoIGFzIHRoZSBgcGF1c2UoKWAgbWV0aG9kKS5cclxuICAgICAqXHJcbiAgICAgKiBAZXZlbnRcclxuICAgICAqL1xyXG4gICAgc2V0IG9uR2FtZVVucGF1c2UoZnVuYykge1xyXG4gICAgICAgIHRoaXMuX3Jvb20ub25HYW1lVW5wYXVzZSA9IChiUCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9wYXVzZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5fcnVuRXZlbnQoXCJvbkdhbWVVbnBhdXNlXCIsIGZ1bmMsIHRoaXMucGxheWVyc1tiUCA9PT0gbnVsbCB8fCBiUCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYlAuaWRdKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBFdmVudCBjYWxsZWQgd2hlbiB0aGUgcm9vbSBzdGFkaXVtIGlzIGNoYW5nZWQuXHJcbiAgICAgKlxyXG4gICAgICogYGJ5UGxheWVyYCB3aWxsIGJlIG51bGwgaWYgdGhlIHN0YWRpdW0gaXMgY2hhbmdlZCBwcm9ncmFtYXRpY2FsbHkgKHN1Y2ggYXMgdGhlIGBzZXRTdGFkaXVtKClgIG1ldGhvZCkuXHJcbiAgICAgKlxyXG4gICAgICogQGV2ZW50XHJcbiAgICAgKi9cclxuICAgIHNldCBvblN0YWRpdW1DaGFuZ2UoZnVuYykge1xyXG4gICAgICAgIHRoaXMuX3Jvb20ub25TdGFkaXVtQ2hhbmdlID0gKG5ld1N0YWRpdW1OYW1lLCBiUCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBieVBsYXllciA9IHRoaXMucGxheWVyc1tiUCA9PT0gbnVsbCB8fCBiUCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYlAuaWRdO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5sb2dnaW5nKSB7XHJcbiAgICAgICAgICAgICAgICBMb2dnZXIubG9nKHsgbWVzc2FnZTogYFN0YWRpdW0gXCIke25ld1N0YWRpdW1OYW1lfVwiIGxvYWRlZCAke2J5UGxheWVyID8gYGJ5ICR7YnlQbGF5ZXIubmFtZX1gIDogYGB9YCwgY29sb3I6IEdsb2JhbF8xLkNvbG9ycy5IYXhiYWxsIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuX3J1bkV2ZW50KFwib25TdGFkaXVtQ2hhbmdlXCIsIGZ1bmMsIG5ld1N0YWRpdW1OYW1lLCBieVBsYXllcik7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRXZlbnQgY2FsbGVkIHdoZW4gYSBwbGF5ZXIncyBnZW9sb2NhdGlvbiBpcyBmZXRjaGVkLlxyXG4gICAgICpcclxuICAgICAqIFRoZSBwbGF5ZXIncyBnZW9sb2NhdGlvbiBjYW4gYmUgYWNjZXNzZWQgYnkgdGhlIGBnZW9sb2NhdGlvbmAgcHJvcGVydHkuXHJcbiAgICAgKlxyXG4gICAgICogSWYgaXQgaXMgYG51bGxgIHRoZW4gdGhlIGZldGNoaW5nIG9wZXJhdGlvbiBmYWlsZWQuXHJcbiAgICAgKlxyXG4gICAgICogQGV2ZW50XHJcbiAgICAgKi9cclxuICAgIHNldCBvblBsYXllckdlb0xvY2F0aW9uRmV0Y2goZnVuYykge1xyXG4gICAgICAgIHRoaXMuX29uUGxheWVyR2VvTG9jYXRpb25GZXRjaEZ1bmN0aW9uID0gKHBsYXllcikgPT4gdGhpcy5fcnVuRXZlbnQoXCJvblBsYXllckdlb0xvY2F0aW9uRmV0Y2hcIiwgZnVuYywgcGxheWVyKTtcclxuICAgIH1cclxuICAgIHNldCBvblBsYXllclJ1bkNvbW1hbmQoZnVuYykge1xyXG4gICAgICAgIHRoaXMuX29uUGxheWVyUnVuQ29tbWFuZEZ1bmN0aW9uID0gKHBsYXllciwgY29tbWFuZCwgaW5mbykgPT4gdGhpcy5fcnVuRXZlbnQoXCJvblBsYXllclJ1bkNvbW1hbmRcIiwgZnVuYywgcGxheWVyLCBjb21tYW5kLCBpbmZvKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVGhlIG1lc3NhZ2UgeW91IHJlY2VpdmUgd2hlbiB5b3UgZG9uJ3QgaGF2ZSBlbm91Z2ggcGVybWlzc2lvbnMgdG8gcnVuIGEgY29tbWFuZC5cclxuICAgICAqL1xyXG4gICAgc2V0IG5vUGVybWlzc2lvbk1lc3NhZ2UobWVzc2FnZSkge1xyXG4gICAgICAgIHRoaXMuX2luc3VmZmljaWVudFBlcm1pc3Npb25zTWVzc2FnZSA9IG1lc3NhZ2U7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBtZXNzYWdlIHlvdSByZWNlaXZlIHdoZW4geW91IHR5cGUgY29tbWFuZHMgdG9vIGZhc3QgKGBQbGF5ZXIuY29tbWFuZHNDb29sZG93bmApLlxyXG4gICAgICovXHJcbiAgICBzZXQgY29tbWFuZENvb2xkb3duTWVzc2FnZShtZXNzYWdlKSB7XHJcbiAgICAgICAgdGhpcy5fcGxheWVyQ29tbWFuZENvb2xkb3duTWVzc2FnZSA9IG1lc3NhZ2U7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBsaXN0IG9mIG9ubGluZSBwbGF5ZXJzLlxyXG4gICAgICpcclxuICAgICAqIEVhY2ggcGxheWVyIGlzIHJlcHJlc2VudGVkIGJ5IGEgbnVtYmVyIHByb3BlcnR5LCB3aGljaCBpcyB0aGVpciBJRC5cclxuICAgICAqXHJcbiAgICAgKiBXaGVuIGEgcGxheWVyIGxlYXZlcyB0aGUgcm9vbSwgdGhpcyBwcm9wZXJ0eSBpcyBkZWxldGVkLlxyXG4gICAgICpcclxuICAgICAqIEBleGFtcGxlXHJcbiAgICAgKiBwbGF5ZXJzWzFdLm5hbWU7IC8vIEdldHMgdGhlIG5hbWUgb2YgdGhlIHBsYXllciB3aG9zZSBJRCBpcyAxLlxyXG4gICAgICogcGxheWVyc1s1XS5hZG1pbiA9IHRydWU7IC8vIEdpdmVzIGFkbWluIHRvIHRoZSBwbGF5ZXIgd2hvc2UgSUQgaXMgNS5cclxuICAgICAqL1xyXG4gICAgZ2V0IHBsYXllcnMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BsYXllcnM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBsaXN0IG9mIGRpc2NzIGluIGN1cnJlbnQgbWFwLlxyXG4gICAgICovXHJcbiAgICBnZXQgZGlzY3MoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Rpc2NzO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgc2NvcmVzIG9iamVjdC5cclxuICAgICAqXHJcbiAgICAgKiBJZiBubyBnYW1lIGlzIGluIHByb2dyZXNzIHRoZW4gdGhpcyB3aWxsIHJldHVybiBgbnVsbGAuXHJcbiAgICAgKi9cclxuICAgIGdldCBzY29yZXMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Jvb20uZ2V0U2NvcmVzKCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBiYWxsIGRpc2MuXHJcbiAgICAgKi9cclxuICAgIGdldCBiYWxsKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmRpc2NzWzBdO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgdG90YWwgbnVtYmVyIG9mIGRpc2NzLlxyXG4gICAgICovXHJcbiAgICBnZXQgZGlzY0NvdW50KCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9yb29tLmdldERpc2NDb3VudCgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgbGlzdCBvZiBjb21tYW5kcy5cclxuICAgICAqL1xyXG4gICAgZ2V0IGNvbW1hbmRzKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb21tYW5kcy5saXN0O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgcm9vbSdzIHBhc3N3b3JkLlxyXG4gICAgICpcclxuICAgICAqIFJldHVybnMgbnVsbCBpZiBubyBwYXNzd29yZCBpcyBzZXQuXHJcbiAgICAgKi9cclxuICAgIGdldCBwYXNzd29yZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcGFzc3dvcmQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRoZSByb29tJ3MgY29tbWFuZCBwcmVmaXguXHJcbiAgICAgKi9cclxuICAgIGdldCBwcmVmaXgoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbW1hbmRzLnByZWZpeDtcclxuICAgIH1cclxuICAgIHNldCBwcmVmaXgodmFsdWUpIHtcclxuICAgICAgICB0aGlzLl9jb21tYW5kcy5wcmVmaXggPSB2YWx1ZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVGhlIHJvb20ncyBwbHVnaW5zLlxyXG4gICAgICovXHJcbiAgICBnZXQgcGx1Z2lucygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcGx1Z2lucztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgcm9vbSdzIG5hdGl2ZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIGdldCBuYXRpdmUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Jvb207XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFdoZXRoZXIgdGhlIGdhbWUgaXMgcGF1c2VkIG9yIG5vdC5cclxuICAgICAqL1xyXG4gICAgZ2V0IHBhdXNlZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcGF1c2VkO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBBZGRzIGEgY29tbWFuZCB0byB0aGUgcm9vbS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBDb21tYW5kIG9wdGlvbnMuXHJcbiAgICAgKi9cclxuICAgIGNvbW1hbmQob3B0aW9ucykge1xyXG4gICAgICAgIHRoaXMuX2NvbW1hbmRzLmFkZChuZXcgQ29tbWFuZF8xLkNvbW1hbmQob3B0aW9ucykpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWxldGVzIGEgY29tbWFuZC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbmFtZSBDb21tYW5kIG5hbWUuXHJcbiAgICAgKi9cclxuICAgIHJlbW92ZUNvbW1hbmQobmFtZSkge1xyXG4gICAgICAgIHRoaXMuX2NvbW1hbmRzLnJlbW92ZShuYW1lKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQWRkcyBhIHBsdWdpbiB0byB0aGUgcm9vbS5cclxuICAgICAqXHJcbiAgICAgKiBQbHVnaW5zIGFyZSBjbGFzc2VzIHdpdGggdGhlIGBAY3JlYXRlUGx1Z2luYCBkZWNvcmF0b3IuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIFBsdWdpbiBBIHBsdWdpbiBjbGFzcy5cclxuICAgICAqL1xyXG4gICAgcGx1Z2luKFBsdWdpbiwgb3B0aW9ucykge1xyXG4gICAgICAgIGlmICghUmVmbGVjdC5nZXRNZXRhZGF0YSgnaGVyOnBsdWdpbicsIFBsdWdpbikpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhlIGdpdmVuIGFyZ3VtZW50IGlzIG5vdCBhIHZhbGlkIHBsdWdpbi5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHRyYW5zbGF0ZSA9IChvcmlnaW5hbCwgbmFtZSwgLi4ucGFyYW1zKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMubGFuZ3VhZ2VQYWNrKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtzdHJOYW1lLCBzdHJdIG9mIE9iamVjdC5lbnRyaWVzKG9wdGlvbnMubGFuZ3VhZ2VQYWNrKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChzdHJOYW1lID09PSBuYW1lKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbc3RyLCAuLi5wYXJhbXNdLnJlZHVjZSgocCwgYykgPT4gcC5yZXBsYWNlKC8lJS8sIGMpKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIFtvcmlnaW5hbCwgLi4ucGFyYW1zXS5yZWR1Y2UoKHAsIGMpID0+IHAucmVwbGFjZSgvJSUvLCBjKSk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCBwbHVnaW4gPSBuZXcgUGx1Z2luKHRoaXMsIG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5zZXR0aW5ncywgdHJhbnNsYXRlKTtcclxuICAgICAgICBjb25zdCBjb21tYW5kcyA9IFJlZmxlY3QuZ2V0TWV0YWRhdGEoJ2hlcjpjb21tYW5kcycsIFBsdWdpbi5wcm90b3R5cGUpIHx8IFtdO1xyXG4gICAgICAgIGNvbnN0IGV2ZW50cyA9IFJlZmxlY3QuZ2V0TWV0YWRhdGEoJ2hlcjpldmVudHMnLCBQbHVnaW4ucHJvdG90eXBlKSB8fCBbXTtcclxuICAgICAgICBldmVudHMubWFwKGUgPT4ge1xyXG4gICAgICAgICAgICBlLmZ1bmMgPSBlLmZ1bmMuYmluZChwbHVnaW4pO1xyXG4gICAgICAgICAgICByZXR1cm4gZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBjb21tYW5kcy5mb3JFYWNoKGNvbW1hbmQgPT4ge1xyXG4gICAgICAgICAgICBjb21tYW5kLmZ1bmMgPSBjb21tYW5kLmZ1bmMuYmluZChwbHVnaW4pO1xyXG4gICAgICAgICAgICB0aGlzLmNvbW1hbmQoY29tbWFuZCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fcGx1Z2lucy5wdXNoKHtcclxuICAgICAgICAgICAgbmFtZTogUGx1Z2luLm5hbWUsXHJcbiAgICAgICAgICAgIGNvbW1hbmRzOiBjb21tYW5kcyxcclxuICAgICAgICAgICAgZXZlbnRzOiBldmVudHNcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmVtb3ZlcyBhIHBsdWdpbiBmcm9tIHRoZSByb29tLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBwbHVnaW5Pck5hbWUgVGhlIHBsdWdpbidzIG5hbWUgb3IgdGhlIHBsdWdpbiBpdHNlbGYgKG9yIGFueSBjbGFzcyB3aXRoIHRoZSBzYW1lIG5hbWUpLlxyXG4gICAgICovXHJcbiAgICByZW1vdmVQbHVnaW4ocGx1Z2luT3JOYW1lKSB7XHJcbiAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgIGNvbnN0IG5hbWUgPSB0eXBlb2YgcGx1Z2luT3JOYW1lICE9PSBcInN0cmluZ1wiID8gcGx1Z2luT3JOYW1lLm5hbWUgOiBwbHVnaW5Pck5hbWU7XHJcbiAgICAgICAgKF9hID0gdGhpcy5fcGx1Z2lucy5maW5kKHAgPT4gcC5uYW1lID09PSBuYW1lKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNvbW1hbmRzLmZvckVhY2goYyA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGNtZCA9IHRoaXMuX2NvbW1hbmRzLmdldChjLm5hbWUpO1xyXG4gICAgICAgICAgICBpZiAoY21kKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoYy5uYW1lID09PSAoY21kID09PSBudWxsIHx8IGNtZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY21kLm5hbWUpICYmIGMuZnVuYyA9PT0gKGNtZCA9PT0gbnVsbCB8fCBjbWQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNtZC5mdW5jKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NvbW1hbmRzLnJlbW92ZShjLm5hbWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fcGx1Z2lucyA9IHRoaXMuX3BsdWdpbnMuZmlsdGVyKHAgPT4gcC5uYW1lICE9PSBuYW1lKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2tzIHdoZXRoZXIgYSBnYW1lIGlzIGluIHByb2dyZXNzLlxyXG4gICAgICovXHJcbiAgICBpc0dhbWVJblByb2dyZXNzKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnNjb3JlcyAhPSBudWxsO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAZGVwcmVjYXRlZFxyXG4gICAgICpcclxuICAgICAqIERlcHJlY2F0ZWQgc2luY2UgMjkvMDcvMjAxOVxyXG4gICAgICpcclxuICAgICAqIFRoaXMgbWV0aG9kIHdhcyBpbnRlbmRlZCB0byB3b3JrIHdpdGggbm9QbGF5ZXI6IGZhbHNlLFxyXG4gICAgICogYnV0IG5vd2FkYXlzIG5vUGxheWVyOiBmYWxzZSBpcyBub3QgcmVjb21tZW5kZWQgYW55bW9yZVxyXG4gICAgICogYW5kIGlzIG9ubHkgbWFudGFpbmVkIGR1ZSB0byBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxyXG4gICAgICogYnkgdGhlIEhheGJhbGwgQVBJLlxyXG4gICAgICpcclxuICAgICAqIE1lc3NhZ2VzIHNlbnQgdXNpbmcgdGhpcyBtZXRob2Qgd29uJ3QgYmUgbG9nZ2VkLlxyXG4gICAgICpcclxuICAgICAqIFVzZSBgc2VuZCgpYCBpbnN0ZWFkLlxyXG4gICAgICovXHJcbiAgICBjaGF0KG1lc3NhZ2UsIHBsYXllcklEKSB7XHJcbiAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgIGlmIChwbGF5ZXJJRCAmJiAoKF9hID0gdGhpcy5wbGF5ZXJzW3BsYXllcklEXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhblJlYWRDaGF0KSkge1xyXG4gICAgICAgICAgICB0aGlzLl9yb29tLnNlbmRDaGF0KG1lc3NhZ2UsIHBsYXllcklEKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFwbGF5ZXJJRCkge1xyXG4gICAgICAgICAgICBmb3IgKGNvbnN0IHBsYXllciBvZiB0aGlzLnBsYXllcnMpIHtcclxuICAgICAgICAgICAgICAgIGlmICghcGxheWVyLmNhblJlYWRDaGF0KVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcm9vbS5zZW5kQ2hhdChtZXNzYWdlLCBwbGF5ZXIuaWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBVbmJhbnMgYSBwbGF5ZXIgYmFzZWQgb24gdGhlaXIgcGFzdCBJRC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gaWQgVGhlIHBsYXllcidzIElELlxyXG4gICAgICovXHJcbiAgICB1bmJhbihpZCkge1xyXG4gICAgICAgIHRoaXMuX3Jvb20uY2xlYXJCYW4oaWQpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBVbmJhbnMgYWxsIGJhbm5lZCBwbGF5ZXJzLlxyXG4gICAgICovXHJcbiAgICB1bmJhbkFsbCgpIHtcclxuICAgICAgICB0aGlzLl9yb29tLmNsZWFyQmFucygpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGFuZ2VzIHRoZSBzY29yZSBsaW1pdCBvZiB0aGUgcm9vbS5cclxuICAgICAqXHJcbiAgICAgKiBJZiBhIGdhbWUgaXMgaW4gcHJvZ3Jlc3MgdGhpcyBtZXRob2QgZG9lcyBub3RoaW5nLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBsaW1pdCBTY29yZSBsaW1pdC5cclxuICAgICAqL1xyXG4gICAgc2V0U2NvcmVMaW1pdChsaW1pdCkge1xyXG4gICAgICAgIHRoaXMuX3Jvb20uc2V0U2NvcmVMaW1pdChsaW1pdCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIENoYW5nZXMgdGhlIHRpbWUgbGltaXQgb2YgdGhlIHJvb20uXHJcbiAgICAgKlxyXG4gICAgICogSWYgYSBnYW1lIGlzIGluIHByb2dyZXNzIHRoaXMgbWV0aG9kIGRvZXMgbm90aGluZy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbGltaXQgVGltZSBsaW1pdC5cclxuICAgICAqL1xyXG4gICAgc2V0VGltZUxpbWl0KGxpbWl0KSB7XHJcbiAgICAgICAgdGhpcy5fcm9vbS5zZXRUaW1lTGltaXQobGltaXQpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGFuZ2VzIHRoZSByb29tIHN0YWRpdW0uXHJcbiAgICAgKlxyXG4gICAgICogSWYgYSBnYW1lIGlzIGluIHByb2dyZXNzIHRoZW4gdGhpcyBtZXRob2QgZG9lcyBub3RoaW5nLlxyXG4gICAgICpcclxuICAgICAqIFRoaXMgbWV0aG9kIGNvbWJpbmVzIGJvdGggc2V0Q3VzdG9tU3RhZGl1bSBhbmQgc2V0RGVmYXVsdFN0YWRpdW0gaW4gb25lIHBsYWNlLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBzdGFkaXVtIEVpdGhlciBhIEhCUyBtYXAgaW4gSlNPTiBvciBhIGRlZmF1bHQgc3RhZGl1bSBuYW1lLlxyXG4gICAgICovXHJcbiAgICBzZXRTdGFkaXVtKHN0YWRpdW0pIHtcclxuICAgICAgICBpZiAodHlwZW9mIHN0YWRpdW0gPT09IFwib2JqZWN0XCIpXHJcbiAgICAgICAgICAgIHRoaXMuX3Jvb20uc2V0Q3VzdG9tU3RhZGl1bShKU09OLnN0cmluZ2lmeShzdGFkaXVtKSk7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBzdGFkaXVtID09PSBcInN0cmluZ1wiKVxyXG4gICAgICAgICAgICB0aGlzLl9yb29tLnNldERlZmF1bHRTdGFkaXVtKHN0YWRpdW0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBMb2NrcyB0aGUgdGVhbXMuXHJcbiAgICAgKlxyXG4gICAgICogV2hlbiB0ZWFtcyBhcmUgbG9ja2VkIHBsYXllcnMgY2Fubm90IG1vdmUgdGhlbXNlbHZlcyB1bmxlc3MgYW4gYWRtaW4gbW92ZXMgdGhlbS5cclxuICAgICAqL1xyXG4gICAgbG9ja1RlYW1zKCkge1xyXG4gICAgICAgIHRoaXMuX3Jvb20uc2V0VGVhbXNMb2NrKHRydWUpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBVbmxvY2sgdGhlIHRlYW1zLlxyXG4gICAgICpcclxuICAgICAqIFdoZW4gdGVhbXMgYXJlIGxvY2tlZCBwbGF5ZXJzIGNhbm5vdCBtb3ZlIHRoZW1zZWx2ZXMgdW5sZXNzIGFuIGFkbWluIG1vdmVzIHRoZW0uXHJcbiAgICAgKi9cclxuICAgIHVubG9ja1RlYW1zKCkge1xyXG4gICAgICAgIHRoaXMuX3Jvb20uc2V0VGVhbXNMb2NrKGZhbHNlKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ2hhbmdlcyB0aGUgdW5pZm9ybSBvZiBhIHRlYW0uXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHRlYW0gVGhlIHRlYW0gSUQgb3IgXCJhbGxcIiB0byBib3RoIHRlYW1zLlxyXG4gICAgICogQHBhcmFtIHRlYW1Db2xvcnMgVGhlIGNvbG9yLlxyXG4gICAgICovXHJcbiAgICBzZXRUZWFtQ29sb3JzKHRlYW0sIHRlYW1Db2xvcnMpIHtcclxuICAgICAgICBpZiAodGVhbSA9PT0gXCJhbGxcIikge1xyXG4gICAgICAgICAgICB0aGlzLl9yb29tLnNldFRlYW1Db2xvcnMoR2xvYmFsXzEuVGVhbXMuUmVkLCB0ZWFtQ29sb3JzLmFuZ2xlLCB0ZWFtQ29sb3JzLnRleHRDb2xvciwgdGVhbUNvbG9ycy5jb2xvcnMpO1xyXG4gICAgICAgICAgICB0aGlzLl9yb29tLnNldFRlYW1Db2xvcnMoR2xvYmFsXzEuVGVhbXMuQmx1ZSwgdGVhbUNvbG9ycy5hbmdsZSwgdGVhbUNvbG9ycy50ZXh0Q29sb3IsIHRlYW1Db2xvcnMuY29sb3JzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3Jvb20uc2V0VGVhbUNvbG9ycyh0ZWFtLCB0ZWFtQ29sb3JzLmFuZ2xlLCB0ZWFtQ29sb3JzLnRleHRDb2xvciwgdGVhbUNvbG9ycy5jb2xvcnMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU3RhcnRzIHRoZSBnYW1lIGlmIG5vbmUgaXMgaW4gcHJvZ3Jlc3MuXHJcbiAgICAgKi9cclxuICAgIHN0YXJ0KCkge1xyXG4gICAgICAgIHRoaXMuX3Jvb20uc3RhcnRHYW1lKCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFN0b3BzIHRoZSBnYW1lIGluIHByb2dyZXNzLlxyXG4gICAgICovXHJcbiAgICBzdG9wKCkge1xyXG4gICAgICAgIHRoaXMuX3Jvb20uc3RvcEdhbWUoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUGF1c2VzIHRoZSBnYW1lLlxyXG4gICAgICovXHJcbiAgICBwYXVzZSgpIHtcclxuICAgICAgICB0aGlzLl9yb29tLnBhdXNlR2FtZSh0cnVlKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVW5wYXVzZXMgdGhlIGdhbWUuXHJcbiAgICAgKi9cclxuICAgIHVucGF1c2UoKSB7XHJcbiAgICAgICAgdGhpcy5fcm9vbS5wYXVzZUdhbWUoZmFsc2UpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTdGFydHMgcmVjb3JkaW5nIGEgSGF4YmFsbCBSZXBsYXkuXHJcbiAgICAgKlxyXG4gICAgICogRG9uJ3QgZm9yZ2V0IHRvIGNhbGwgc3RvcFJlY29yZGluZygpIHRvIHByZXZlbnQgYSBtZW1vcnkgbGVhay5cclxuICAgICAqL1xyXG4gICAgc3RhcnRSZWNvcmRpbmcoKSB7XHJcbiAgICAgICAgdGhpcy5fcm9vbS5zdGFydFJlY29yZGluZygpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBTdG9wcyB0aGUgcmVjb3JkaW5nLlxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm5zIFRoZSBmaWxlIGNvbnRlbnQgYXMgYSBVaW50OEFycmF5IG9yIG51bGwgaWYgbm8gcmVjb3JkaW5nIGlzIGluIHByb2dyZXNzLlxyXG4gICAgICovXHJcbiAgICBzdG9wUmVjb3JkaW5nKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9yb29tLnN0b3BSZWNvcmRpbmcoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogTG9ja3MgdGhlIHJvb20gd2l0aCBhIHBhc3N3b3JkLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBwYXNzd29yZCBBIHBhc3N3b3JkIGZvciB0aGUgcm9vbS5cclxuICAgICAqL1xyXG4gICAgc2V0UGFzc3dvcmQocGFzc3dvcmQpIHtcclxuICAgICAgICB0aGlzLl9wYXNzd29yZCA9IHBhc3N3b3JkO1xyXG4gICAgICAgIHRoaXMuX3Jvb20uc2V0UGFzc3dvcmQocGFzc3dvcmQpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDbGVhcnMgdGhlIHJvb20gcGFzc3dvcmQuXHJcbiAgICAgKi9cclxuICAgIGNsZWFyUGFzc3dvcmQoKSB7XHJcbiAgICAgICAgdGhpcy5fcGFzc3dvcmQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX3Jvb20uc2V0UGFzc3dvcmQobnVsbCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEZvcmNlcyBwbGF5ZXJzIHRvIHNvbHZlIGEgY2FwdGNoYSBiZWZvcmUgam9pbmluZyB0aGUgcm9vbS5cclxuICAgICAqL1xyXG4gICAgZW5hYmxlQ2FwdGNoYSgpIHtcclxuICAgICAgICB0aGlzLl9yb29tLnNldFJlcXVpcmVSZWNhcHRjaGEodHJ1ZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIERpc2FibGVzIHRoZSBjYXB0Y2hhIHJlcXVpcmVtZW50LlxyXG4gICAgICovXHJcbiAgICBkaXNhYmxlQ2FwdGNoYSgpIHtcclxuICAgICAgICB0aGlzLl9yb29tLnNldFJlcXVpcmVSZWNhcHRjaGEoZmFsc2UpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBGaXJzdCBhbGwgcGxheWVycyBsaXN0ZWQgYXJlIHJlbW92ZWQsIHRoZW4gdGhleSBhcmUgcmVpbnNlcnRlZCBpbiB0aGUgc2FtZSBvcmRlciB0aGV5IGFwcGVhciBpbiB0aGUgbGlzdC5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gaWRzIElEIGxpc3QuXHJcbiAgICAgKiBAcGFyYW0gbW92ZVRvVG9wIFdoZXRoZXIgcGxheWVycyBzaG91bGQgYmUgaW5zZXJ0ZWQgYXQgdGhlIHRvcCBvciBhdCB0aGUgYm90dG9tIG9mIHRoZSBsaXN0IC5cclxuICAgICAqL1xyXG4gICAgcmVvcmRlclBsYXllcnMoaWRzLCBtb3ZlVG9Ub3ApIHtcclxuICAgICAgICB0aGlzLl9yb29tLnJlb3JkZXJQbGF5ZXJzKGlkcywgbW92ZVRvVG9wKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU2VuZHMgYW4gYW5ub3VuY2VtZW50LlxyXG4gICAgICpcclxuICAgICAqIEBleGFtcGxlXHJcbiAgICAgKiByb29tLnNlbmQoeyBtZXNzYWdlOiBcIkhlbGxvIHdvcmxkIVwiIH0pO1xyXG4gICAgICpcclxuICAgICAqIEBleGFtcGxlXHJcbiAgICAgKiByb29tLnNlbmQoeyBtZXNzYWdlOiBcIldoYXQgYSBiZWF1dGlmdWwgZGF5IVwiLCBjb2xvcjogQ29sb3JzLlllbGxvdywgc3R5bGU6IENoYXRTdHlsZS5Cb2xkIH0pO1xyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBvcHRpb25zIE1lc3NhZ2Ugb3B0aW9ucy5cclxuICAgICAqL1xyXG4gICAgc2VuZChvcHRpb25zKSB7XHJcbiAgICAgICAgdmFyIF9hLCBfYjtcclxuICAgICAgICBpZiAob3B0aW9ucy50YXJnZXRJRCAmJiAoKF9hID0gdGhpcy5wbGF5ZXJzW29wdGlvbnMudGFyZ2V0SURdKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FuUmVhZENoYXQpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3Jvb20uc2VuZEFubm91bmNlbWVudChvcHRpb25zLm1lc3NhZ2UsIG9wdGlvbnMudGFyZ2V0SUQsIG9wdGlvbnMuY29sb3IsIG9wdGlvbnMuc3R5bGUsIG9wdGlvbnMuc291bmQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIW9wdGlvbnMudGFyZ2V0SUQpIHtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBwbGF5ZXIgb2YgdGhpcy5wbGF5ZXJzKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXBsYXllci5jYW5SZWFkQ2hhdClcclxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3Jvb20uc2VuZEFubm91bmNlbWVudChvcHRpb25zLm1lc3NhZ2UsIHBsYXllci5pZCwgb3B0aW9ucy5jb2xvciwgb3B0aW9ucy5zdHlsZSwgb3B0aW9ucy5zb3VuZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMubG9nZ2luZykge1xyXG4gICAgICAgICAgICBpZiAob3B0aW9ucy50YXJnZXRJRCAmJiAoKF9iID0gdGhpcy5wbGF5ZXJzW29wdGlvbnMudGFyZ2V0SURdKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FuUmVhZENoYXQpKSB7XHJcbiAgICAgICAgICAgICAgICBMb2dnZXIuZGlyZWN0KG9wdGlvbnMsIHRoaXMucGxheWVyc1tvcHRpb25zLnRhcmdldElEXSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBMb2dnZXIuYW5ub3VuY2VtZW50KG9wdGlvbnMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBMaW1pdHMgdGhlIG51bWJlciBvZiBraWNrcyBpbiBhIHBlcmlvZCBvZiB0aW1lLlxyXG4gICAgICpcclxuICAgICAqIEdvb2QgdG8gcHJldmVudCBjaGVhdGluZy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbWluIFRoZSBtaW5pbXVtIG51bWJlciBvZiBsb2dpYy1mcmFtZXMgYmV0d2VlbiB0d28ga2lja3MuIEl0IGlzIGltcG9zc2libGUgdG8ga2ljayBmYXN0ZXIgdGhhbiB0aGlzLlxyXG4gICAgICogQHBhcmFtIHJhdGUgU2ltaWxhciB0byBtaW4gYnV0IGxldHMgcGxheWVycyBzYXZlIHVwIGV4dHJhIGtpY2tzIHRvIHVzZSB0aGVtIGxhdGVyIGRlcGVuZGluZyBvbiB0aGUgdmFsdWUgb2YgYnVyc3QuXHJcbiAgICAgKiBAcGFyYW0gYnVyc3QgRGV0ZXJtaW5lcyBob3cgbWFueSBleHRyYSBraWNrcyB0aGUgcGxheWVyIGlzIGFibGUgdG8gc2F2ZSB1cC5cclxuICAgICAqL1xyXG4gICAgc2V0S2lja1JhdGVMaW1pdChtaW4sIHJhdGUsIGJ1cnN0KSB7XHJcbiAgICAgICAgdGhpcy5fcm9vbS5zZXRLaWNrUmF0ZUxpbWl0KG1pbiwgcmF0ZSwgYnVyc3QpO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuUm9vbSA9IFJvb207XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJvb20uanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuZXhwb3J0cy5TZXR0aW5ncyA9IHZvaWQgMDtcclxuLyoqIENsYXNzIHJlcHJlc2V0aW5nIGN1c3RvbSBzZXR0aW5ncyBmb3IgZ2FtZSBvYmplY3RzLiAqL1xyXG5jbGFzcyBTZXR0aW5ncyB7XHJcbiAgICBbU3ltYm9sLml0ZXJhdG9yXSgpIHtcclxuICAgICAgICBsZXQgaSA9IDA7XHJcbiAgICAgICAgY29uc3QgYXJyID0gT2JqZWN0LnZhbHVlcyh0aGlzKTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBuZXh0OiAoKSA9PiAoe1xyXG4gICAgICAgICAgICAgICAgdmFsdWU6IGFycltpKytdLFxyXG4gICAgICAgICAgICAgICAgZG9uZTogaSA+IGFyci5sZW5ndGhcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuU2V0dGluZ3MgPSBTZXR0aW5ncztcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2V0dGluZ3MuanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVhZGxlc3MuanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XHJcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgb1trMl0gPSBtW2tdO1xyXG59KSk7XHJcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xyXG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcclxuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcclxufSk7XHJcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xyXG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xyXG59O1xyXG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcclxuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XHJcbiAgICB2YXIgcmVzdWx0ID0ge307XHJcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XHJcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLkxvZ2dlciA9IHZvaWQgMDtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1Jvb21cIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQ29tbWFuZFwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Db21tYW5kTGlzdFwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9QbGF5ZXJcIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUGxheWVyTGlzdFwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Db21tYW5kTGlzdFwiKSwgZXhwb3J0cyk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9EaXNjXCIpLCBleHBvcnRzKTtcclxuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0dsb2JhbFwiKSwgZXhwb3J0cyk7XHJcbmV4cG9ydHMuTG9nZ2VyID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL0xvZ2dlclwiKSk7XHJcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9QbHVnaW5cIiksIGV4cG9ydHMpO1xyXG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQ29sb3JcIiksIGV4cG9ydHMpO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbnZhciB3cmFwSWRiVmFsdWUgPSByZXF1aXJlKCcuL3dyYXAtaWRiLXZhbHVlLmpzJyk7XG5cbi8qKlxuICogT3BlbiBhIGRhdGFiYXNlLlxuICpcbiAqIEBwYXJhbSBuYW1lIE5hbWUgb2YgdGhlIGRhdGFiYXNlLlxuICogQHBhcmFtIHZlcnNpb24gU2NoZW1hIHZlcnNpb24uXG4gKiBAcGFyYW0gY2FsbGJhY2tzIEFkZGl0aW9uYWwgY2FsbGJhY2tzLlxuICovXG5mdW5jdGlvbiBvcGVuREIobmFtZSwgdmVyc2lvbiwgeyBibG9ja2VkLCB1cGdyYWRlLCBibG9ja2luZywgdGVybWluYXRlZCB9ID0ge30pIHtcbiAgICBjb25zdCByZXF1ZXN0ID0gaW5kZXhlZERCLm9wZW4obmFtZSwgdmVyc2lvbik7XG4gICAgY29uc3Qgb3BlblByb21pc2UgPSB3cmFwSWRiVmFsdWUud3JhcChyZXF1ZXN0KTtcbiAgICBpZiAodXBncmFkZSkge1xuICAgICAgICByZXF1ZXN0LmFkZEV2ZW50TGlzdGVuZXIoJ3VwZ3JhZGVuZWVkZWQnLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIHVwZ3JhZGUod3JhcElkYlZhbHVlLndyYXAocmVxdWVzdC5yZXN1bHQpLCBldmVudC5vbGRWZXJzaW9uLCBldmVudC5uZXdWZXJzaW9uLCB3cmFwSWRiVmFsdWUud3JhcChyZXF1ZXN0LnRyYW5zYWN0aW9uKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoYmxvY2tlZClcbiAgICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdibG9ja2VkJywgKCkgPT4gYmxvY2tlZCgpKTtcbiAgICBvcGVuUHJvbWlzZVxuICAgICAgICAudGhlbigoZGIpID0+IHtcbiAgICAgICAgaWYgKHRlcm1pbmF0ZWQpXG4gICAgICAgICAgICBkYi5hZGRFdmVudExpc3RlbmVyKCdjbG9zZScsICgpID0+IHRlcm1pbmF0ZWQoKSk7XG4gICAgICAgIGlmIChibG9ja2luZylcbiAgICAgICAgICAgIGRiLmFkZEV2ZW50TGlzdGVuZXIoJ3ZlcnNpb25jaGFuZ2UnLCAoKSA9PiBibG9ja2luZygpKTtcbiAgICB9KVxuICAgICAgICAuY2F0Y2goKCkgPT4geyB9KTtcbiAgICByZXR1cm4gb3BlblByb21pc2U7XG59XG4vKipcbiAqIERlbGV0ZSBhIGRhdGFiYXNlLlxuICpcbiAqIEBwYXJhbSBuYW1lIE5hbWUgb2YgdGhlIGRhdGFiYXNlLlxuICovXG5mdW5jdGlvbiBkZWxldGVEQihuYW1lLCB7IGJsb2NrZWQgfSA9IHt9KSB7XG4gICAgY29uc3QgcmVxdWVzdCA9IGluZGV4ZWREQi5kZWxldGVEYXRhYmFzZShuYW1lKTtcbiAgICBpZiAoYmxvY2tlZClcbiAgICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdibG9ja2VkJywgKCkgPT4gYmxvY2tlZCgpKTtcbiAgICByZXR1cm4gd3JhcElkYlZhbHVlLndyYXAocmVxdWVzdCkudGhlbigoKSA9PiB1bmRlZmluZWQpO1xufVxuXG5jb25zdCByZWFkTWV0aG9kcyA9IFsnZ2V0JywgJ2dldEtleScsICdnZXRBbGwnLCAnZ2V0QWxsS2V5cycsICdjb3VudCddO1xuY29uc3Qgd3JpdGVNZXRob2RzID0gWydwdXQnLCAnYWRkJywgJ2RlbGV0ZScsICdjbGVhciddO1xuY29uc3QgY2FjaGVkTWV0aG9kcyA9IG5ldyBNYXAoKTtcbmZ1bmN0aW9uIGdldE1ldGhvZCh0YXJnZXQsIHByb3ApIHtcbiAgICBpZiAoISh0YXJnZXQgaW5zdGFuY2VvZiBJREJEYXRhYmFzZSAmJlxuICAgICAgICAhKHByb3AgaW4gdGFyZ2V0KSAmJlxuICAgICAgICB0eXBlb2YgcHJvcCA9PT0gJ3N0cmluZycpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGNhY2hlZE1ldGhvZHMuZ2V0KHByb3ApKVxuICAgICAgICByZXR1cm4gY2FjaGVkTWV0aG9kcy5nZXQocHJvcCk7XG4gICAgY29uc3QgdGFyZ2V0RnVuY05hbWUgPSBwcm9wLnJlcGxhY2UoL0Zyb21JbmRleCQvLCAnJyk7XG4gICAgY29uc3QgdXNlSW5kZXggPSBwcm9wICE9PSB0YXJnZXRGdW5jTmFtZTtcbiAgICBjb25zdCBpc1dyaXRlID0gd3JpdGVNZXRob2RzLmluY2x1ZGVzKHRhcmdldEZ1bmNOYW1lKTtcbiAgICBpZiAoXG4gICAgLy8gQmFpbCBpZiB0aGUgdGFyZ2V0IGRvZXNuJ3QgZXhpc3Qgb24gdGhlIHRhcmdldC4gRWcsIGdldEFsbCBpc24ndCBpbiBFZGdlLlxuICAgICEodGFyZ2V0RnVuY05hbWUgaW4gKHVzZUluZGV4ID8gSURCSW5kZXggOiBJREJPYmplY3RTdG9yZSkucHJvdG90eXBlKSB8fFxuICAgICAgICAhKGlzV3JpdGUgfHwgcmVhZE1ldGhvZHMuaW5jbHVkZXModGFyZ2V0RnVuY05hbWUpKSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IG1ldGhvZCA9IGFzeW5jIGZ1bmN0aW9uIChzdG9yZU5hbWUsIC4uLmFyZ3MpIHtcbiAgICAgICAgLy8gaXNXcml0ZSA/ICdyZWFkd3JpdGUnIDogdW5kZWZpbmVkIGd6aXBwcyBiZXR0ZXIsIGJ1dCBmYWlscyBpbiBFZGdlIDooXG4gICAgICAgIGNvbnN0IHR4ID0gdGhpcy50cmFuc2FjdGlvbihzdG9yZU5hbWUsIGlzV3JpdGUgPyAncmVhZHdyaXRlJyA6ICdyZWFkb25seScpO1xuICAgICAgICBsZXQgdGFyZ2V0ID0gdHguc3RvcmU7XG4gICAgICAgIGlmICh1c2VJbmRleClcbiAgICAgICAgICAgIHRhcmdldCA9IHRhcmdldC5pbmRleChhcmdzLnNoaWZ0KCkpO1xuICAgICAgICAvLyBNdXN0IHJlamVjdCBpZiBvcCByZWplY3RzLlxuICAgICAgICAvLyBJZiBpdCdzIGEgd3JpdGUgb3BlcmF0aW9uLCBtdXN0IHJlamVjdCBpZiB0eC5kb25lIHJlamVjdHMuXG4gICAgICAgIC8vIE11c3QgcmVqZWN0IHdpdGggb3AgcmVqZWN0aW9uIGZpcnN0LlxuICAgICAgICAvLyBNdXN0IHJlc29sdmUgd2l0aCBvcCB2YWx1ZS5cbiAgICAgICAgLy8gTXVzdCBoYW5kbGUgYm90aCBwcm9taXNlcyAobm8gdW5oYW5kbGVkIHJlamVjdGlvbnMpXG4gICAgICAgIHJldHVybiAoYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgdGFyZ2V0W3RhcmdldEZ1bmNOYW1lXSguLi5hcmdzKSxcbiAgICAgICAgICAgIGlzV3JpdGUgJiYgdHguZG9uZSxcbiAgICAgICAgXSkpWzBdO1xuICAgIH07XG4gICAgY2FjaGVkTWV0aG9kcy5zZXQocHJvcCwgbWV0aG9kKTtcbiAgICByZXR1cm4gbWV0aG9kO1xufVxud3JhcElkYlZhbHVlLnJlcGxhY2VUcmFwcygob2xkVHJhcHMpID0+ICh7XG4gICAgLi4ub2xkVHJhcHMsXG4gICAgZ2V0OiAodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikgPT4gZ2V0TWV0aG9kKHRhcmdldCwgcHJvcCkgfHwgb2xkVHJhcHMuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpLFxuICAgIGhhczogKHRhcmdldCwgcHJvcCkgPT4gISFnZXRNZXRob2QodGFyZ2V0LCBwcm9wKSB8fCBvbGRUcmFwcy5oYXModGFyZ2V0LCBwcm9wKSxcbn0pKTtcblxuZXhwb3J0cy51bndyYXAgPSB3cmFwSWRiVmFsdWUudW53cmFwO1xuZXhwb3J0cy53cmFwID0gd3JhcElkYlZhbHVlLndyYXA7XG5leHBvcnRzLmRlbGV0ZURCID0gZGVsZXRlREI7XG5leHBvcnRzLm9wZW5EQiA9IG9wZW5EQjtcbiIsIid1c2Ugc3RyaWN0JztcblxuY29uc3QgaW5zdGFuY2VPZkFueSA9IChvYmplY3QsIGNvbnN0cnVjdG9ycykgPT4gY29uc3RydWN0b3JzLnNvbWUoKGMpID0+IG9iamVjdCBpbnN0YW5jZW9mIGMpO1xuXG5sZXQgaWRiUHJveHlhYmxlVHlwZXM7XG5sZXQgY3Vyc29yQWR2YW5jZU1ldGhvZHM7XG4vLyBUaGlzIGlzIGEgZnVuY3Rpb24gdG8gcHJldmVudCBpdCB0aHJvd2luZyB1cCBpbiBub2RlIGVudmlyb25tZW50cy5cbmZ1bmN0aW9uIGdldElkYlByb3h5YWJsZVR5cGVzKCkge1xuICAgIHJldHVybiAoaWRiUHJveHlhYmxlVHlwZXMgfHxcbiAgICAgICAgKGlkYlByb3h5YWJsZVR5cGVzID0gW1xuICAgICAgICAgICAgSURCRGF0YWJhc2UsXG4gICAgICAgICAgICBJREJPYmplY3RTdG9yZSxcbiAgICAgICAgICAgIElEQkluZGV4LFxuICAgICAgICAgICAgSURCQ3Vyc29yLFxuICAgICAgICAgICAgSURCVHJhbnNhY3Rpb24sXG4gICAgICAgIF0pKTtcbn1cbi8vIFRoaXMgaXMgYSBmdW5jdGlvbiB0byBwcmV2ZW50IGl0IHRocm93aW5nIHVwIGluIG5vZGUgZW52aXJvbm1lbnRzLlxuZnVuY3Rpb24gZ2V0Q3Vyc29yQWR2YW5jZU1ldGhvZHMoKSB7XG4gICAgcmV0dXJuIChjdXJzb3JBZHZhbmNlTWV0aG9kcyB8fFxuICAgICAgICAoY3Vyc29yQWR2YW5jZU1ldGhvZHMgPSBbXG4gICAgICAgICAgICBJREJDdXJzb3IucHJvdG90eXBlLmFkdmFuY2UsXG4gICAgICAgICAgICBJREJDdXJzb3IucHJvdG90eXBlLmNvbnRpbnVlLFxuICAgICAgICAgICAgSURCQ3Vyc29yLnByb3RvdHlwZS5jb250aW51ZVByaW1hcnlLZXksXG4gICAgICAgIF0pKTtcbn1cbmNvbnN0IGN1cnNvclJlcXVlc3RNYXAgPSBuZXcgV2Vha01hcCgpO1xuY29uc3QgdHJhbnNhY3Rpb25Eb25lTWFwID0gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IHRyYW5zYWN0aW9uU3RvcmVOYW1lc01hcCA9IG5ldyBXZWFrTWFwKCk7XG5jb25zdCB0cmFuc2Zvcm1DYWNoZSA9IG5ldyBXZWFrTWFwKCk7XG5jb25zdCByZXZlcnNlVHJhbnNmb3JtQ2FjaGUgPSBuZXcgV2Vha01hcCgpO1xuZnVuY3Rpb24gcHJvbWlzaWZ5UmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgY29uc3QgdW5saXN0ZW4gPSAoKSA9PiB7XG4gICAgICAgICAgICByZXF1ZXN0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3N1Y2Nlc3MnLCBzdWNjZXNzKTtcbiAgICAgICAgICAgIHJlcXVlc3QucmVtb3ZlRXZlbnRMaXN0ZW5lcignZXJyb3InLCBlcnJvcik7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHN1Y2Nlc3MgPSAoKSA9PiB7XG4gICAgICAgICAgICByZXNvbHZlKHdyYXAocmVxdWVzdC5yZXN1bHQpKTtcbiAgICAgICAgICAgIHVubGlzdGVuKCk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGVycm9yID0gKCkgPT4ge1xuICAgICAgICAgICAgcmVqZWN0KHJlcXVlc3QuZXJyb3IpO1xuICAgICAgICAgICAgdW5saXN0ZW4oKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdzdWNjZXNzJywgc3VjY2Vzcyk7XG4gICAgICAgIHJlcXVlc3QuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCBlcnJvcik7XG4gICAgfSk7XG4gICAgcHJvbWlzZVxuICAgICAgICAudGhlbigodmFsdWUpID0+IHtcbiAgICAgICAgLy8gU2luY2UgY3Vyc29yaW5nIHJldXNlcyB0aGUgSURCUmVxdWVzdCAoKnNpZ2gqKSwgd2UgY2FjaGUgaXQgZm9yIGxhdGVyIHJldHJpZXZhbFxuICAgICAgICAvLyAoc2VlIHdyYXBGdW5jdGlvbikuXG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIElEQkN1cnNvcikge1xuICAgICAgICAgICAgY3Vyc29yUmVxdWVzdE1hcC5zZXQodmFsdWUsIHJlcXVlc3QpO1xuICAgICAgICB9XG4gICAgICAgIC8vIENhdGNoaW5nIHRvIGF2b2lkIFwiVW5jYXVnaHQgUHJvbWlzZSBleGNlcHRpb25zXCJcbiAgICB9KVxuICAgICAgICAuY2F0Y2goKCkgPT4geyB9KTtcbiAgICAvLyBUaGlzIG1hcHBpbmcgZXhpc3RzIGluIHJldmVyc2VUcmFuc2Zvcm1DYWNoZSBidXQgZG9lc24ndCBkb2Vzbid0IGV4aXN0IGluIHRyYW5zZm9ybUNhY2hlLiBUaGlzXG4gICAgLy8gaXMgYmVjYXVzZSB3ZSBjcmVhdGUgbWFueSBwcm9taXNlcyBmcm9tIGEgc2luZ2xlIElEQlJlcXVlc3QuXG4gICAgcmV2ZXJzZVRyYW5zZm9ybUNhY2hlLnNldChwcm9taXNlLCByZXF1ZXN0KTtcbiAgICByZXR1cm4gcHJvbWlzZTtcbn1cbmZ1bmN0aW9uIGNhY2hlRG9uZVByb21pc2VGb3JUcmFuc2FjdGlvbih0eCkge1xuICAgIC8vIEVhcmx5IGJhaWwgaWYgd2UndmUgYWxyZWFkeSBjcmVhdGVkIGEgZG9uZSBwcm9taXNlIGZvciB0aGlzIHRyYW5zYWN0aW9uLlxuICAgIGlmICh0cmFuc2FjdGlvbkRvbmVNYXAuaGFzKHR4KSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IGRvbmUgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGNvbnN0IHVubGlzdGVuID0gKCkgPT4ge1xuICAgICAgICAgICAgdHgucmVtb3ZlRXZlbnRMaXN0ZW5lcignY29tcGxldGUnLCBjb21wbGV0ZSk7XG4gICAgICAgICAgICB0eC5yZW1vdmVFdmVudExpc3RlbmVyKCdlcnJvcicsIGVycm9yKTtcbiAgICAgICAgICAgIHR4LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgZXJyb3IpO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBjb21wbGV0ZSA9ICgpID0+IHtcbiAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICAgIHVubGlzdGVuKCk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGVycm9yID0gKCkgPT4ge1xuICAgICAgICAgICAgcmVqZWN0KHR4LmVycm9yIHx8IG5ldyBET01FeGNlcHRpb24oJ0Fib3J0RXJyb3InLCAnQWJvcnRFcnJvcicpKTtcbiAgICAgICAgICAgIHVubGlzdGVuKCk7XG4gICAgICAgIH07XG4gICAgICAgIHR4LmFkZEV2ZW50TGlzdGVuZXIoJ2NvbXBsZXRlJywgY29tcGxldGUpO1xuICAgICAgICB0eC5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIGVycm9yKTtcbiAgICAgICAgdHguYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBlcnJvcik7XG4gICAgfSk7XG4gICAgLy8gQ2FjaGUgaXQgZm9yIGxhdGVyIHJldHJpZXZhbC5cbiAgICB0cmFuc2FjdGlvbkRvbmVNYXAuc2V0KHR4LCBkb25lKTtcbn1cbmxldCBpZGJQcm94eVRyYXBzID0ge1xuICAgIGdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSB7XG4gICAgICAgIGlmICh0YXJnZXQgaW5zdGFuY2VvZiBJREJUcmFuc2FjdGlvbikge1xuICAgICAgICAgICAgLy8gU3BlY2lhbCBoYW5kbGluZyBmb3IgdHJhbnNhY3Rpb24uZG9uZS5cbiAgICAgICAgICAgIGlmIChwcm9wID09PSAnZG9uZScpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zYWN0aW9uRG9uZU1hcC5nZXQodGFyZ2V0KTtcbiAgICAgICAgICAgIC8vIFBvbHlmaWxsIGZvciBvYmplY3RTdG9yZU5hbWVzIGJlY2F1c2Ugb2YgRWRnZS5cbiAgICAgICAgICAgIGlmIChwcm9wID09PSAnb2JqZWN0U3RvcmVOYW1lcycpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0Lm9iamVjdFN0b3JlTmFtZXMgfHwgdHJhbnNhY3Rpb25TdG9yZU5hbWVzTWFwLmdldCh0YXJnZXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gTWFrZSB0eC5zdG9yZSByZXR1cm4gdGhlIG9ubHkgc3RvcmUgaW4gdGhlIHRyYW5zYWN0aW9uLCBvciB1bmRlZmluZWQgaWYgdGhlcmUgYXJlIG1hbnkuXG4gICAgICAgICAgICBpZiAocHJvcCA9PT0gJ3N0b3JlJykge1xuICAgICAgICAgICAgICAgIHJldHVybiByZWNlaXZlci5vYmplY3RTdG9yZU5hbWVzWzFdXG4gICAgICAgICAgICAgICAgICAgID8gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgIDogcmVjZWl2ZXIub2JqZWN0U3RvcmUocmVjZWl2ZXIub2JqZWN0U3RvcmVOYW1lc1swXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gRWxzZSB0cmFuc2Zvcm0gd2hhdGV2ZXIgd2UgZ2V0IGJhY2suXG4gICAgICAgIHJldHVybiB3cmFwKHRhcmdldFtwcm9wXSk7XG4gICAgfSxcbiAgICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkge1xuICAgICAgICB0YXJnZXRbcHJvcF0gPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcbiAgICBoYXModGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgIGlmICh0YXJnZXQgaW5zdGFuY2VvZiBJREJUcmFuc2FjdGlvbiAmJlxuICAgICAgICAgICAgKHByb3AgPT09ICdkb25lJyB8fCBwcm9wID09PSAnc3RvcmUnKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHByb3AgaW4gdGFyZ2V0O1xuICAgIH0sXG59O1xuZnVuY3Rpb24gcmVwbGFjZVRyYXBzKGNhbGxiYWNrKSB7XG4gICAgaWRiUHJveHlUcmFwcyA9IGNhbGxiYWNrKGlkYlByb3h5VHJhcHMpO1xufVxuZnVuY3Rpb24gd3JhcEZ1bmN0aW9uKGZ1bmMpIHtcbiAgICAvLyBEdWUgdG8gZXhwZWN0ZWQgb2JqZWN0IGVxdWFsaXR5ICh3aGljaCBpcyBlbmZvcmNlZCBieSB0aGUgY2FjaGluZyBpbiBgd3JhcGApLCB3ZVxuICAgIC8vIG9ubHkgY3JlYXRlIG9uZSBuZXcgZnVuYyBwZXIgZnVuYy5cbiAgICAvLyBFZGdlIGRvZXNuJ3Qgc3VwcG9ydCBvYmplY3RTdG9yZU5hbWVzIChib29vKSwgc28gd2UgcG9seWZpbGwgaXQgaGVyZS5cbiAgICBpZiAoZnVuYyA9PT0gSURCRGF0YWJhc2UucHJvdG90eXBlLnRyYW5zYWN0aW9uICYmXG4gICAgICAgICEoJ29iamVjdFN0b3JlTmFtZXMnIGluIElEQlRyYW5zYWN0aW9uLnByb3RvdHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChzdG9yZU5hbWVzLCAuLi5hcmdzKSB7XG4gICAgICAgICAgICBjb25zdCB0eCA9IGZ1bmMuY2FsbCh1bndyYXAodGhpcyksIHN0b3JlTmFtZXMsIC4uLmFyZ3MpO1xuICAgICAgICAgICAgdHJhbnNhY3Rpb25TdG9yZU5hbWVzTWFwLnNldCh0eCwgc3RvcmVOYW1lcy5zb3J0ID8gc3RvcmVOYW1lcy5zb3J0KCkgOiBbc3RvcmVOYW1lc10pO1xuICAgICAgICAgICAgcmV0dXJuIHdyYXAodHgpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICAvLyBDdXJzb3IgbWV0aG9kcyBhcmUgc3BlY2lhbCwgYXMgdGhlIGJlaGF2aW91ciBpcyBhIGxpdHRsZSBtb3JlIGRpZmZlcmVudCB0byBzdGFuZGFyZCBJREIuIEluXG4gICAgLy8gSURCLCB5b3UgYWR2YW5jZSB0aGUgY3Vyc29yIGFuZCB3YWl0IGZvciBhIG5ldyAnc3VjY2Vzcycgb24gdGhlIElEQlJlcXVlc3QgdGhhdCBnYXZlIHlvdSB0aGVcbiAgICAvLyBjdXJzb3IuIEl0J3Mga2luZGEgbGlrZSBhIHByb21pc2UgdGhhdCBjYW4gcmVzb2x2ZSB3aXRoIG1hbnkgdmFsdWVzLiBUaGF0IGRvZXNuJ3QgbWFrZSBzZW5zZVxuICAgIC8vIHdpdGggcmVhbCBwcm9taXNlcywgc28gZWFjaCBhZHZhbmNlIG1ldGhvZHMgcmV0dXJucyBhIG5ldyBwcm9taXNlIGZvciB0aGUgY3Vyc29yIG9iamVjdCwgb3JcbiAgICAvLyB1bmRlZmluZWQgaWYgdGhlIGVuZCBvZiB0aGUgY3Vyc29yIGhhcyBiZWVuIHJlYWNoZWQuXG4gICAgaWYgKGdldEN1cnNvckFkdmFuY2VNZXRob2RzKCkuaW5jbHVkZXMoZnVuYykpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgICAgICAgICAvLyBDYWxsaW5nIHRoZSBvcmlnaW5hbCBmdW5jdGlvbiB3aXRoIHRoZSBwcm94eSBhcyAndGhpcycgY2F1c2VzIElMTEVHQUwgSU5WT0NBVElPTiwgc28gd2UgdXNlXG4gICAgICAgICAgICAvLyB0aGUgb3JpZ2luYWwgb2JqZWN0LlxuICAgICAgICAgICAgZnVuYy5hcHBseSh1bndyYXAodGhpcyksIGFyZ3MpO1xuICAgICAgICAgICAgcmV0dXJuIHdyYXAoY3Vyc29yUmVxdWVzdE1hcC5nZXQodGhpcykpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgICAgLy8gQ2FsbGluZyB0aGUgb3JpZ2luYWwgZnVuY3Rpb24gd2l0aCB0aGUgcHJveHkgYXMgJ3RoaXMnIGNhdXNlcyBJTExFR0FMIElOVk9DQVRJT04sIHNvIHdlIHVzZVxuICAgICAgICAvLyB0aGUgb3JpZ2luYWwgb2JqZWN0LlxuICAgICAgICByZXR1cm4gd3JhcChmdW5jLmFwcGx5KHVud3JhcCh0aGlzKSwgYXJncykpO1xuICAgIH07XG59XG5mdW5jdGlvbiB0cmFuc2Zvcm1DYWNoYWJsZVZhbHVlKHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJylcbiAgICAgICAgcmV0dXJuIHdyYXBGdW5jdGlvbih2YWx1ZSk7XG4gICAgLy8gVGhpcyBkb2Vzbid0IHJldHVybiwgaXQganVzdCBjcmVhdGVzIGEgJ2RvbmUnIHByb21pc2UgZm9yIHRoZSB0cmFuc2FjdGlvbixcbiAgICAvLyB3aGljaCBpcyBsYXRlciByZXR1cm5lZCBmb3IgdHJhbnNhY3Rpb24uZG9uZSAoc2VlIGlkYk9iamVjdEhhbmRsZXIpLlxuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIElEQlRyYW5zYWN0aW9uKVxuICAgICAgICBjYWNoZURvbmVQcm9taXNlRm9yVHJhbnNhY3Rpb24odmFsdWUpO1xuICAgIGlmIChpbnN0YW5jZU9mQW55KHZhbHVlLCBnZXRJZGJQcm94eWFibGVUeXBlcygpKSlcbiAgICAgICAgcmV0dXJuIG5ldyBQcm94eSh2YWx1ZSwgaWRiUHJveHlUcmFwcyk7XG4gICAgLy8gUmV0dXJuIHRoZSBzYW1lIHZhbHVlIGJhY2sgaWYgd2UncmUgbm90IGdvaW5nIHRvIHRyYW5zZm9ybSBpdC5cbiAgICByZXR1cm4gdmFsdWU7XG59XG5mdW5jdGlvbiB3cmFwKHZhbHVlKSB7XG4gICAgLy8gV2Ugc29tZXRpbWVzIGdlbmVyYXRlIG11bHRpcGxlIHByb21pc2VzIGZyb20gYSBzaW5nbGUgSURCUmVxdWVzdCAoZWcgd2hlbiBjdXJzb3JpbmcpLCBiZWNhdXNlXG4gICAgLy8gSURCIGlzIHdlaXJkIGFuZCBhIHNpbmdsZSBJREJSZXF1ZXN0IGNhbiB5aWVsZCBtYW55IHJlc3BvbnNlcywgc28gdGhlc2UgY2FuJ3QgYmUgY2FjaGVkLlxuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIElEQlJlcXVlc3QpXG4gICAgICAgIHJldHVybiBwcm9taXNpZnlSZXF1ZXN0KHZhbHVlKTtcbiAgICAvLyBJZiB3ZSd2ZSBhbHJlYWR5IHRyYW5zZm9ybWVkIHRoaXMgdmFsdWUgYmVmb3JlLCByZXVzZSB0aGUgdHJhbnNmb3JtZWQgdmFsdWUuXG4gICAgLy8gVGhpcyBpcyBmYXN0ZXIsIGJ1dCBpdCBhbHNvIHByb3ZpZGVzIG9iamVjdCBlcXVhbGl0eS5cbiAgICBpZiAodHJhbnNmb3JtQ2FjaGUuaGFzKHZhbHVlKSlcbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybUNhY2hlLmdldCh2YWx1ZSk7XG4gICAgY29uc3QgbmV3VmFsdWUgPSB0cmFuc2Zvcm1DYWNoYWJsZVZhbHVlKHZhbHVlKTtcbiAgICAvLyBOb3QgYWxsIHR5cGVzIGFyZSB0cmFuc2Zvcm1lZC5cbiAgICAvLyBUaGVzZSBtYXkgYmUgcHJpbWl0aXZlIHR5cGVzLCBzbyB0aGV5IGNhbid0IGJlIFdlYWtNYXAga2V5cy5cbiAgICBpZiAobmV3VmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgIHRyYW5zZm9ybUNhY2hlLnNldCh2YWx1ZSwgbmV3VmFsdWUpO1xuICAgICAgICByZXZlcnNlVHJhbnNmb3JtQ2FjaGUuc2V0KG5ld1ZhbHVlLCB2YWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiBuZXdWYWx1ZTtcbn1cbmNvbnN0IHVud3JhcCA9ICh2YWx1ZSkgPT4gcmV2ZXJzZVRyYW5zZm9ybUNhY2hlLmdldCh2YWx1ZSk7XG5cbmV4cG9ydHMuaW5zdGFuY2VPZkFueSA9IGluc3RhbmNlT2ZBbnk7XG5leHBvcnRzLnJlcGxhY2VUcmFwcyA9IHJlcGxhY2VUcmFwcztcbmV4cG9ydHMucmV2ZXJzZVRyYW5zZm9ybUNhY2hlID0gcmV2ZXJzZVRyYW5zZm9ybUNhY2hlO1xuZXhwb3J0cy51bndyYXAgPSB1bndyYXA7XG5leHBvcnRzLndyYXAgPSB3cmFwO1xuIiwiaW1wb3J0IHsgQ2hhdFN0eWxlLCBDb2xvcnMsIFBsYXllciwgUm9vbSB9IGZyb20gXCJoYXhiYWxsLWV4dGVuZGVkLXJvb21cIjtcclxuaW1wb3J0IEhvY2tleU1hcCBmcm9tIFwiLi9tYXBzL2hvY2tleS5qc29uXCJcclxuaW1wb3J0IGluc2lkZUJsdWVCb3ggZnJvbSBcIi4vZnVuY3Rpb25zL2luc2lkZUJsdWVCb3hcIjtcclxuaW1wb3J0IGluc2lkZVJlZEJveCBmcm9tIFwiLi9mdW5jdGlvbnMvaW5zaWRlUmVkQm94XCI7XHJcbmltcG9ydCByZWFkQ29tbWFuZCBmcm9tIFwiLi9jb21tYW5kcy9Db21tYW5kc1wiO1xyXG5pbXBvcnQgdG91Y2hlZERpc2MgZnJvbSBcIi4vZnVuY3Rpb25zL3RvdWNoZWREaXNjXCI7XHJcbmltcG9ydCBwZW5hbHR5RGV0ZWN0ZWQgZnJvbSBcIi4vZnVuY3Rpb25zL3BlbmFsdHlEZXRlY3RlZFwiO1xyXG5pbXBvcnQgeyBwbGF5ZXJzTGlzdCwgcmVtb3ZlUGxheWVyIH0gZnJvbSBcIi4vcGxheWVycy9wbGF5ZXJzXCI7XHJcbmltcG9ydCB7IHJlZFRlYW0sIHVwZGF0ZVJlZFRlYW1QbGF5ZXJzIH0gZnJvbSBcIi4vcGxheWVycy9yZWRUZWFtXCI7XHJcbmltcG9ydCB7IGJsdWVUZWFtLCB1cGRhdGVCbHVlVGVhbVBsYXllcnMgfSBmcm9tIFwiLi9wbGF5ZXJzL2JsdWVUZWFtXCI7XHJcbmltcG9ydCBnb2FsaWVJbGxlZ2FsVG91Y2gsIHsgZ29hbGllT3V0c2lkZUJveCB9IGZyb20gXCIuL2Z1bmN0aW9ucy9nb2FsaWVJbGxlZ2FsVG91Y2hcIjtcclxuaW1wb3J0IGRldGVjdExhc3RUZWFtVG91Y2gsIHsgbGFzdFRlYW1Ub3VjaGVkIH0gZnJvbSBcIi4vZnVuY3Rpb25zL2RldGVjdExhc3RUZWFtVG91Y2hcIjtcclxuaW1wb3J0IGlsbGVnYWxUb3VjaEluUmVkQm94IGZyb20gXCIuL2Z1bmN0aW9ucy9pbGxlZ2FsVG91Y2hJblJlZEJveFwiO1xyXG5pbXBvcnQgaWxsZWdhbFRvdWNoSW5CbHVlQm94IGZyb20gXCIuL2Z1bmN0aW9ucy9pbGxlZ2FsVG91Y2hJbkJsdWVCb3hcIjtcclxuaW1wb3J0IGtpY2tvZmZBZnRlck1pc3NlZFBlbmFsdHkgZnJvbSBcIi4vZnVuY3Rpb25zL2tpY2tvZmZBZnRlck1pc3NlZFBlbmFsdHlcIjtcclxuaW1wb3J0IGtpY2tvZmYgZnJvbSBcIi4vZnVuY3Rpb25zL2tpY2tvZmZcIjtcclxuaW1wb3J0IGdvYWxpZUJ1bXBQZW5hbHR5IGZyb20gXCIuL2Z1bmN0aW9ucy9nb2FsaWVCdW1wUGVuYWx0eVwiO1xyXG5pbXBvcnQgcGxheWVyQnVtcCBmcm9tIFwiLi9mdW5jdGlvbnMvcGxheWVyQnVtcFwiO1xyXG5pbXBvcnQgaGVhZGluZ1Rvd2FyZHNHb2FsIGZyb20gXCIuL2Z1bmN0aW9ucy9oZWFkaW5nVG93YXJkc0dvYWxcIjtcclxuaW1wb3J0IHBlbmFsdHlUaW1lciBmcm9tIFwiLi9mdW5jdGlvbnMvcGVuYWx0eVRpbWVyXCI7XHJcbmltcG9ydCBtaXNzZWRQZW5hbHR5IGZyb20gXCIuL2Z1bmN0aW9ucy9NaXNzZWRQZW5hbHR5XCI7XHJcblxyXG4vLyBtZWxob3JhciBvIHBhc3NlIHBybyBna1xyXG4vLyBwZW5hbHR5XHJcblxyXG5jb25zdCByb29tID0gbmV3IFJvb20oe1xyXG4gICAgcHVibGljOiBmYWxzZSxcclxuICAgIG1heFBsYXllcnM6IDE2LFxyXG4gICAgcm9vbU5hbWU6IGBIb2NrZXkgY29tIGJvdGBcclxufSk7XHJcblxyXG5yb29tLm9uUGxheWVySm9pbiA9IGZ1bmN0aW9uIChwbGF5ZXI6UGxheWVyKSB7XHJcbiAgICBpZiAocm9vbS5wbGF5ZXJzLmFkbWlucygpLnNpemUgPT0gMCkge1xyXG4gICAgICAgIHBsYXllci5hZG1pbiA9IHRydWVcclxuICAgICAgICByb29tLnNldFN0YWRpdW0oSG9ja2V5TWFwKVxyXG4gICAgfSBcclxuICAgIHBsYXllci5zZXRBdmF0YXIocGxheWVyLm5hbWUucmVwbGFjZSgvW15cXHdcXHNdL2dpLCAnJykuc2xpY2UoMCwgMikpXHJcbiAgICBwbGF5ZXJzTGlzdC5wdXNoKHBsYXllcilcclxufVxyXG5cclxucm9vbS5vblBsYXllckxlYXZlID0gZnVuY3Rpb24gKHBsYXllcikge1xyXG4gICAgaWYgKHJvb20ucGxheWVycy5hZG1pbnMoKS5zaXplID09IDApIHtcclxuICAgICAgICBpZiAocGxheWVyLmlkID09IHBsYXllcnNMaXN0WzBdLmlkKSB7XHJcbiAgICAgICAgICAgIHBsYXllcnNMaXN0WzFdLmFkbWluID0gdHJ1ZVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHBsYXllcnNMaXN0WzBdLmFkbWluID0gdHJ1ZVxyXG4gICAgICAgIH1cclxuICAgIH0gXHJcbiAgICBwbGF5ZXIuc2V0dGluZ3MuZ29hbGllID0gMFxyXG4gICAgcmVtb3ZlUGxheWVyKHBsYXllci5pZClcclxufVxyXG5cclxucm9vbS5vblBsYXllclRlYW1DaGFuZ2UgPSBmdW5jdGlvbiAocGxheWVyKSB7XHJcbiAgICBwbGF5ZXIuc2V0dGluZ3MuZ29hbGllID0gMFxyXG4gICAgcGxheWVyLnNldEF2YXRhcihwbGF5ZXIubmFtZS5yZXBsYWNlKC9bXlxcd1xcc10vZ2ksICcnKS5zbGljZSgwLCAyKSlcclxuICAgIHVwZGF0ZVJlZFRlYW1QbGF5ZXJzKHJvb20pXHJcbiAgICB1cGRhdGVCbHVlVGVhbVBsYXllcnMocm9vbSlcclxufVxyXG5cclxucm9vbS5vbkdhbWVUaWNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZWRUZWFtLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICBnb2FsaWVJbGxlZ2FsVG91Y2gocmVkVGVhbVtpXSwgcm9vbSlcclxuICAgICAgICBpbGxlZ2FsVG91Y2hJblJlZEJveChyZWRUZWFtW2ldLCByb29tKVxyXG4gICAgICAgIHRvdWNoZWREaXNjKHJvb20sIHJlZFRlYW1baV0pXHJcbiAgICAgICAgcGxheWVyQnVtcChyb29tLCByZWRUZWFtW2ldKVxyXG4gICAgfVxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBibHVlVGVhbS5sZW5ndGg7IGkrKykgeyBcclxuICAgICAgICBnb2FsaWVJbGxlZ2FsVG91Y2goYmx1ZVRlYW1baV0sIHJvb20pXHJcbiAgICAgICAgaWxsZWdhbFRvdWNoSW5CbHVlQm94KGJsdWVUZWFtW2ldLCByb29tKSAgXHJcbiAgICAgICAgdG91Y2hlZERpc2Mocm9vbSwgYmx1ZVRlYW1baV0pXHJcbiAgICAgICAgcGxheWVyQnVtcChyb29tLCBibHVlVGVhbVtpXSlcclxuICAgIH1cclxuICAgIGlmIChyb29tLnNldHRpbmdzLm1vZGUgPT09IFwicGVucmVkXCIpIHtcclxuICAgICAgICBwZW5hbHR5VGltZXIocm9vbSlcclxuICAgICAgICBtaXNzZWRQZW5hbHR5KHJvb20sIFwicGVucmVkXCIpXHJcbiAgICB9IGVsc2UgaWYgKHJvb20uc2V0dGluZ3MubW9kZSA9PT0gXCJwZW5ibHVlXCIpIHtcclxuICAgICAgICBwZW5hbHR5VGltZXIocm9vbSlcclxuICAgICAgICBtaXNzZWRQZW5hbHR5KHJvb20sIFwicGVuYmx1ZVwiKVxyXG4gICAgfVxyXG59XHJcblxyXG5yb29tLm9uUGxheWVyQ2hhdCA9IGZ1bmN0aW9uIChwbGF5ZXIsIG1lc3NhZ2UpIHtcclxuICAgIGlmIChtZXNzYWdlLnN0YXJ0c1dpdGgoXCIhXCIpKSB7XHJcbiAgICAgICAgcmVhZENvbW1hbmQobWVzc2FnZSwgcGxheWVyLCByb29tKVxyXG4gICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgfVxyXG4gICAgaWYgKHJvb20uc2V0dGluZ3MuY2hhdG11dGVkKSByZXR1cm4gZmFsc2VcclxuXHJcbn1cclxuXHJcbnJvb20ub25QbGF5ZXJCYWxsS2ljayA9IGZ1bmN0aW9uIChwbGF5ZXIpIHtcclxuICAgIGlmIChwbGF5ZXIudGVhbSA9PSAxKSB7XHJcbiAgICAgICAgaWYgKCFwbGF5ZXIuc2V0dGluZ3MuZ29hbGllICYmICFwbGF5ZXIuc2V0dGluZ3MucGVuYWx0eUdvYWxpZSkge1xyXG4gICAgICAgICAgICBpZiAoaW5zaWRlUmVkQm94KHBsYXllci54LCBwbGF5ZXIueSkpIHtcclxuICAgICAgICAgICAgICAgIHBlbmFsdHlEZXRlY3RlZChwbGF5ZXIsIFwiTyBhbmltYWwgcGVnb3UgYSBib2xhIGRlbnRybyBkYSDDoXJlYSBzZW0gc2VyIGdvbGVpcm8hXCIsIHJvb20sIDEpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfSBlbHNlIGlmIChwbGF5ZXIuc2V0dGluZ3MuZ29hbGllIHx8IHBsYXllci5zZXR0aW5ncy5wZW5hbHR5R29hbGllKSB7XHJcbiAgICAgICAgICAgIGlmIChnb2FsaWVPdXRzaWRlQm94KHBsYXllcikpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHByZXZpb3VzVG91Y2hPbkRpc2MgPSBsYXN0VGVhbVRvdWNoZWRcclxuICAgICAgICAgICAgICAgIGlmIChwcmV2aW91c1RvdWNoT25EaXNjICE9PSBwbGF5ZXIudGVhbSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBlbmFsdHlEZXRlY3RlZChwbGF5ZXIsIFwiTyBhbmltYWwgdG9jb3Ugbm8gZGlzY28gZm9yYSBkYSBhcmVhIGRlIGdvbGVpcm8gYXBvcyBvIHRvcXVlIGRvIGFkdmVyc8OhcmlvXCIsIHJvb20sIDEpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKHBsYXllci50ZWFtID09IDIpIHtcclxuICAgICAgICBpZiAoIXBsYXllci5zZXR0aW5ncy5nb2FsaWUgJiYgIXBsYXllci5zZXR0aW5ncy5wZW5hbHR5R29hbGllKSB7XHJcbiAgICAgICAgICAgIGlmIChpbnNpZGVCbHVlQm94KHBsYXllci54LCBwbGF5ZXIueSkpIHtcclxuICAgICAgICAgICAgICAgIHBlbmFsdHlEZXRlY3RlZChwbGF5ZXIsIFwiTyBhbmltYWwgcGVnb3UgYSBib2xhIGRlbnRybyBkYSDDoXJlYSBzZW0gc2VyIGdvbGVpcm8hXCIsIHJvb20sIDIpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2UgaWYgKHBsYXllci5zZXR0aW5ncy5nb2FsaWUgfHwgcGxheWVyLnNldHRpbmdzLnBlbmFsdHlHb2FsaWUpIHtcclxuICAgICAgICAgICAgaWYgKGdvYWxpZU91dHNpZGVCb3gocGxheWVyKSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcHJldmlvdXNUb3VjaE9uRGlzYyA9IGxhc3RUZWFtVG91Y2hlZFxyXG4gICAgICAgICAgICAgICAgaWYgKHByZXZpb3VzVG91Y2hPbkRpc2MgIT09IHBsYXllci50ZWFtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGVuYWx0eURldGVjdGVkKHBsYXllciwgXCJPIGFuaW1hbCB0b2NvdSBubyBkaXNjbyBmb3JhIGRhIGFyZWEgZGUgZ29sZWlybyBhcG9zIG8gdG9xdWUgZG8gYWR2ZXJzw6FyaW9cIiwgcm9vbSwgMikgICBcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGRldGVjdExhc3RUZWFtVG91Y2gocGxheWVyLnRlYW0pXHJcbn1cclxucm9vbS5vblRlYW1Hb2FsID0gZnVuY3Rpb24gKHRlYW0pIHtcclxuICAgIGlmIChyb29tLnNldHRpbmdzLnBlbmFsdHkpIHtcclxuICAgICAgICByb29tLnNlbmQoeyBtZXNzYWdlOiBgR29sISBTZWd1ZSBvIGpvZ28hYCwgY29sb3I6IHRlYW0gPT0gMSA/IENvbG9ycy5Dcmltc29uIDogQ29sb3JzLkNvcm5mbG93ZXJCbHVlLCBzdHlsZTogXCJib2xkXCIgfSlcclxuICAgICAgICByb29tLnNldHRpbmdzLnBlbmFsdHkgPSAwXHJcbiAgICB9XHJcbiAgICByb29tLnNldHRpbmdzLnBlbmFsdHlUaW1lciA9IDBcclxuICAgIHJvb20uc2V0dGluZ3MuZGlzYWJsZWRQZW5hbHR5cyA9IHRydWVcclxufVxyXG5cclxucm9vbS5vbkdhbWVTdGFydCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJvb20uc2V0dGluZ3MucGVuYWx0eVRpbWVyID0gMFxyXG4gICAga2lja29mZihyb29tKVxyXG4gICAgcm9vbS5wYXVzZSgpXHJcbiAgICByb29tLnNlbmQoe21lc3NhZ2U6IFwiQ2FkYSB0aW1lIHRlbSBkaXJlaXRvIGEgdW0gR08uLi4uIGRpZ2l0ZSAhZ28gcGFyYSBzZXIgbyBnb2xlaXJvXCIsIGNvbG9yOiBDb2xvcnMuR29sZCwgc3R5bGU6IFwiYm9sZFwifSlcclxuICAgIHJvb20uc2VuZCh7IG1lc3NhZ2U6IFwiT3Ugam9nYSBzZW0gZ29sZWlybyBlIGZkYyBldSBuw6NvIGxpZ28uLi5cIiwgY29sb3I6IENvbG9ycy5HcmF5LCBzdHlsZTogXCJpdGFsaWNcIiB9KVxyXG59XHJcblxyXG5yb29tLm9uUG9zaXRpb25zUmVzZXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBraWNrb2ZmKHJvb20pXHJcbn1cclxuIiwiaW1wb3J0IHsgQ29sb3JzLCBQbGF5ZXIsIFBsYXllckxpc3QsIFJvb20gfSBmcm9tIFwiaGF4YmFsbC1leHRlbmRlZC1yb29tXCI7XHJcbmltcG9ydCBjaGVja0ZvckdvYWxpZVNldHRpbmcgZnJvbSBcIi4uL2Z1bmN0aW9ucy9jaGVja0ZvckdvYWxpZXNldHRpbmdcIjtcclxuaW1wb3J0IHBlbmFsdHlEZXRlY3RlZCwgeyBzZXRQZW5hbHR5Qmx1ZSwgc2V0UGVuYWx0eVJlZCB9IGZyb20gXCIuLi9mdW5jdGlvbnMvcGVuYWx0eURldGVjdGVkXCI7XHJcbmltcG9ydCBraWNrb2ZmQWZ0ZXJNaXNzZWRQZW5hbHR5IGZyb20gXCIuLi9mdW5jdGlvbnMva2lja29mZkFmdGVyTWlzc2VkUGVuYWx0eVwiO1xyXG5pbXBvcnQga2lja29mZiBmcm9tIFwiLi4vZnVuY3Rpb25zL2tpY2tvZmZcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlYWRDb21tYW5kKG1lc3NhZ2U6IHN0cmluZywgcGxheWVyOiBQbGF5ZXIsIHJvb206IFJvb20pIHtcclxuICAgIHN3aXRjaCAobWVzc2FnZS50b0xvd2VyQ2FzZSgpKSB7XHJcbiAgICAgICAgY2FzZSBcIiFnb1wiOlxyXG4gICAgICAgIGNhc2UgXCIhZ2tcIjpcclxuICAgICAgICBjYXNlIFwiIWdvYWxpZVwiOlxyXG4gICAgICAgICAgICBpZiAocGxheWVyLnRlYW0gPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHJlZEhhc0dvYWxpZSA9IGNoZWNrRm9yR29hbGllU2V0dGluZyhyb29tLnBsYXllcnMucmVkKCksIDEpXHJcbiAgICAgICAgICAgICAgICBpZiAocmVkSGFzR29hbGllKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGxheWVyLnJlcGx5KHttZXNzYWdlOiBcIkphIHRlbSBnb2xlaXJvIG5vIFJlZFwiLCBjb2xvcjogQ29sb3JzLkhvdFBpbmt9IClcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGxheWVyLnNldHRpbmdzLmdvYWxpZSA9IDFcclxuICAgICAgICAgICAgICAgICAgICBwbGF5ZXIuc2V0QXZhdGFyKFwi8J+npFwiKVxyXG4gICAgICAgICAgICAgICAgICAgIHBsYXllci5yZXBseSh7IG1lc3NhZ2U6IFwiUGFyYSByZW1vdmVyIGEgcG9zacOnw6NvIGRlIGdvYWxpZSBkaWdpdGUgIWxpXCIsIGNvbG9yOiBDb2xvcnMuSG90UGluayB9KVxyXG4gICAgICAgICAgICAgICAgICAgIHJvb20uc2VuZCh7IG1lc3NhZ2U6IGAke3BsYXllci5uYW1lfSDDqSBvIEdvYWxpZSBkbyBSZWRgLCBjb2xvcjogQ29sb3JzLkNyaW1zb259KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHBsYXllci50ZWFtID09IDIpIHtcclxuICAgICAgICAgICAgICAgIHZhciBibHVlSGFzR29hbGllID0gY2hlY2tGb3JHb2FsaWVTZXR0aW5nKHJvb20ucGxheWVycy5ibHVlKCksIDIpXHJcbiAgICAgICAgICAgICAgICBpZiAoYmx1ZUhhc0dvYWxpZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBsYXllci5yZXBseSh7IG1lc3NhZ2U6IFwiSmEgdGVtIGdvbGVpcm8gbm8gQmx1ZVwiLCBjb2xvcjogQ29sb3JzLkRvZGdlckJsdWUgfSlcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGxheWVyLnNldHRpbmdzLmdvYWxpZSA9IDJcclxuICAgICAgICAgICAgICAgICAgICBwbGF5ZXIuc2V0QXZhdGFyKFwi8J+npFwiKVxyXG4gICAgICAgICAgICAgICAgICAgIHBsYXllci5yZXBseSh7IG1lc3NhZ2U6IFwiUGFyYSByZW1vdmVyIGEgcG9zacOnw6NvIGRlIGdvYWxpZSBkaWdpdGUgIWxpXCIsIGNvbG9yOiBDb2xvcnMuRG9kZ2VyQmx1ZSB9KVxyXG4gICAgICAgICAgICAgICAgICAgIHJvb20uc2VuZCh7IG1lc3NhZ2U6IGAke3BsYXllci5uYW1lfSDDqSBvIEdvYWxpZSBkbyBCbHVlYCwgY29sb3I6IENvbG9ycy5Db3JuZmxvd2VyQmx1ZSB9KVxyXG4gICAgICAgICAgICAgICAgfSAgICAgICBcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHBsYXllci5yZXBseSh7IG1lc3NhZ2U6IFwiVHUgdGEgbm8gc3BlYyBkb2lkw6NvXCIsIGNvbG9yOiBDb2xvcnMuRGFya0dvbGRlblJvZH0pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICBjYXNlIFwiIWxpXCI6XHJcbiAgICAgICAgICAgIGlmIChwbGF5ZXIuc2V0dGluZ3MuZ29hbGllKSB7XHJcbiAgICAgICAgICAgICAgICBwbGF5ZXIuc2V0dGluZ3MuZ29hbGllID0gMFxyXG4gICAgICAgICAgICAgICAgcGxheWVyLnNldEF2YXRhcihwbGF5ZXIubmFtZS5yZXBsYWNlKC9bXlxcd1xcc10vZ2ksICcnKS5zbGljZSgwLCAyKSlcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHBsYXllci5yZXBseSh7IG1lc3NhZ2U6IGBUdSBuZW0gZXJhIGdvbGVpcm8uLiB4aXVgLCBjb2xvcjogQ29sb3JzLkRhcmtHb2xkZW5Sb2QgfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBicmVha1xyXG4gICAgICAgIGNhc2UgXCIhcGVucmVkXCI6XHJcbiAgICAgICAgICAgIGlmIChwbGF5ZXIuYWRtaW4pIHtcclxuICAgICAgICAgICAgICAgIHNldFBlbmFsdHlSZWQocm9vbSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBicmVha1xyXG4gICAgICAgIGNhc2UgXCIhcGVuYmx1ZVwiOlxyXG4gICAgICAgICAgICBpZiAocGxheWVyLmFkbWluKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRQZW5hbHR5Qmx1ZShyb29tKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgY2FzZSBcIiFoZWxwXCI6XHJcbiAgICAgICAgY2FzZSBcIiFjb21tYW5kc1wiOlxyXG4gICAgICAgICAgICBwbGF5ZXIucmVwbHkoeyBtZXNzYWdlOiBcIkNvbWFuZG9zIGRpc3Bvbml2ZWlzOiAhZ28sICFsaSwgIXBlbnJlZCwgIXBlbmJsdWUsICFoZWxwLCAhZGlzYywgIXJlc2V0YmFsbCwhcnVsZXNcIiwgY29sb3I6IENvbG9ycy5EYXJrR29sZGVuUm9kfSlcclxuICAgICAgICAgICAgYnJlYWsgXHJcbiAgICAgICAgY2FzZSBcIiFyZXNldGJhbGxcIjpcclxuICAgICAgICBjYXNlIFwiIXJlc2V0XCI6XHJcbiAgICAgICAgICAgIGlmIChwbGF5ZXIuYWRtaW4pIHtcclxuICAgICAgICAgICAgICAgIGlmIChyb29tLmRpc2NzWzBdLnggPCAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAga2lja29mZkFmdGVyTWlzc2VkUGVuYWx0eSgtNTAwLCByb29tKVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChyb29tLmRpc2NzWzBdLnggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAga2lja29mZkFmdGVyTWlzc2VkUGVuYWx0eSg1MDAsIHJvb20pXHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGtpY2tvZmYocm9vbSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBicmVha1xyXG4gICAgICAgIGNhc2UgXCIhZGlzY1wiOlxyXG4gICAgICAgIGNhc2UgXCIhZGlzY29yZFwiOlxyXG4gICAgICAgICAgICBwbGF5ZXIucmVwbHkoeyBtZXNzYWdlOiBcImh0dHBzOi8vZGlzY29yZC5nZy9TSGJ2dHJ0OFwiLCBjb2xvcjogQ29sb3JzLkF6dXJlLCBzdHlsZTogXCJib2xkXCIgfSlcclxuICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICBjYXNlIFwiIXJ1bGVzXCI6XHJcbiAgICAgICAgY2FzZSBcIiFyZWdyYXNcIjpcclxuICAgICAgICAgICAgcGxheWVyLnJlcGx5KHsgbWVzc2FnZTogXCJDYWRhIHRpbWUgdGVtIGRpcmVpdG8gYSB1bShhKSBHb2FsaWUuXCIsIGNvbG9yOiBDb2xvcnMuTWlzdHlSb3NlIH0pO1xyXG4gICAgICAgICAgICBwbGF5ZXIucmVwbHkoeyBtZXNzYWdlOiBcIkdvYWxpZSAtIFPDsyBwb2RlIHBlZ2FyIG8gZGlzY28gZGVudHJvIGRlIHN1YSBwcsOzcHJpYSDDoXJlYTpcIiwgY29sb3I6IENvbG9ycy5NaXN0eVJvc2UgfSk7XHJcbiAgICAgICAgICAgIHBsYXllci5yZXBseSh7IG1lc3NhZ2U6IFwiICAgICAgICAgLSBuYSB6b25hIGRlIGF0YXF1ZSAow6AgZnJlbnRlIGRvIG1laW8tY2FtcG8pLFwiLCBjb2xvcjogQ29sb3JzLk1pc3R5Um9zZSB9KTtcclxuICAgICAgICAgICAgcGxheWVyLnJlcGx5KHsgbWVzc2FnZTogXCIgICAgICAgICAtIG5hIHpvbmEgYXRyw6FzIGRlIHNldSBwcsOzcHJpbyBnb2wsXCIsIGNvbG9yOiBDb2xvcnMuTWlzdHlSb3NlIH0pO1xyXG4gICAgICAgICAgICBwbGF5ZXIucmVwbHkoeyBtZXNzYWdlOiBcIiAgICAgICAgIC0gb3UgYXDDs3MgbyB0b3F1ZSBkZSB1bShhKSBjb21wYW5oZWlybyhhKSBkZSB0aW1lLlwiLCBjb2xvcjogQ29sb3JzLk1pc3R5Um9zZSB9KTtcclxuICAgICAgICAgICAgcGxheWVyLnJlcGx5KHsgbWVzc2FnZTogXCJKb2dhZG9yKGEpIGRlIGxpbmhhIC0gTsOjbyBwb2RlIHBlZ2FyIG8gZGlzY28gZGVudHJvIGRhIMOhcmVhIGRlZmVuc2l2YSxcIiwgY29sb3I6IENvbG9ycy5NaXN0eVJvc2UgfSk7XHJcbiAgICAgICAgICAgIHBsYXllci5yZXBseSh7IG1lc3NhZ2U6IFwiTsOjbyBwb2RlIGludGVyZmVyaXIgY29tIG8oYSkgZ29sZWlybyhhKSBhZHZlcnPDoXJpbyhhKSBjYXNvIGVzdGVqYSBkZW50cm8gZGUgc3VhIHByw7NwcmlhIMOhcmVhLlwiLCBjb2xvcjogQ29sb3JzLk1pc3R5Um9zZSB9KTtcclxuICAgICAgICAgICAgcGxheWVyLnJlcGx5KHsgbWVzc2FnZTogXCJRdWFscXVlciBpbmZyYcOnw6NvIGNhdXNhZGEgcmVzdWx0YXLDoSBlbSB1bSAncGVuYWwnIHBhcmEgbyBhZHZlcnPDoXJpby5cIiwgY29sb3I6IENvbG9ycy5NaXN0eVJvc2UgfSk7XHJcbiAgICAgICAgICAgIHBsYXllci5yZXBseSh7IG1lc3NhZ2U6IFwiT2JzLjogMSBwaXhlbCBkbyhhKSBqb2dhZG9yKGEpIGRlbnRybyBkYSDDoXJlYSDDqSBjb25zaWRlcmFkbyBkZW50cm8uXCIsIGNvbG9yOiBDb2xvcnMuTWlzdHlSb3NlIH0pO1xyXG4gICAgICAgICAgICBwbGF5ZXIucmVwbHkoeyBtZXNzYWdlOiBcIiAgICAgICAgIDEgcGl4ZWwgZG8oYSkgR29hbGllIMOgIGZyZW50ZSBkbyBtZWlvLWNhbXBvIG91IGF0csOhcyBkbyBnb2wgdGFtYsOpbSDDqSBvIHN1ZmljaWVudGUgcGFyYSBuw6NvIHNlciBwZW5hbGl6YWRvKGEpLlwiLCBjb2xvcjogQ29sb3JzLk1pc3R5Um9zZSB9KTtcclxuICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICBjYXNlIFwiIWJiXCI6XHJcbiAgICAgICAgICAgIHBsYXllci5raWNrKClcclxuICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICBkZWZhdWx0IDpcclxuICAgICAgICAgICAgcGxheWVyLnJlcGx5KHttZXNzYWdlOiBcIk7Do28gZW50ZW5kaSB0ZXUgY29tYW5kbyBicm90aGVyXCIsIGNvbG9yOiBDb2xvcnMuRGFya0dvbGRlblJvZH0pXHJcbiAgICAgICAgICAgIGJyZWFrXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBSb29tIH0gZnJvbSBcImhheGJhbGwtZXh0ZW5kZWQtcm9vbVwiXHJcbmltcG9ydCBpbnNpZGVCbHVlQm94IGZyb20gXCIuL2luc2lkZUJsdWVCb3hcIlxyXG5pbXBvcnQga2lja29mZkFmdGVyTWlzc2VkUGVuYWx0eSBmcm9tIFwiLi9raWNrb2ZmQWZ0ZXJNaXNzZWRQZW5hbHR5XCJcclxuaW1wb3J0IGluc2lkZVJlZEJveCBmcm9tIFwiLi9pbnNpZGVSZWRCb3hcIlxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWlzc2VkUGVuYWx0eShyb29tOiBSb29tLCBtb2RlOiBcInBlbnJlZFwiIHwgXCJwZW5ibHVlXCIpIHtcclxuICAgIHN3aXRjaCAobW9kZSkge1xyXG4gICAgICAgIGNhc2UgXCJwZW5yZWRcIjpcclxuICAgICAgICAgICAgaWYgKHJvb20uZGlzY3NbMF0ueCA+PSA3NjApIHtcclxuICAgICAgICAgICAgICAgIGlmIChyb29tLmRpc2NzWzBdLnkgPiA5NyB8fCByb29tLmRpc2NzWzBdLnkgPCAtOTcpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXJvb20uc2V0dGluZ3MucGVuYWx0eSAmJiAhcm9vbS5zZXR0aW5ncy5kaXNhYmxlZFBlbmFsdHlzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGtpY2tvZmZBZnRlck1pc3NlZFBlbmFsdHkoNTAwLCByb29tKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIGlmIChyb29tLmRpc2NzWzBdLnkgPiAyMTAgfHwgcm9vbS5kaXNjc1swXS55IDwgLTIxMCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFyb29tLnNldHRpbmdzLnBlbmFsdHkgJiYgIXJvb20uc2V0dGluZ3MuZGlzYWJsZWRQZW5hbHR5cykge1xyXG4gICAgICAgICAgICAgICAgICAgIGtpY2tvZmZBZnRlck1pc3NlZFBlbmFsdHkoNTAwLCByb29tKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHJvb20uZGlzY3NbMF0ueHNwZWVkIDwgLTAuNSAmJiByb29tLmRpc2NzWzBdLnggPCA3NjAgJiYgIWluc2lkZUJsdWVCb3gocm9vbS5kaXNjc1swXS54LHJvb20uZGlzY3NbMF0ueSkgJiYgcm9vbS5zZXR0aW5ncy5wZW5hbHR5VGltZXIgPiA2MCApIHtcclxuICAgICAgICAgICAgICAgIGlmICghcm9vbS5zZXR0aW5ncy5wZW5hbHR5ICYmICFyb29tLnNldHRpbmdzLmRpc2FibGVkUGVuYWx0eXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBraWNrb2ZmQWZ0ZXJNaXNzZWRQZW5hbHR5KDUwMCwgcm9vbSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIGlmIChyb29tLnNldHRpbmdzLnBlbmFsdHlUaW1lciA+IDYwMCkge1xyXG4gICAgICAgICAgICAgICAga2lja29mZkFmdGVyTWlzc2VkUGVuYWx0eSg1MDAsIHJvb20pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICBjYXNlIFwicGVuYmx1ZVwiOlxyXG4gICAgICAgICAgICBpZiAocm9vbS5kaXNjc1swXS54IDw9IC03NjApIHtcclxuICAgICAgICAgICAgICAgIGlmIChyb29tLmRpc2NzWzBdLnkgPiA5NyB8fCByb29tLmRpc2NzWzBdLnkgPCAtOTcpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXJvb20uc2V0dGluZ3MucGVuYWx0eSAmJiAhcm9vbS5zZXR0aW5ncy5kaXNhYmxlZFBlbmFsdHlzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGtpY2tvZmZBZnRlck1pc3NlZFBlbmFsdHkoLTUwMCwgcm9vbSlcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocm9vbS5kaXNjc1swXS55ID4gMjEwIHx8IHJvb20uZGlzY3NbMF0ueSA8IC0yMTApIHtcclxuICAgICAgICAgICAgICAgIGlmICghcm9vbS5zZXR0aW5ncy5wZW5hbHR5ICYmICFyb29tLnNldHRpbmdzLmRpc2FibGVkUGVuYWx0eXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBraWNrb2ZmQWZ0ZXJNaXNzZWRQZW5hbHR5KC01MDAsIHJvb20pXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocm9vbS5kaXNjc1swXS54c3BlZWQgPiAwLjUgJiYgcm9vbS5kaXNjc1swXS54ID4gLTc2MCAmJiAhaW5zaWRlUmVkQm94KHJvb20uZGlzY3NbMF0ueCxyb29tLmRpc2NzWzBdLnkpICYmIHJvb20uc2V0dGluZ3MucGVuYWx0eVRpbWVyID4gNjAgKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXJvb20uc2V0dGluZ3MucGVuYWx0eSAmJiAhcm9vbS5zZXR0aW5ncy5kaXNhYmxlZFBlbmFsdHlzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAga2lja29mZkFmdGVyTWlzc2VkUGVuYWx0eSgtNTAwLCByb29tKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHJvb20uc2V0dGluZ3MucGVuYWx0eVRpbWVyID4gNjAwKSB7XHJcbiAgICAgICAgICAgICAgICBraWNrb2ZmQWZ0ZXJNaXNzZWRQZW5hbHR5KC01MDAsIHJvb20pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYnJlYWtcclxuICAgIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNhbGN1bGF0ZVRvdGFsU3BlZWQoeFNwZWVkOiBudW1iZXIsIHlTcGVlZDogbnVtYmVyKTogbnVtYmVyIHtcclxuICAgIHJldHVybiBNYXRoLnNxcnQoeFNwZWVkICoqIDIgKyB5U3BlZWQgKiogMik7XHJcbn0iLCJpbXBvcnQgeyBQbGF5ZXJMaXN0IH0gZnJvbSBcImhheGJhbGwtZXh0ZW5kZWQtcm9vbVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY2hlY2tGb3JHb2FsaWVTZXR0aW5nKHBsYXllcnM6IFBsYXllckxpc3QsIHRlYW1JZDogbnVtYmVyKTogYm9vbGVhbiB7XHJcbiAgICBmb3IgKGNvbnN0IHBsYXllcklkIGluIHBsYXllcnMpIHtcclxuICAgICAgICBjb25zdCBwbGF5ZXIgPSBwbGF5ZXJzW3BsYXllcklkXTtcclxuICAgICAgICBpZiAocGxheWVyLnNldHRpbmdzICYmIHBsYXllci5zZXR0aW5ncy5nb2FsaWUgPT09IHRlYW1JZCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTsgLy8gRm91bmQgYSBwbGF5ZXIgd2l0aCBnb2FsaWUgc2V0dGluZ1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBmYWxzZTsgLy8gTm8gcGxheWVyIHdpdGggZ29hbGllIHNldHRpbmcgZm91bmRcclxufSIsImV4cG9ydCB2YXIgbGFzdFRlYW1Ub3VjaGVkOiBudW1iZXIgPSAwXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZXRlY3RMYXN0VGVhbVRvdWNoKHRlYW06IG51bWJlcikge1xyXG4gICAgbGFzdFRlYW1Ub3VjaGVkID0gdGVhbVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGlzdGFuY2VCZXR3ZWVuRG90cyh4MTogbnVtYmVyLCB5MTogbnVtYmVyLCB4MjogbnVtYmVyLCB5MjogbnVtYmVyKTogbnVtYmVyIHtcclxuICAgIHJldHVybiBNYXRoLnNxcnQoKHgyIC0geDEpKioyICsgKHkyIC0geTEpKioyKTtcclxufSIsImltcG9ydCB7IFBsYXllciwgUm9vbSB9IGZyb20gXCJoYXhiYWxsLWV4dGVuZGVkLXJvb21cIjtcclxuaW1wb3J0IHRvdWNoZWREaXNjIGZyb20gXCIuL3RvdWNoZWREaXNjXCI7XHJcbmltcG9ydCBwZW5hbHR5RGV0ZWN0ZWQgZnJvbSBcIi4vcGVuYWx0eURldGVjdGVkXCI7XHJcbmltcG9ydCB7IGxhc3RUZWFtVG91Y2hlZCB9IGZyb20gXCIuL2RldGVjdExhc3RUZWFtVG91Y2hcIjtcclxuaW1wb3J0IGluc2lkZVJlZEJveCBmcm9tIFwiLi9pbnNpZGVSZWRCb3hcIjtcclxuaW1wb3J0IGluc2lkZUJsdWVCb3ggZnJvbSBcIi4vaW5zaWRlQmx1ZUJveFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ29hbGllSWxsZWdhbFRvdWNoKHBsYXllcjogUGxheWVyLCByb29tOiBSb29tKSB7XHJcbiAgICBjb25zdCBwcmV2aW91c1RvdWNoT25EaXNjID0gbGFzdFRlYW1Ub3VjaGVkXHJcbiAgICBpZiAocGxheWVyLnNldHRpbmdzLmdvYWxpZSB8fCBwbGF5ZXIuc2V0dGluZ3MucGVuYWx0eUdvYWxpZSkge1xyXG4gICAgICAgIGlmICh0b3VjaGVkRGlzYyhyb29tLCBwbGF5ZXIpKSB7XHJcbiAgICAgICAgICAgIGlmIChnb2FsaWVPdXRzaWRlQm94KHBsYXllcikpIHtcclxuICAgICAgICAgICAgICAgIGlmIChwcmV2aW91c1RvdWNoT25EaXNjICE9PSBwbGF5ZXIudGVhbSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwbGF5ZXIudGVhbSA9PT0gMil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBlbmFsdHlEZXRlY3RlZChwbGF5ZXIsIFwiTyBhbmltYWwgdG9jb3Ugbm8gZGlzY28gZm9yYSBkYSBhcmVhIGRlIGdvbGVpcm8gYXBvcyBvIHRvcXVlIGRvIGFkdmVyc8OhcmlvXCIsIHJvb20sIDIpICAgXHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwbGF5ZXIudGVhbSA9PT0xKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGVuYWx0eURldGVjdGVkKHBsYXllciwgXCJPIGFuaW1hbCB0b2NvdSBubyBkaXNjbyBmb3JhIGRhIGFyZWEgZGUgZ29sZWlybyBhcG9zIG8gdG9xdWUgZG8gYWR2ZXJzw6FyaW9cIiwgcm9vbSwgMSlcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnb2FsaWVPdXRzaWRlQm94KHBsYXllcjogUGxheWVyKTogYm9vbGVhbntcclxuICAgIHN3aXRjaCAocGxheWVyLnRlYW0pIHtcclxuICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgIGlmICghaW5zaWRlUmVkQm94KHBsYXllci54LCBwbGF5ZXIueSkpe1xyXG4gICAgICAgICAgICAgICAgaWYgKHBsYXllci54IDwgLTE1ICYmIHBsYXllci54ID49IC03NDQpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIGNhc2UgMjpcclxuICAgICAgICAgICAgaWYgKCFpbnNpZGVCbHVlQm94KHBsYXllci54LCBwbGF5ZXIueSkpe1xyXG4gICAgICAgICAgICAgICAgaWYgKHBsYXllci54ID4gMTUgJiYgcGxheWVyLnggPD0gNzQ0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWVcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IFJvb20gfSBmcm9tIFwiaGF4YmFsbC1leHRlbmRlZC1yb29tXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoZWFkaW5nVG93YXJkc0dvYWwoXHJcbiAgICB4SW5pdGlhbDogbnVtYmVyLFxyXG4gICAgeUluaXRpYWw6IG51bWJlcixcclxuICAgIHhWZWxvY2l0eTogbnVtYmVyLFxyXG4gICAgeVZlbG9jaXR5OiBudW1iZXIsXHJcbiAgICB0ZWFtIDogMSB8IDJcclxuKTogYm9vbGVhbiB7XHJcbiAgICB2YXIgZ29hbFhBeGlzID0gNzYwXHJcbiAgICB0ZWFtID09IDI/IGdvYWxYQXhpcyA9IDc2MDogZ29hbFhBeGlzID0gLTc2MFxyXG4gICAgLy8gQ2FsY3VsYXRlIHRpbWUgb2YgaW50ZXJzZWN0aW9uXHJcbiAgICBjb25zdCB0ID0gKGdvYWxYQXhpcyAtIHhJbml0aWFsKSAvIHhWZWxvY2l0eTtcclxuICBcclxuICAgIC8vIENhbGN1bGF0ZSB5LWNvb3JkaW5hdGUgYXQgdGltZSB0IHVzaW5nIHktYXhpcyBtb3Rpb24gZXF1YXRpb25cclxuICAgIGNvbnN0IHlBdEludGVyc2VjdGlvbiA9IHlJbml0aWFsICsgeVZlbG9jaXR5ICogdDtcclxuXHJcbiAgICAvLyBDaGVjayBpZiB0aGUgeS1jb29yZGluYXRlIGZhbGxzIHdpdGhpbiB0aGUgeS1yYW5nZSBvZiB0aGUgbGluZSBzZWdtZW50XHJcbiAgICByZXR1cm4geUF0SW50ZXJzZWN0aW9uID4gLTk3ICYmIHlBdEludGVyc2VjdGlvbiA8IDk3ICYmIHQgPCA4MDtcclxuICB9XHJcbiAgIiwiaW1wb3J0IHsgUGxheWVyLCBSb29tIH0gZnJvbSBcImhheGJhbGwtZXh0ZW5kZWQtcm9vbVwiO1xyXG5pbXBvcnQgaW5zaWRlQmx1ZUJveCBmcm9tIFwiLi9pbnNpZGVCbHVlQm94XCI7XHJcbmltcG9ydCBwZW5hbHR5RGV0ZWN0ZWQgZnJvbSBcIi4vcGVuYWx0eURldGVjdGVkXCI7XHJcbmltcG9ydCB0b3VjaGVkRGlzYyBmcm9tIFwiLi90b3VjaGVkRGlzY1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaWxsZWdhbFRvdWNoSW5CbHVlQm94KHBsYXllcjogUGxheWVyLCByb29tIDogUm9vbSkge1xyXG4gICAgaWYgKGluc2lkZUJsdWVCb3gocGxheWVyLngsIHBsYXllci55KSkge1xyXG4gICAgICAgIGlmICghcGxheWVyLnNldHRpbmdzLmdvYWxpZSAmJiBwbGF5ZXIuc2V0dGluZ3MucGVuYWx0eUdvYWxpZSAhPT0gMikge1xyXG4gICAgICAgICAgICBpZiAodG91Y2hlZERpc2Mocm9vbSwgcGxheWVyKSkge1xyXG4gICAgICAgICAgICAgICAgcGVuYWx0eURldGVjdGVkKHBsYXllciwgXCJPIGFuaW1hbCBwZWdvdSBhIGJvbGEgZGVudHJvIGRhIMOhcmVhIHNlbSBzZXIgZ29sZWlybyFcIiwgcm9vbSwgMilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn1cclxuIiwiaW1wb3J0IHsgUGxheWVyLCBSb29tIH0gZnJvbSBcImhheGJhbGwtZXh0ZW5kZWQtcm9vbVwiO1xyXG5pbXBvcnQgaW5zaWRlUmVkQm94IGZyb20gXCIuL2luc2lkZVJlZEJveFwiO1xyXG5pbXBvcnQgcGVuYWx0eURldGVjdGVkIGZyb20gXCIuL3BlbmFsdHlEZXRlY3RlZFwiO1xyXG5pbXBvcnQgdG91Y2hlZERpc2MgZnJvbSBcIi4vdG91Y2hlZERpc2NcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlsbGVnYWxUb3VjaEluUmVkQm94KHBsYXllcjogUGxheWVyLCByb29tIDogUm9vbSkge1xyXG4gICAgaWYgKGluc2lkZVJlZEJveChwbGF5ZXIueCwgcGxheWVyLnkpKSB7XHJcbiAgICAgICAgaWYgKCFwbGF5ZXIuc2V0dGluZ3MuZ29hbGllICYmIHBsYXllci5zZXR0aW5ncy5wZW5hbHR5R29hbGllICE9PSAxKSB7XHJcbiAgICAgICAgICAgIGlmICh0b3VjaGVkRGlzYyhyb29tLCBwbGF5ZXIpKSB7XHJcbiAgICAgICAgICAgICAgICBwZW5hbHR5RGV0ZWN0ZWQocGxheWVyLCBcIk8gYW5pbWFsIHBlZ291IGEgYm9sYSBkZW50cm8gZGEgw6FyZWEgc2VtIHNlciBnb2xlaXJvIVwiLCByb29tLCAxKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG4iLCJpbXBvcnQgeyBDaGF0U3R5bGUsIENvbG9ycywgUGxheWVyLCBSb29tIH0gZnJvbSBcImhheGJhbGwtZXh0ZW5kZWQtcm9vbVwiO1xyXG5pbXBvcnQgZGlzdGFuY2VCZXR3ZWVuRG90cyBmcm9tIFwiLi9kaXN0YW5jZUJldHdlZW5Eb3RzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbnNpZGVCbHVlQm94KHg6IG51bWJlciwgeTogbnVtYmVyKTogYm9vbGVhbiB7XHJcbiAgICBjb25zdCByYWRpdXMgPSAxMjRcclxuICAgIGNvbnN0IHhDZW50ZXIgPSA3NTdcclxuICAgIGlmICh4ID4geENlbnRlciArIDMpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY29uc3QgZGlzdGFuY2lhID0gZGlzdGFuY2VCZXR3ZWVuRG90cyh4LCB5LCB4Q2VudGVyLCAwKTtcclxuICAgICAgICByZXR1cm4gZGlzdGFuY2lhIDw9IHJhZGl1cztcclxuICAgIH1cclxufSIsImltcG9ydCB7IENoYXRTdHlsZSwgQ29sb3JzLCBQbGF5ZXIsIFJvb20gfSBmcm9tIFwiaGF4YmFsbC1leHRlbmRlZC1yb29tXCI7XHJcbmltcG9ydCBkaXN0YW5jZUJldHdlZW5Eb3RzIGZyb20gXCIuL2Rpc3RhbmNlQmV0d2VlbkRvdHNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluc2lkZVJlZEJveCh4OiBudW1iZXIsIHk6IG51bWJlcik6IGJvb2xlYW4ge1xyXG4gICAgY29uc3QgcmFkaXVzID0gMTI0XHJcbiAgICBjb25zdCB4Q2VudGVyID0gLTc1N1xyXG4gICAgaWYgKHggPCB4Q2VudGVyIC0gMykge1xyXG4gICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zdCBkaXN0YW5jaWEgPSBkaXN0YW5jZUJldHdlZW5Eb3RzKHgsIHksIHhDZW50ZXIsIDApO1xyXG4gICAgICAgIHJldHVybiBkaXN0YW5jaWEgPD0gcmFkaXVzO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgUm9vbSB9IGZyb20gXCJoYXhiYWxsLWV4dGVuZGVkLXJvb21cIjtcclxuaW1wb3J0IHsgYmx1ZVRlYW0sIHVwZGF0ZUJsdWVUZWFtUGxheWVycyB9IGZyb20gXCIuLi9wbGF5ZXJzL2JsdWVUZWFtXCI7XHJcbmltcG9ydCB7IHJlZFRlYW0sIHVwZGF0ZVJlZFRlYW1QbGF5ZXJzIH0gZnJvbSBcIi4uL3BsYXllcnMvcmVkVGVhbVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ga2lja29mZihyb29tIDogUm9vbSkge1xyXG4gICAgbGV0IHJlZFBsYXllclNvcnRlZCA9IDBcclxuICAgIGxldCBibHVlUGxheWVyU29ydGVkID0gMFxyXG5cclxuICAgIHJvb20uc2V0dGluZ3MubW9kZSA9IFwiZ2FtZVwiXHJcbiAgICByb29tLnNldHRpbmdzLmRpc2FibGVkUGVuYWx0eXMgPSBmYWxzZVxyXG4gICAgXHJcblxyXG4gICAgY29uc3QgZGlzYyA9IHJvb20uZGlzY3NbMF1cclxuICAgIGRpc2MueCA9IDBcclxuICAgIGRpc2MueSA9IDBcclxuICAgIGRpc2MueHNwZWVkID0gMFxyXG4gICAgZGlzYy55c3BlZWQgPSAwXHJcblxyXG4gICAgd2hpbGUgKHJlZFRlYW0ubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcmVkVGVhbS5sZW5ndGgpO1xyXG4gICAgICAgIGNvbnN0IHJhbmRvbVJlZFBsYXllciA9IHJlZFRlYW0uc3BsaWNlKHJhbmRvbUluZGV4LCAxKVswXTsgLy8gUmVtb3ZlIGFuZCByZXRyaWV2ZSB0aGUgUGxheWVyXHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKHJhbmRvbVJlZFBsYXllci5zZXR0aW5ncy5wZW5hbHR5R29hbGllKSB7XHJcbiAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci5zZXRBdmF0YXIocmFuZG9tUmVkUGxheWVyLm5hbWUucmVwbGFjZSgvW15cXHdcXHNdL2dpLCAnJykuc2xpY2UoMCwgMikpXHJcbiAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci5zZXR0aW5ncy5wZW5hbHR5R29hbGllID0gMCAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICghcmFuZG9tUmVkUGxheWVyLnNldHRpbmdzLmdvYWxpZSkge1xyXG4gICAgICAgICAgICBpZiAocmVkUGxheWVyU29ydGVkID09IDApIHtcclxuICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54ID0gLTQwXHJcbiAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueSA9IDBcclxuICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueXNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocmVkUGxheWVyU29ydGVkID09IDEpIHtcclxuICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54ID0gLTIwXHJcbiAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueSA9IC0xNTBcclxuICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueXNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocmVkUGxheWVyU29ydGVkID09IDIpIHtcclxuICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54ID0gLTIwXHJcbiAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueSA9IDE1MFxyXG4gICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci55c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChyZWRQbGF5ZXJTb3J0ZWQgPT0gMykge1xyXG4gICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnggPSAtMTUwXHJcbiAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueSA9IDBcclxuICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueXNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocmVkUGxheWVyU29ydGVkID09IDQpIHtcclxuICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54ID0gLTYwMFxyXG4gICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnkgPSAwXHJcbiAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueHNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnlzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJlZFBsYXllclNvcnRlZCsrXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnggPSAtNjY2XHJcbiAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci55ID0gMFxyXG4gICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueHNwZWVkID0gMFxyXG4gICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueXNwZWVkID0gMFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHVwZGF0ZVJlZFRlYW1QbGF5ZXJzKHJvb20pXHJcbiAgICB3aGlsZSAoYmx1ZVRlYW0ubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYmx1ZVRlYW0ubGVuZ3RoKTtcclxuICAgICAgICBjb25zdCByYW5kb21CbHVlUGxheWVyID0gYmx1ZVRlYW0uc3BsaWNlKHJhbmRvbUluZGV4LCAxKVswXTsgLy8gUmVtb3ZlIGFuZCByZXRyaWV2ZSB0aGUgUGxheWVyXHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKHJhbmRvbUJsdWVQbGF5ZXIuc2V0dGluZ3MucGVuYWx0eUdvYWxpZSkge1xyXG4gICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnNldEF2YXRhcihyYW5kb21CbHVlUGxheWVyLm5hbWUucmVwbGFjZSgvW15cXHdcXHNdL2dpLCAnJykuc2xpY2UoMCwgMikpXHJcbiAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIuc2V0dGluZ3MucGVuYWx0eUdvYWxpZSA9IDAgIFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCFyYW5kb21CbHVlUGxheWVyLnNldHRpbmdzLmdvYWxpZSkge1xyXG4gICAgICAgICAgICBpZiAoYmx1ZVBsYXllclNvcnRlZCA9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnggPSA0MFxyXG4gICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci55ID0gMFxyXG4gICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnlzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGJsdWVQbGF5ZXJTb3J0ZWQgPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54ID0gMjBcclxuICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueSA9IDE1MFxyXG4gICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnlzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGJsdWVQbGF5ZXJTb3J0ZWQgPT0gMikge1xyXG4gICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54ID0gMjBcclxuICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueSA9IC0xNTBcclxuICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueHNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci55c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChibHVlUGxheWVyU29ydGVkID09IDMpIHtcclxuICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueCA9IDE1MFxyXG4gICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci55ID0gMFxyXG4gICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnlzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGJsdWVQbGF5ZXJTb3J0ZWQgPT0gNCkge1xyXG4gICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54ID0gNjAwXHJcbiAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnkgPSAwXHJcbiAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueXNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYmx1ZVBsYXllclNvcnRlZCsrXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54ID0gNjY2XHJcbiAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueSA9IDBcclxuICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueXNwZWVkID0gMFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHVwZGF0ZUJsdWVUZWFtUGxheWVycyhyb29tKVxyXG59IiwiaW1wb3J0IHsgQ29sb3JzLCBSb29tIH0gZnJvbSBcImhheGJhbGwtZXh0ZW5kZWQtcm9vbVwiO1xyXG5pbXBvcnQgeyByZWRUZWFtLCB1cGRhdGVSZWRUZWFtUGxheWVycyB9IGZyb20gXCIuLi9wbGF5ZXJzL3JlZFRlYW1cIjtcclxuaW1wb3J0IHsgYmx1ZVRlYW0sIHVwZGF0ZUJsdWVUZWFtUGxheWVycyB9IGZyb20gXCIuLi9wbGF5ZXJzL2JsdWVUZWFtXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBraWNrb2ZmQWZ0ZXJNaXNzZWRQZW5hbHR5KHhBeGlzOiA1MDAgfCAtNTAwLCByb29tIDogUm9vbSkge1xyXG4gICAgbGV0IHJlZFBsYXllclNvcnRlZCA9IDBcclxuICAgIGxldCBibHVlUGxheWVyU29ydGVkID0gMFxyXG5cclxuICAgIHJvb20uc2V0dGluZ3MucGVuYWx0eVRpbWVyID0gMFxyXG5cclxuICAgIHJvb20uc2V0dGluZ3MubW9kZSA9IFwiZ2FtZVwiXHJcbiAgICByb29tLnBhdXNlKClcclxuICAgIHJvb20uc2VuZCh7IG1lc3NhZ2U6IFwiUGVuYWx0eSBwZXJkaWRvIVwiLCBjb2xvcjogeEF4aXMgPiAwID8gQ29sb3JzLkNyaW1zb24gOiBDb2xvcnMuQ29ybmZsb3dlckJsdWUgfSlcclxuICAgIHJvb20udW5wYXVzZSgpXHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIGdldFJhbmRvbTFPck1pbnVzMSgpOiAxIHwgLTEge1xyXG4gICAgICAgIHJldHVybiBNYXRoLnJhbmRvbSgpID49IDAuNSA/IDEgOiAtMTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgY29uc3QgdG9wT3JCb3R0b20gPSBnZXRSYW5kb20xT3JNaW51czEoKTtcclxuXHJcbiAgICBjb25zdCBkaXNjID0gcm9vbS5kaXNjc1swXVxyXG4gICAgc3dpdGNoICh4QXhpcykge1xyXG4gICAgICAgIGNhc2UgNTAwOiBcclxuICAgICAgICBkaXNjLnggPSA1MDBcclxuICAgICAgICBkaXNjLnkgPSAyMTAgKiB0b3BPckJvdHRvbVxyXG4gICAgICAgIGRpc2MueHNwZWVkID0gMFxyXG4gICAgICAgIGRpc2MueXNwZWVkID0gMFxyXG4gICAgICAgIFxyXG4gICAgICAgIHdoaWxlIChyZWRUZWFtLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcmVkVGVhbS5sZW5ndGgpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcmFuZG9tUmVkUGxheWVyID0gcmVkVGVhbS5zcGxpY2UocmFuZG9tSW5kZXgsIDEpWzBdOyAvLyBSZW1vdmUgYW5kIHJldHJpZXZlIHRoZSBQbGF5ZXJcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBpZiAoIXJhbmRvbVJlZFBsYXllci5zZXR0aW5ncy5nb2FsaWUpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVkUGxheWVyU29ydGVkID09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnggPSA0NjBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnkgPSAyMTAgKiB0b3BPckJvdHRvbVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueHNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueXNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHJlZFBsYXllclNvcnRlZCA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54ID0gMzkwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci55ID0gMTAwICogdG9wT3JCb3R0b21cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnlzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChyZWRQbGF5ZXJTb3J0ZWQgPT0gMikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueCA9IDM4MFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueSA9IDMxMCAqIHRvcE9yQm90dG9tXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci55c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVkUGxheWVyU29ydGVkID09IDMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnggPSAyMjBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnkgPSAyMTAgKiB0b3BPckJvdHRvbVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueHNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueXNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHJlZFBsYXllclNvcnRlZCA9PSA0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54ID0gMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueSA9IDEzMCAqIHRvcE9yQm90dG9tXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci55c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZWRQbGF5ZXJTb3J0ZWQrK1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueCA9IDBcclxuICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueSA9IDEzMCAqIHRvcE9yQm90dG9tXHJcbiAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueXNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHVwZGF0ZVJlZFRlYW1QbGF5ZXJzKHJvb20pXHJcbiAgICAgICAgICAgIHdoaWxlIChibHVlVGVhbS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGJsdWVUZWFtLmxlbmd0aCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByYW5kb21CbHVlUGxheWVyID0gYmx1ZVRlYW0uc3BsaWNlKHJhbmRvbUluZGV4LCAxKVswXTsgLy8gUmVtb3ZlIGFuZCByZXRyaWV2ZSB0aGUgUGxheWVyXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGlmIChyYW5kb21CbHVlUGxheWVyLnNldHRpbmdzLnBlbmFsdHlHb2FsaWUpIHtcclxuICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnNldEF2YXRhcihyYW5kb21CbHVlUGxheWVyLm5hbWUucmVwbGFjZSgvW15cXHdcXHNdL2dpLCAnJykuc2xpY2UoMCwgMikpXHJcbiAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci5zZXR0aW5ncy5wZW5hbHR5R29hbGllID0gMCAgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGlmICghcmFuZG9tQmx1ZVBsYXllci5zZXR0aW5ncy5nb2FsaWUpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoYmx1ZVBsYXllclNvcnRlZCA9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueCA9IDU0MFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnkgPSAyMTAgKiB0b3BPckJvdHRvbVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci55c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoYmx1ZVBsYXllclNvcnRlZCA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueCA9IDYxMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnkgPSAxMDAgKiB0b3BPckJvdHRvbVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci55c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoYmx1ZVBsYXllclNvcnRlZCA9PSAyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueCA9IDYyMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnkgPSAzMTAgKiB0b3BPckJvdHRvbVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci55c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoYmx1ZVBsYXllclNvcnRlZCA9PSAzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueCA9IDUxMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnkgPSA1MCAqIHRvcE9yQm90dG9tXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueHNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnlzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChibHVlUGxheWVyU29ydGVkID09IDQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54ID0gNjQwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueSA9IDEzMCAqIHRvcE9yQm90dG9tXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueHNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnlzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGJsdWVQbGF5ZXJTb3J0ZWQrK1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnggPSA2NzBcclxuICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnkgPSA1NSAqIHRvcE9yQm90dG9tXHJcbiAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci55c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdXBkYXRlQmx1ZVRlYW1QbGF5ZXJzKHJvb20pXHJcbiAgICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgY2FzZSAtNTAwOlxyXG4gICAgICAgICAgICBkaXNjLnggPSAtNTAwXHJcbiAgICAgICAgICAgIGRpc2MueSA9IDIxMCAqIHRvcE9yQm90dG9tXHJcbiAgICAgICAgICAgIGRpc2MueHNwZWVkID0gMFxyXG4gICAgICAgICAgICBkaXNjLnlzcGVlZCA9IDBcclxuXHJcbiAgICAgICAgICAgIHdoaWxlIChibHVlVGVhbS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGJsdWVUZWFtLmxlbmd0aCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByYW5kb21CbHVlUGxheWVyID0gYmx1ZVRlYW0uc3BsaWNlKHJhbmRvbUluZGV4LCAxKVswXTsgLy8gUmVtb3ZlIGFuZCByZXRyaWV2ZSB0aGUgUGxheWVyXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgaWYgKCFyYW5kb21CbHVlUGxheWVyLnNldHRpbmdzLmdvYWxpZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChibHVlUGxheWVyU29ydGVkID09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54ID0gLTQ2MFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnkgPSAyMTAgKiB0b3BPckJvdHRvbVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci55c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoYmx1ZVBsYXllclNvcnRlZCA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueCA9IC0zOTBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci55ID0gMTAwICogdG9wT3JCb3R0b21cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueXNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGJsdWVQbGF5ZXJTb3J0ZWQgPT0gMikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnggPSAtMzgwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueSA9IDMxMCAqIHRvcE9yQm90dG9tXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueHNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnlzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChibHVlUGxheWVyU29ydGVkID09IDMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54ID0gLTIyMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnkgPSAyMTAgKiB0b3BPckJvdHRvbVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci55c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoYmx1ZVBsYXllclNvcnRlZCA9PSA0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci55ID0gMTMwICogdG9wT3JCb3R0b21cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tQmx1ZVBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueXNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgYmx1ZVBsYXllclNvcnRlZCsrXHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueCA9IDBcclxuICAgICAgICAgICAgICAgICAgICByYW5kb21CbHVlUGxheWVyLnkgPSAxMzAgKiB0b3BPckJvdHRvbVxyXG4gICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueHNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgICAgIHJhbmRvbUJsdWVQbGF5ZXIueXNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHVwZGF0ZUJsdWVUZWFtUGxheWVycyhyb29tKVxyXG4gICAgICAgICAgICB3aGlsZSAocmVkVGVhbS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHJlZFRlYW0ubGVuZ3RoKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHJhbmRvbVJlZFBsYXllciA9IHJlZFRlYW0uc3BsaWNlKHJhbmRvbUluZGV4LCAxKVswXTsgLy8gUmVtb3ZlIGFuZCByZXRyaWV2ZSB0aGUgUGxheWVyXHJcbiAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgaWYgKHJhbmRvbVJlZFBsYXllci5zZXR0aW5ncy5wZW5hbHR5R29hbGllKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnNldHRpbmdzLnBlbmFsdHlHb2FsaWUgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnNldEF2YXRhcihyYW5kb21SZWRQbGF5ZXIubmFtZS5yZXBsYWNlKC9bXlxcd1xcc10vZ2ksICcnKS5zbGljZSgwLCAyKSlcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGlmICghcmFuZG9tUmVkUGxheWVyLnNldHRpbmdzLmdvYWxpZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZWRQbGF5ZXJTb3J0ZWQgPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueCA9IC01NDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnkgPSAyMTAgKiB0b3BPckJvdHRvbVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueHNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueXNwZWVkID0gMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHJlZFBsYXllclNvcnRlZCA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54ID0gLTYxMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueSA9IDEwMCAqIHRvcE9yQm90dG9tXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci55c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVkUGxheWVyU29ydGVkID09IDIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnggPSAtNjIwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci55ID0gMzEwICogdG9wT3JCb3R0b21cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnlzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChyZWRQbGF5ZXJTb3J0ZWQgPT0gMykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByYW5kb21SZWRQbGF5ZXIueCA9IC01MTBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnkgPSA1MCAqIHRvcE9yQm90dG9tXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci55c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVkUGxheWVyU29ydGVkID09IDQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnggPSAtNjQwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci55ID0gMTMwICogdG9wT3JCb3R0b21cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnlzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJlZFBsYXllclNvcnRlZCsrXHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54ID0gLTY3MFxyXG4gICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci55ID0gNTUgKiB0b3BPckJvdHRvbVxyXG4gICAgICAgICAgICAgICAgICAgIHJhbmRvbVJlZFBsYXllci54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICAgICAgcmFuZG9tUmVkUGxheWVyLnlzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB1cGRhdGVSZWRUZWFtUGxheWVycyhyb29tKVxyXG4gICAgICAgICAgICBicmVha1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgQ2hhdFN0eWxlLCBDb2xvcnMsIFBsYXllciwgUm9vbSB9IGZyb20gXCJoYXhiYWxsLWV4dGVuZGVkLXJvb21cIjtcclxuaW1wb3J0IHsgcmVkVGVhbSB9IGZyb20gXCIuLi9wbGF5ZXJzL3JlZFRlYW1cIjtcclxuaW1wb3J0IHsgYmx1ZVRlYW0gfSBmcm9tIFwiLi4vcGxheWVycy9ibHVlVGVhbVwiO1xyXG5pbXBvcnQgY2hlY2tGb3JHb2FsaWVTZXR0aW5nIGZyb20gXCIuL2NoZWNrRm9yR29hbGllc2V0dGluZ1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGVuYWx0eURldGVjdGVkKHBsYXllcjogUGxheWVyLCBwZW5hbHR5OiBzdHJpbmcsIHJvb206IFJvb20sIHRlYW06IG51bWJlcikge1xyXG4gICAgaWYgKCFyb29tLnNldHRpbmdzLnBlbmFsdHkgJiYgIXJvb20uc2V0dGluZ3MuZGlzYWJsZWRQZW5hbHR5cykge1xyXG4gICAgICAgIHJvb20uc2VuZCh7IG1lc3NhZ2U6IGBQZW5hbHR5IGJ5ICR7cGxheWVyLm5hbWV9IWAsIGNvbG9yOiB0ZWFtID09IDEgPyBDb2xvcnMuQ3JpbXNvbiA6IENvbG9ycy5Db3JuZmxvd2VyQmx1ZSwgc3R5bGU6IFwiYm9sZFwiIH0pXHJcbiAgICAgICAgcm9vbS5zZW5kKHttZXNzYWdlOiBgJHtwZW5hbHR5fWAsIGNvbG9yOiB0ZWFtID09IDE/IENvbG9ycy5Dcmltc29uIDogQ29sb3JzLkNvcm5mbG93ZXJCbHVlLCBzdHlsZTogXCJib2xkXCJ9KVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgIHJvb20uc2V0dGluZ3MucGVuYWx0eSA9IHRlYW07XHJcbiAgICBpZiAoIXJvb20uc2V0dGluZ3MuZGlzYWJsZWRQZW5hbHR5cykge1xyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAocm9vbS5zZXR0aW5ncy5wZW5hbHR5ID09PSAyKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRQZW5hbHR5UmVkKHJvb20pXHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocm9vbS5zZXR0aW5ncy5wZW5hbHR5ID09PSAxKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRQZW5hbHR5Qmx1ZShyb29tKVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICByb29tLnNldHRpbmdzLnBlbmFsdHkgPSAwXHJcbiAgICAgICAgfSwgMjAwMClcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNldFBlbmFsdHlSZWQocm9vbTogUm9vbSkge1xyXG4gICAgcm9vbS5zZXR0aW5ncy5tb2RlID0gXCJwZW5yZWRcIlxyXG4gICAgY29uc3QgZGlzYyA9IHJvb20uZGlzY3NbMF1cclxuXHJcbiAgICBkaXNjLnggPSAxMzBcclxuICAgIGRpc2MueSA9IDBcclxuICAgIGRpc2MueHNwZWVkID0gMFxyXG4gICAgZGlzYy55c3BlZWQgPSAwXHJcblxyXG4gICAgcm9vbS5zZXR0aW5ncy5wZW5hbHR5VGltZXIgPSAwXHJcbiAgICBcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVkVGVhbS5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgcmVkVGVhbVtpXS54ID0gLTcwXHJcbiAgICAgICAgcmVkVGVhbVtpXS55ID0gKGkgLSAyKSAqIDUwXHJcbiAgICB9XHJcbiAgICBpZiAoY2hlY2tGb3JHb2FsaWVTZXR0aW5nKHJvb20ucGxheWVycy5ibHVlKCksIDIpKSB7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBibHVlVGVhbS5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgIGlmIChibHVlVGVhbVtpXS5zZXR0aW5ncy5nb2FsaWUpIHtcclxuICAgICAgICAgICAgICAgIGJsdWVUZWFtW2ldLnkgPSAwXHJcbiAgICAgICAgICAgICAgICBibHVlVGVhbVtpXS54ID0gNjY2XHJcbiAgICAgICAgICAgICAgICBibHVlVGVhbVtpXS54c3BlZWQgPSAwXHJcbiAgICAgICAgICAgICAgICBibHVlVGVhbVtpXS55c3BlZWQgPSAwXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBibHVlVGVhbVtpXS55ID0gNTAwXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYmx1ZVRlYW0ubGVuZ3RoOyBpKyspIHsgXHJcbiAgICAgICAgICAgIGJsdWVUZWFtW2ldLnkgPSA1MDAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCByYW5kb21OdW1iZXIgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiByZWRUZWFtLmxlbmd0aClcclxuICAgICAgICBibHVlVGVhbVtyYW5kb21OdW1iZXJdLnggPSA2NjZcclxuICAgICAgICBibHVlVGVhbVtyYW5kb21OdW1iZXJdLnkgPSAwXHJcbiAgICAgICAgYmx1ZVRlYW1bcmFuZG9tTnVtYmVyXS54c3BlZWQgPSAwXHJcbiAgICAgICAgYmx1ZVRlYW1bcmFuZG9tTnVtYmVyXS55c3BlZWQgPSAwXHJcbiAgICAgICAgYmx1ZVRlYW1bcmFuZG9tTnVtYmVyXS5zZXR0aW5ncy5wZW5hbHR5R29hbGllID0gMlxyXG4gICAgICAgIGJsdWVUZWFtW3JhbmRvbU51bWJlcl0uc2V0QXZhdGFyKFwi8J+lilwiKVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2V0UGVuYWx0eUJsdWUocm9vbTogUm9vbSkge1xyXG4gICAgcm9vbS5zZXR0aW5ncy5tb2RlID0gJ3BlbmJsdWUnXHJcbiAgICBjb25zdCBkaXNjID0gcm9vbS5kaXNjc1swXVxyXG4gICAgXHJcbiAgICByb29tLnNldHRpbmdzLnBlbmFsdHlUaW1lciA9IDBcclxuICAgIGRpc2MueCA9IC0xMzBcclxuICAgIGRpc2MueSA9IDBcclxuICAgIGRpc2MueHNwZWVkID0gMFxyXG4gICAgZGlzYy55c3BlZWQgPSAwXHJcbiAgICBcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYmx1ZVRlYW0ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBibHVlVGVhbVtpXS54ID0gNzBcclxuICAgICAgICBibHVlVGVhbVtpXS55ID0gKGkgLSAyKSAqIDUwXHJcbiAgICB9XHJcbiAgICBpZiAoY2hlY2tGb3JHb2FsaWVTZXR0aW5nKHJvb20ucGxheWVycy5yZWQoKSwgMSkpIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlZFRlYW0ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKHJlZFRlYW1baV0uc2V0dGluZ3MuZ29hbGllKSB7XHJcbiAgICAgICAgICAgICAgICByZWRUZWFtW2ldLnkgPSAwXHJcbiAgICAgICAgICAgICAgICByZWRUZWFtW2ldLnggPSAtNjY2XHJcbiAgICAgICAgICAgICAgICByZWRUZWFtW2ldLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgIHJlZFRlYW1baV0ueXNwZWVkID0gMFxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmVkVGVhbVtpXS55ID0gNTAwXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVkVGVhbS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICByZWRUZWFtW2ldLnkgPSA1MDBcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgcmFuZG9tTnVtYmVyID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcmVkVGVhbS5sZW5ndGgpXHJcbiAgICAgICAgcmVkVGVhbVtyYW5kb21OdW1iZXJdLnggPSAtNjY2XHJcbiAgICAgICAgcmVkVGVhbVtyYW5kb21OdW1iZXJdLnkgPSAwXHJcbiAgICAgICAgcmVkVGVhbVtyYW5kb21OdW1iZXJdLnhzcGVlZCA9IDBcclxuICAgICAgICByZWRUZWFtW3JhbmRvbU51bWJlcl0ueXNwZWVkID0gMFxyXG4gICAgICAgIHJlZFRlYW1bcmFuZG9tTnVtYmVyXS5zZXR0aW5ncy5wZW5hbHR5R29hbGllID0gMVxyXG4gICAgICAgIHJlZFRlYW1bcmFuZG9tTnVtYmVyXS5zZXRBdmF0YXIoXCLwn6WKXCIpXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBSb29tIH0gZnJvbSBcImhheGJhbGwtZXh0ZW5kZWQtcm9vbVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGVuYWx0eVRpbWVyKHJvb206IFJvb20pIHtcclxuICAgIHJvb20uc2V0dGluZ3MucGVuYWx0eVRpbWVyKytcclxufSIsImltcG9ydCB7IENvbG9ycywgUGxheWVyLCBSb29tIH0gZnJvbSBcImhheGJhbGwtZXh0ZW5kZWQtcm9vbVwiO1xyXG5pbXBvcnQgZGV0ZWN0TGFzdFRlYW1Ub3VjaCBmcm9tIFwiLi9kZXRlY3RMYXN0VGVhbVRvdWNoXCI7XHJcbmltcG9ydCB7IGJsdWVUZWFtIH0gZnJvbSBcIi4uL3BsYXllcnMvYmx1ZVRlYW1cIjtcclxuaW1wb3J0IHsgcmVkVGVhbSB9IGZyb20gXCIuLi9wbGF5ZXJzL3JlZFRlYW1cIjtcclxuaW1wb3J0IGluc2lkZUJsdWVCb3ggZnJvbSBcIi4vaW5zaWRlQmx1ZUJveFwiO1xyXG5pbXBvcnQgaW5zaWRlUmVkQm94IGZyb20gXCIuL2luc2lkZVJlZEJveFwiO1xyXG5pbXBvcnQgY2FsY3VsYXRlVG90YWxTcGVlZCBmcm9tIFwiLi9jYWxjdWxhdGVUb3RhbFNwZWVkXCJcclxuaW1wb3J0IGhlYWRpbmdUb3dhcmRzR29hbCBmcm9tIFwiLi9oZWFkaW5nVG93YXJkc0dvYWxcIjtcclxuaW1wb3J0IHBlbmFsdHlEZXRlY3RlZCwgeyBzZXRQZW5hbHR5Qmx1ZSwgc2V0UGVuYWx0eVJlZCB9IGZyb20gXCIuL3BlbmFsdHlEZXRlY3RlZFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGxheWVyQnVtcChyb29tOiBSb29tLCBwbGF5ZXI6IFBsYXllcikge1xyXG4gICAgY29uc3QgZGlzYyA9IHJvb20uZGlzY3NbMF1cclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlZFRlYW0ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBpZiAocGxheWVyLmRpc3RhbmNlVG8ocmVkVGVhbVtpXSkgPCAxICYmIHBsYXllci5pZCAhPT0gcmVkVGVhbVtpXS5pZCkge1xyXG4gICAgICAgICAgICBpZiAocGxheWVyLnRlYW0gPT09IDIpIHtcclxuICAgICAgICAgICAgICAgIGlmIChyZWRUZWFtW2ldLnNldHRpbmdzLmdvYWxpZSB8fCByZWRUZWFtW2ldLnNldHRpbmdzLnBlbmFsdHlHb2FsaWUpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoaW5zaWRlUmVkQm94KHJlZFRlYW1baV0ueCwgcmVkVGVhbVtpXS55KSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FsY3VsYXRlVG90YWxTcGVlZChwbGF5ZXIueHNwZWVkLCBwbGF5ZXIueXNwZWVkKSA+PSAwLjIgJiYgaGVhZGluZ1Rvd2FyZHNHb2FsKGRpc2MueCwgZGlzYy55LCBkaXNjLnhzcGVlZCwgZGlzYy55c3BlZWQsIDEpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNjLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2MueCA9IDEzMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm9vbS5wYXVzZSgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb29tLnVucGF1c2UoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFyb29tLnNldHRpbmdzLmRpc2FibGVkUGVuYWx0eXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRQZW5hbHR5UmVkKHJvb20pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm9vbS5zZW5kKHsgbWVzc2FnZTogYFBlbmFsdHkgYnkgJHtwbGF5ZXIubmFtZX0hYCxjb2xvciA6IENvbG9ycy5Db3JuZmxvd2VyQmx1ZSwgc3R5bGU6IFwiYm9sZFwiIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm9vbS5zZW5kKHttZXNzYWdlOiBgTyBhbmltYWwgYmF0ZXUgbm8gR29sZWlybyBhZHZlcnPDoXJpb2AsIGNvbG9yOiBDb2xvcnMuQ29ybmZsb3dlckJsdWUsIHN0eWxlOiBcImJvbGRcIn0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJsdWVUZWFtLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgaWYgKHBsYXllci5kaXN0YW5jZVRvKGJsdWVUZWFtW2ldKSA8IDEgJiYgcGxheWVyLmlkICE9PSBibHVlVGVhbVtpXS5pZCkge1xyXG4gICAgICAgICAgICBpZiAocGxheWVyLnRlYW0gPT09IDEpIHtcclxuICAgICAgICAgICAgICAgIGlmIChibHVlVGVhbVtpXS5zZXR0aW5ncy5nb2FsaWUgfHwgYmx1ZVRlYW1baV0uc2V0dGluZ3MucGVuYWx0eUdvYWxpZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnNpZGVCbHVlQm94KGJsdWVUZWFtW2ldLngsIGJsdWVUZWFtW2ldLnkpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYWxjdWxhdGVUb3RhbFNwZWVkKHBsYXllci54c3BlZWQsIHBsYXllci55c3BlZWQpID49IDAuMiAmJiBoZWFkaW5nVG93YXJkc0dvYWwoZGlzYy54LCBkaXNjLnksIGRpc2MueHNwZWVkLCBkaXNjLnlzcGVlZCwgMikpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvb20ucGF1c2UoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm9vbS51bnBhdXNlKClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcm9vbS5zZXR0aW5ncy5kaXNhYmxlZFBlbmFsdHlzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYy54ID0gLTEzMFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2MueSA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNjLnhzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNjLnlzcGVlZCA9IDBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRQZW5hbHR5Qmx1ZShyb29tKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvb20uc2VuZCh7IG1lc3NhZ2U6IGBQZW5hbHR5IGJ5ICR7cGxheWVyLm5hbWV9IWAsIGNvbG9yOiBDb2xvcnMuQ3JpbXNvbiwgc3R5bGU6IFwiYm9sZFwiIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm9vbS5zZW5kKHsgbWVzc2FnZTogYE8gYW5pbWFsIGJhdGV1IG5vIEdvbGVpcm8gYWR2ZXJzw6FyaW9gLCBjb2xvcjogQ29sb3JzLkNyaW1zb24sIHN0eWxlOiBcImJvbGRcIiB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgUGxheWVyLCBSb29tIH0gZnJvbSBcImhheGJhbGwtZXh0ZW5kZWQtcm9vbVwiO1xyXG5pbXBvcnQgZGV0ZWN0TGFzdFRlYW1Ub3VjaCBmcm9tIFwiLi9kZXRlY3RMYXN0VGVhbVRvdWNoXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0b3VjaGVkRGlzYyhyb29tOiBSb29tLCBwbGF5ZXI6IFBsYXllcik6IGJvb2xlYW4ge1xyXG4gICAgaWYgKHJvb20uZGlzY3NbMF0uZGlzdGFuY2VUbyhwbGF5ZXIpIDwgMSkge1xyXG4gICAgICAgIGRldGVjdExhc3RUZWFtVG91Y2gocGxheWVyLnRlYW0pXHJcbiAgICAgICAgcmV0dXJuIHRydWVcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICB9XHJcbn0iLCJtb2R1bGUuZXhwb3J0cz17XHJcblxyXG5cdFwibmFtZVwiIDogXCJOSEwgICAgU3RhcGxlcyBDZW50ZXIgMUcgZnJvbSBIYXhNYXBzXCIsXHJcblxyXG5cdFwid2lkdGhcIiA6IDEwNDAsXHJcblxyXG5cdFwiaGVpZ2h0XCIgOiA1NTAsXHJcblxyXG5cdFwic3Bhd25EaXN0YW5jZVwiIDogMTcwLFxyXG5cclxuXHRcImJnXCIgOiB7IFwidHlwZVwiIDogXCJob2NrZXlcIiwgXCJoZWlnaHRcIiA6IDQ3MCwgXCJ3aWR0aFwiIDogMTAwMCwgXCJjb3JuZXJSYWRpdXNcIiA6IDIwMCwgXCJraWNrT2ZmUmFkaXVzXCIgOiAwIH0sXHJcblxyXG5cdFwidmVydGV4ZXNcIiA6IFtcclxuXHRcdHsgXCJ4XCIgOiAtODAwLCBcInlcIiA6IC00NzAsIFwiYkNvZWZcIiA6IC0xLjQsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImN1cnZlXCIgOiAwLCBcImNvbG9yXCIgOiBcIkNDMzMwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogODAwLCBcInlcIiA6IC00NzAsIFwiYkNvZWZcIiA6IDAuNSwgXCJjTWFza1wiIDogW1wicmVkXCIgXSwgXCJjdXJ2ZVwiIDogOTAgfSxcclxuXHRcdHsgXCJ4XCIgOiAtODAwLCBcInlcIiA6IDQ3MCwgXCJiQ29lZlwiIDogLTEuNCwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiQ0MzMzAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiA4MDAsIFwieVwiIDogNDcwLCBcImJDb2VmXCIgOiAtMS40LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjdXJ2ZVwiIDogLTkwIH0sXHJcblx0XHR7IFwieFwiIDogLTEwMDAsIFwieVwiIDogLTI3MCwgXCJiQ29lZlwiIDogLTEuNCwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY3VydmVcIiA6IDAgfSxcclxuXHRcdHsgXCJ4XCIgOiAtMTAwMCwgXCJ5XCIgOiAyNzAsIFwiYkNvZWZcIiA6IC0xLjQsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImN1cnZlXCIgOiAwIH0sXHJcblx0XHR7IFwieFwiIDogMTAwMCwgXCJ5XCIgOiAtMjcwLCBcImJDb2VmXCIgOiAtMS40LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjdXJ2ZVwiIDogOTAgfSxcclxuXHRcdHsgXCJ4XCIgOiAxMDAwLCBcInlcIiA6IDI3MCwgXCJiQ29lZlwiIDogLTEuNCwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY3VydmVcIiA6IC05MCB9LFxyXG5cdFx0eyBcInhcIiA6IC03NTcsIFwieVwiIDogOTcsIFwiYkNvZWZcIiA6IC0wLjcsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwieFwiIDogLTc5MCwgXCJ5XCIgOiA5NywgXCJiQ29lZlwiIDogLTAuNywgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY3VydmVcIiA6IC05MCwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiB9LFxyXG5cdFx0eyBcInhcIiA6IC03NTcsIFwieVwiIDogLTk3LCBcImJDb2VmXCIgOiAtMC43LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInhcIiA6IC03OTAsIFwieVwiIDogLTk3LCBcImJDb2VmXCIgOiAtMC43LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjdXJ2ZVwiIDogOTAsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtODEwLCBcInlcIiA6IC03MCwgXCJiQ29lZlwiIDogLTAuNywgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY3VydmVcIiA6IDkwLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogLTgxMCwgXCJ5XCIgOiA3MCwgXCJiQ29lZlwiIDogLTAuNywgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY3VydmVcIiA6IC05MCwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiB9LFxyXG5cdFx0eyBcInhcIiA6IC03NjAsIFwieVwiIDogLTQ2NywgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNzYwLCBcInlcIiA6IDQ2NywgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiA3NTcsIFwieVwiIDogLTk3LCBcImJDb2VmXCIgOiAtMC43LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJwMFwiIDogWzc2MCwtOTAgXSwgXCJwMVwiIDogWzc2MCw5MCBdIH0sXHJcblx0XHR7IFwieFwiIDogNzkwLCBcInlcIiA6IC05NywgXCJiQ29lZlwiIDogLTAuNywgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY3VydmVcIiA6IC05MCwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDc1NywgXCJ5XCIgOiA5NywgXCJiQ29lZlwiIDogLTAuNywgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwicDBcIiA6IFs3NjAsLTkwIF0sIFwicDFcIiA6IFs3NjAsOTAgXSB9LFxyXG5cdFx0eyBcInhcIiA6IDc5MCwgXCJ5XCIgOiA5NywgXCJiQ29lZlwiIDogLTAuNywgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY3VydmVcIiA6IDkwLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogODEwLCBcInlcIiA6IDcwLCBcImJDb2VmXCIgOiAtMC43LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjdXJ2ZVwiIDogOTAsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiA4MTAsIFwieVwiIDogLTcwLCBcImJDb2VmXCIgOiAtMC43LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjdXJ2ZVwiIDogLTkwLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogNzYwLCBcInlcIiA6IC00NjcsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogNzYwLCBcInlcIiA6IDQ2NywgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAwLCBcInlcIiA6IC00NzAsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogMCwgXCJ5XCIgOiA0NzAsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogLTIzMCwgXCJ5XCIgOiAtNDcwLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiB9LFxyXG5cdFx0eyBcInhcIiA6IC0yMzAsIFwieVwiIDogNDcwLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDAsIFwieVwiIDogLTEzMCwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY3VydmVcIiA6IC0xODAgfSxcclxuXHRcdHsgXCJ4XCIgOiAwLCBcInlcIiA6IDEzMCwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY3VydmVcIiA6IC0xODAgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNTAwLCBcInlcIiA6IDgwLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjb2xvclwiIDogXCIwMDAwODhcIiwgXCJjdXJ2ZVwiIDogLTE4MCB9LFxyXG5cdFx0eyBcInhcIiA6IC01MDAsIFwieVwiIDogMzQwLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjb2xvclwiIDogXCIwMDAwODhcIiwgXCJjdXJ2ZVwiIDogLTE4MCB9LFxyXG5cdFx0eyBcInhcIiA6IDUwMCwgXCJ5XCIgOiAtMzQwLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjb2xvclwiIDogXCI4ODAwMDBcIiwgXCJjdXJ2ZVwiIDogLTE4MCB9LFxyXG5cdFx0eyBcInhcIiA6IDUwMCwgXCJ5XCIgOiAtODAsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImNvbG9yXCIgOiBcIjg4MDAwMFwiLCBcImN1cnZlXCIgOiAtMTgwIH0sXHJcblx0XHR7IFwieFwiIDogNTAwLCBcInlcIiA6IDgwLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjb2xvclwiIDogXCI4ODAwMDBcIiwgXCJjdXJ2ZVwiIDogLTE4MCB9LFxyXG5cdFx0eyBcInhcIiA6IDUwMCwgXCJ5XCIgOiAzNDAsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImNvbG9yXCIgOiBcIjg4MDAwMFwiLCBcImN1cnZlXCIgOiAtMTgwIH0sXHJcblx0XHR7IFwieFwiIDogLTUwMCwgXCJ5XCIgOiAtMzQwLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjb2xvclwiIDogXCIwMDAwODhcIiwgXCJjdXJ2ZVwiIDogLTE4MCB9LFxyXG5cdFx0eyBcInhcIiA6IC01MDAsIFwieVwiIDogLTgwLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjb2xvclwiIDogXCIwMDAwODhcIiwgXCJjdXJ2ZVwiIDogLTE4MCB9LFxyXG5cdFx0eyBcInhcIiA6IDAsIFwieVwiIDogLTIsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImN1cnZlXCIgOiAtMTgwIH0sXHJcblx0XHR7IFwieFwiIDogMCwgXCJ5XCIgOiA2LCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJjdXJ2ZVwiIDogLTE4MCB9LFxyXG5cdFx0eyBcInhcIiA6IDAsIFwieVwiIDogMCwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY3VydmVcIiA6IC0xODAgfSxcclxuXHRcdHsgXCJ4XCIgOiAwLCBcInlcIiA6IDQsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImN1cnZlXCIgOiAtMTgwIH0sXHJcblx0XHR7IFwieFwiIDogMCwgXCJ5XCIgOiAwLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJjdXJ2ZVwiIDogLTE4MCB9LFxyXG5cdFx0eyBcInhcIiA6IDAsIFwieVwiIDogNCwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY3VydmVcIiA6IC0xODAgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNzU3LCBcInlcIiA6IC05MCwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY3VydmVcIiA6IDE4MCB9LFxyXG5cdFx0eyBcInhcIiA6IC03NTcsIFwieVwiIDogMTEwLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwIH0sXHJcblx0XHR7IFwieFwiIDogLTc1NywgXCJ5XCIgOiAtMTA3LCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjA4NTBBMlwiIH0sXHJcblx0XHR7IFwieFwiIDogLTc1NywgXCJ5XCIgOiAtMTA3LCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjA4NTBBMlwiIH0sXHJcblx0XHR7IFwieFwiIDogLTc1NywgXCJ5XCIgOiAtMTA3LCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjA4NTBBMlwiIH0sXHJcblx0XHR7IFwieFwiIDogLTc1NywgXCJ5XCIgOiAxMDcsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDg1MEEyXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNzU3LCBcInlcIiA6IC0xMDQsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDg1MEEyXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNzU3LCBcInlcIiA6IDEwNCwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwODUwQTJcIiB9LFxyXG5cdFx0eyBcInhcIiA6IC03NTcsIFwieVwiIDogLTEwMSwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwODUwQTJcIiB9LFxyXG5cdFx0eyBcInhcIiA6IC03NTcsIFwieVwiIDogMTAxLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjA4NTBBMlwiIH0sXHJcblx0XHR7IFwieFwiIDogLTc1NywgXCJ5XCIgOiAtOTgsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDg1MEEyXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNzU3LCBcInlcIiA6IDk4LCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjA4NTBBMlwiIH0sXHJcblx0XHR7IFwieFwiIDogLTc1NywgXCJ5XCIgOiAtOTUsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDg1MEEyXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNzU3LCBcInlcIiA6IDk1LCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjA4NTBBMlwiIH0sXHJcblx0XHR7IFwieFwiIDogLTc1NywgXCJ5XCIgOiAtOTIsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDg1MEEyXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNzU3LCBcInlcIiA6IDkyLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjA4NTBBMlwiIH0sXHJcblx0XHR7IFwieFwiIDogLTc1NywgXCJ5XCIgOiAtODksIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDg1MEEyXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiA3NTcsIFwieVwiIDogMTAxLjUzNjUxNjYwMiwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwODUwQTJcIiwgXCJwMFwiIDogWzc2MCwtOTAgXSwgXCJwMVwiIDogWzc2MCw5MCBdIH0sXHJcblx0XHR7IFwieFwiIDogNzU3LCBcInlcIiA6IC0xMDAuNDYzNDIzNTQ4LCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjA4NTBBMlwiLCBcInAwXCIgOiBbNzYwLC05MCBdLCBcInAxXCIgOiBbNzYwLDkwIF0gfSxcclxuXHRcdHsgXCJ4XCIgOiA3NTcsIFwieVwiIDogOTguNTM2NTE3NDkwNCwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwODUwQTJcIiwgXCJwMFwiIDogWzc2MCwtOTAgXSwgXCJwMVwiIDogWzc2MCw5MCBdIH0sXHJcblx0XHR7IFwieFwiIDogNzU3LCBcInlcIiA6IC05Ny40NjM0MjQ0MzY0LCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjA4NTBBMlwiLCBcInAwXCIgOiBbNzYwLC05MCBdLCBcInAxXCIgOiBbNzYwLDkwIF0gfSxcclxuXHRcdHsgXCJ4XCIgOiA3NTcsIFwieVwiIDogOTUuNTM2NTE4Mzc5MywgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwODUwQTJcIiwgXCJwMFwiIDogWzc2MCwtOTAgXSwgXCJwMVwiIDogWzc2MCw5MCBdIH0sXHJcblx0XHR7IFwieFwiIDogNzU3LCBcInlcIiA6IC05NC40NjM0MjUzMjUzLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjA4NTBBMlwiLCBcInAwXCIgOiBbNzYwLC05MCBdLCBcInAxXCIgOiBbNzYwLDkwIF0gfSxcclxuXHRcdHsgXCJ4XCIgOiA3NTcsIFwieVwiIDogOTIuNTM2NTE5MjY4MiwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwODUwQTJcIiwgXCJwMFwiIDogWzc2MCwtOTAgXSwgXCJwMVwiIDogWzc2MCw5MCBdIH0sXHJcblx0XHR7IFwieFwiIDogNzU3LCBcInlcIiA6IC05MS40NjM0MjYyMTQyLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjA4NTBBMlwiLCBcInAwXCIgOiBbNzYwLC05MCBdLCBcInAxXCIgOiBbNzYwLDkwIF0gfSxcclxuXHRcdHsgXCJ4XCIgOiA3NTcsIFwieVwiIDogMTAzLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjA4NTBBMlwiLCBcInAwXCIgOiBbNzYwLC05MCBdLCBcInAxXCIgOiBbNzYwLDkwIF0gfSxcclxuXHRcdHsgXCJ4XCIgOiA3NTcsIFwieVwiIDogLTEwMywgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwODUwQTJcIiwgXCJwMFwiIDogWzc2MCwtOTAgXSwgXCJwMVwiIDogWzc2MCw5MCBdIH0sXHJcblx0XHR7IFwieFwiIDogNzU3LCBcInlcIiA6IDEwNiwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwODUwQTJcIiwgXCJwMFwiIDogWzc2MCwtOTAgXSwgXCJwMVwiIDogWzc2MCw5MCBdIH0sXHJcblx0XHR7IFwieFwiIDogNzU3LCBcInlcIiA6IC0xMDYsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDg1MEEyXCIsIFwicDBcIiA6IFs3NjAsLTkwIF0sIFwicDFcIiA6IFs3NjAsOTAgXSB9LFxyXG5cdFx0eyBcInhcIiA6IDc1NywgXCJ5XCIgOiAxMDksIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDAwMDg4XCIsIFwicDBcIiA6IFs3NjAsLTkwIF0sIFwicDFcIiA6IFs3NjAsOTAgXSB9LFxyXG5cdFx0eyBcInhcIiA6IDc1NywgXCJ5XCIgOiAtMTA5LCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjAwMDA4OFwiLCBcInAwXCIgOiBbNzYwLC05MCBdLCBcInAxXCIgOiBbNzYwLDkwIF0gfSxcclxuXHRcdHsgXCJ4XCIgOiA4MDAsIFwieVwiIDogLTQ3MCwgXCJiQ29lZlwiIDogLTEuMiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY3VydmVcIiA6IDAsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwidmlzXCIgOiB0cnVlIH0sXHJcblx0XHR7IFwieFwiIDogMTAwMCwgXCJ5XCIgOiAtMjcwLCBcImJDb2VmXCIgOiAwLjUsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwiY3VydmVcIiA6IDkwLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcInZpc1wiIDogdHJ1ZSB9LFxyXG5cdFx0eyBcInhcIiA6IDEwMDAsIFwieVwiIDogLTI3MCwgXCJiQ29lZlwiIDogMC41LCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImN1cnZlXCIgOiAwLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcInZpc1wiIDogdHJ1ZSB9LFxyXG5cdFx0eyBcInhcIiA6IDEwMDAsIFwieVwiIDogMjcwLCBcImJDb2VmXCIgOiAwLjUsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwiY3VydmVcIiA6IDAsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwidmlzXCIgOiB0cnVlIH0sXHJcblx0XHR7IFwieFwiIDogODAwLCBcInlcIiA6IDQ3MCwgXCJiQ29lZlwiIDogMC41LCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImN1cnZlXCIgOiAtOTAsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwidmlzXCIgOiB0cnVlIH0sXHJcblx0XHR7IFwieFwiIDogMTAwMCwgXCJ5XCIgOiAyNzAsIFwiYkNvZWZcIiA6IDAuNSwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJjdXJ2ZVwiIDogLTkwLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcInZpc1wiIDogdHJ1ZSB9LFxyXG5cdFx0eyBcInhcIiA6IC04MDAsIFwieVwiIDogNDcwLCBcImJDb2VmXCIgOiAwLjUsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiB0cnVlIH0sXHJcblx0XHR7IFwieFwiIDogODAwLCBcInlcIiA6IDQ3MCwgXCJiQ29lZlwiIDogMC41LCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImN1cnZlXCIgOiAwLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcInZpc1wiIDogdHJ1ZSB9LFxyXG5cdFx0eyBcInhcIiA6IC04MDAsIFwieVwiIDogNDcwLCBcImJDb2VmXCIgOiAwLjUsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY3VydmVcIiA6IC05MCwgXCJ2aXNcIiA6IHRydWUgfSxcclxuXHRcdHsgXCJ4XCIgOiAtMTAwMCwgXCJ5XCIgOiAyNzAsIFwiYkNvZWZcIiA6IDAuNSwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJjdXJ2ZVwiIDogLTkwLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcInZpc1wiIDogdHJ1ZSB9LFxyXG5cdFx0eyBcInhcIiA6IC0xMDAwLCBcInlcIiA6IC0yNzAsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwiY3VydmVcIiA6IDAgfSxcclxuXHRcdHsgXCJ4XCIgOiAtODAwLCBcInlcIiA6IC00NzAsIFwiYkNvZWZcIiA6IDAuNSwgXCJjTWFza1wiIDogW1wiYmx1ZVwiIF0sIFwiY3VydmVcIiA6IC05MCwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJ2aXNcIiA6IGZhbHNlIH0sXHJcblx0XHR7IFwieFwiIDogLTEwMDAsIFwieVwiIDogLTI3MCwgXCJiQ29lZlwiIDogMC41LCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImN1cnZlXCIgOiAtOTAsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwidmlzXCIgOiB0cnVlIH0sXHJcblx0XHR7IFwieFwiIDogLTc1NywgXCJ5XCIgOiA5NywgXCJiQ29lZlwiIDogMC43LCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImN1cnZlXCIgOiAwIH0sXHJcblx0XHR7IFwieFwiIDogLTc5MCwgXCJ5XCIgOiA5NywgXCJiQ29lZlwiIDogMC43LCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImN1cnZlXCIgOiAtOTAsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNzU3LCBcInlcIiA6IC05NywgXCJiQ29lZlwiIDogMC43LCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImN1cnZlXCIgOiAwIH0sXHJcblx0XHR7IFwieFwiIDogLTc5MCwgXCJ5XCIgOiAtOTcsIFwiYkNvZWZcIiA6IDAuNywgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJjdXJ2ZVwiIDogOTAsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtODEwLCBcInlcIiA6IC03MCwgXCJiQ29lZlwiIDogMC43LCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImN1cnZlXCIgOiAwLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogLTgxMCwgXCJ5XCIgOiA3MCwgXCJiQ29lZlwiIDogMC43LCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImN1cnZlXCIgOiAtOTAsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiA3NTcsIFwieVwiIDogLTk3LCBcImJDb2VmXCIgOiAwLjcsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwicDBcIiA6IFs3NjAsLTkwIF0sIFwicDFcIiA6IFs3NjAsOTAgXSwgXCJjdXJ2ZVwiIDogMCB9LFxyXG5cdFx0eyBcInhcIiA6IDc5MCwgXCJ5XCIgOiAtOTcsIFwiYkNvZWZcIiA6IDAuNywgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJjdXJ2ZVwiIDogLTkwLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogNzU3LCBcInlcIiA6IDk3LCBcImJDb2VmXCIgOiAwLjcsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwicDBcIiA6IFs3NjAsLTkwIF0sIFwicDFcIiA6IFs3NjAsOTAgXSwgXCJjdXJ2ZVwiIDogMCB9LFxyXG5cdFx0eyBcInhcIiA6IDc5MCwgXCJ5XCIgOiA5NywgXCJiQ29lZlwiIDogMC43LCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImN1cnZlXCIgOiA5MCwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDgxMCwgXCJ5XCIgOiA3MCwgXCJiQ29lZlwiIDogMC43LCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImN1cnZlXCIgOiA5MCwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDgxMCwgXCJ5XCIgOiAtNzAsIFwiYkNvZWZcIiA6IDAuNywgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJjdXJ2ZVwiIDogLTkwLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogMjMwLCBcInlcIiA6IC00NzAsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogMjMwLCBcInlcIiA6IDQ3MCwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNzU3LCBcInlcIiA6IDEwOSwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY3VydmVcIiA6IC0xODAsIFwiY29sb3JcIiA6IFwiODgwMDAwXCIsIFwicDBcIiA6IFs3NjAsLTkwIF0sIFwicDFcIiA6IFs3NjAsOTAgXSB9LFxyXG5cdFx0eyBcInhcIiA6IC03NTcsIFwieVwiIDogLTEwOSwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwiY3VydmVcIiA6IC0xODAsIFwiY29sb3JcIiA6IFwiODgwMDAwXCIsIFwicDBcIiA6IFs3NjAsLTkwIF0sIFwicDFcIiA6IFs3NjAsOTAgXSB9LFxyXG5cdFx0eyBcInhcIiA6IC0xMDAwLCBcInlcIiA6IC0yNzAsIFwiYkNvZWZcIiA6IDAuNSwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJjdXJ2ZVwiIDogMCwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJ2aXNcIiA6IHRydWUgfSxcclxuXHRcdHsgXCJ4XCIgOiAtMTAwMCwgXCJ5XCIgOiAyNzAsIFwiYkNvZWZcIiA6IDAuNSwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJjdXJ2ZVwiIDogMCwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJ2aXNcIiA6IHRydWUgfSxcclxuXHRcdHsgXCJ4XCIgOiAtODAwLCBcInlcIiA6IDQ3MCwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ4XCIgOiA4MDAsIFwieVwiIDogNDcwLCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInhcIiA6IDc5OSwgXCJ5XCIgOiAtNDcwLCBcImJDb2VmXCIgOiAwLjUsIFwiY01hc2tcIiA6IFtcInJlZFwiIF0sIFwiY3VydmVcIiA6IDAsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwidmlzXCIgOiBmYWxzZSB9LFxyXG5cdFx0eyBcInhcIiA6IC03NTAsIFwieVwiIDogLTQ3MCwgXCJiQ29lZlwiIDogMCwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJjdXJ2ZVwiIDogMCwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJ2aXNcIiA6IHRydWUgfSxcclxuXHRcdHsgXCJ4XCIgOiA3NTAsIFwieVwiIDogLTQ3MCwgXCJiQ29lZlwiIDogMCwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJjdXJ2ZVwiIDogMCwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJ2aXNcIiA6IHRydWUgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNzUwLCBcInlcIiA6IC01NTAsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwidmlzXCIgOiB0cnVlIH0sXHJcblx0XHR7IFwieFwiIDogNzUwLCBcInlcIiA6IC01NTAsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwidmlzXCIgOiB0cnVlIH0sXHJcblx0XHR7IFwieFwiIDogLTc1MCwgXCJ5XCIgOiA0NzAsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwieFwiIDogLTc1MCwgXCJ5XCIgOiA1NTAsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwieFwiIDogNzUwLCBcInlcIiA6IDQ3MCwgXCJiQ29lZlwiIDogMCwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ4XCIgOiA3NTAsIFwieVwiIDogNTUwLCBcImJDb2VmXCIgOiAwLCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInhcIiA6IC0xMDAxLCBcInlcIiA6IDY0LCBcImJDb2VmXCIgOiAwLCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImN1cnZlXCIgOiA5MCB9LFxyXG5cdFx0eyBcInhcIiA6IC0xMDQyLCBcInlcIiA6IDYxLCBcImJDb2VmXCIgOiAwLCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImN1cnZlXCIgOiA5MCB9LFxyXG5cdFx0eyBcInhcIiA6IC0xMDQwLCBcInlcIiA6IC0yNzMsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwiY3VydmVcIiA6IDkwLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogLTc5NiwgXCJ5XCIgOiAtNTA1LCBcImJDb2VmXCIgOiAwLCBcImNNYXNrXCIgOiBbXCJ3YWxsXCIgXSwgXCJjdXJ2ZVwiIDogMCwgXCJjb2xvclwiIDogXCI4MTgxODFcIiB9LFxyXG5cdFx0eyBcInhcIiA6IC03NTEsIFwieVwiIDogLTUwMywgXCJiQ29lZlwiIDogMCwgXCJjTWFza1wiIDogW1wid2FsbFwiIF0sIFwiY3VydmVcIiA6IDkwLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogNzUwLCBcInlcIiA6IC00NzAsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwiY3VydmVcIiA6IC05MCwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJ2aXNcIiA6IHRydWUgfSxcclxuXHRcdHsgXCJ4XCIgOiA3NTEsIFwieVwiIDogLTUwMywgXCJiQ29lZlwiIDogMCwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJjdXJ2ZVwiIDogLTkwLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogNzk2LCBcInlcIiA6IC01MDUsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcIndhbGxcIiBdLCBcImN1cnZlXCIgOiAwLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogNzUxLCBcInlcIiA6IC01MDMsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcIndhbGxcIiBdLCBcImN1cnZlXCIgOiA5MCwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDEwNDAsIFwieVwiIDogLTI3MywgXCJiQ29lZlwiIDogMCwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJjdXJ2ZVwiIDogLTkwLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogNzk2LCBcInlcIiA6IC01MDUsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwiY3VydmVcIiA6IC05MCwgXCJjb2xvclwiIDogXCI4MTgxODFcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDEwNDIsIFwieVwiIDogNjEsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY3VydmVcIiA6IDkwIH0sXHJcblx0XHR7IFwieFwiIDogMTA0MCwgXCJ5XCIgOiAtMjczLCBcImJDb2VmXCIgOiAwLCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcImN1cnZlXCIgOiA5MCwgXCJjb2xvclwiIDogXCI4MTgxODFcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDEwMDEsIFwieVwiIDogNjQsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY3VydmVcIiA6IC05MCB9LFxyXG5cdFx0eyBcInhcIiA6IDEwNDIsIFwieVwiIDogNjEsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY3VydmVcIiA6IC05MCB9LFxyXG5cdFx0eyBcInhcIiA6IC03NDQsIFwieVwiIDogLTQ3NSwgXCJiQ29lZlwiIDogLTAuNiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY3VydmVcIiA6IDk3LCBcImNvbG9yXCIgOiBcIkVFREQ4MlwiIH0sXHJcblx0XHR7IFwieFwiIDogNzQzLCBcInlcIiA6IC00NzQsIFwiYkNvZWZcIiA6IC0wLjYsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImN1cnZlXCIgOiAtOTUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtODAwLCBcInlcIiA6IDQ3NSwgXCJiQ29lZlwiIDogLTAuNiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY3VydmVcIiA6IDkwLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogODAwLCBcInlcIiA6IDQ3NSwgXCJiQ29lZlwiIDogLTAuNiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtMTAwNywgXCJ5XCIgOiAyNjcsIFwiYkNvZWZcIiA6IC0wLjYsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImN1cnZlXCIgOiAwLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogODAwLCBcInlcIiA6IDQ3NSwgXCJiQ29lZlwiIDogLTAuNiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY3VydmVcIiA6IC05MCwgXCJjb2xvclwiIDogXCI4MTgxODFcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDEwMDcsIFwieVwiIDogMjY3LCBcImJDb2VmXCIgOiAtMC42LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjdXJ2ZVwiIDogMCwgXCJjb2xvclwiIDogXCI4MTgxODFcIiB9LFxyXG5cdFx0eyBcInhcIiA6IC0xMDA3LCBcInlcIiA6IDY4LCBcImJDb2VmXCIgOiAtMC42LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjdXJ2ZVwiIDogMCwgXCJjb2xvclwiIDogXCI4MTgxODFcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDEwMDcsIFwieVwiIDogNjgsIFwiYkNvZWZcIiA6IC0wLjYsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImN1cnZlXCIgOiAwLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogLTEwMDYsIFwieVwiIDogLTI3MSwgXCJiQ29lZlwiIDogLTAuNiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY3VydmVcIiA6IDk3LCBcImNvbG9yXCIgOiBcIkVFREQ4MlwiIH0sXHJcblx0XHR7IFwieFwiIDogMTAwNiwgXCJ5XCIgOiAtMjcxLCBcImJDb2VmXCIgOiAtMC42LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjdXJ2ZVwiIDogLTk1LCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogLTc0NSwgXCJ5XCIgOiA0NzggfSxcclxuXHRcdHsgXCJ4XCIgOiA3NDUsIFwieVwiIDogNDc4IH0sXHJcblx0XHR7IFwieFwiIDogLTE1LCBcInlcIiA6IC00ODUsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogMTUsIFwieVwiIDogLTQ4NSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtMjAsIFwieVwiIDogNDg1LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInhcIiA6IDIwLCBcInlcIiA6IDQ4NSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ4XCIgOiAtMjUsIFwieVwiIDogLTQ4NSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAyNSwgXCJ5XCIgOiAtNDg1LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiB9LFxyXG5cdFx0eyBcInhcIiA6IC0yOSwgXCJ5XCIgOiA0ODMsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwieFwiIDogMjksIFwieVwiIDogNDgzLCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInhcIiA6IC01NSwgXCJ5XCIgOiAtNDg1LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDU1LCBcInlcIiA6IC00ODUsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogLTU3LCBcInlcIiA6IDQ4MywgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ4XCIgOiA1NywgXCJ5XCIgOiA0ODMsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwieFwiIDogLTU1LCBcInlcIiA6IC01MjUsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogLTI1LCBcInlcIiA6IC01MjUsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogLTE1LCBcInlcIiA6IC01MjUsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogMTUsIFwieVwiIDogLTUyNSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAyNSwgXCJ5XCIgOiAtNTI1LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDE1LCBcInlcIiA6IC01MDUsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogLTE1LCBcInlcIiA6IC01MDUsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwieFwiIDogNjUsIFwieVwiIDogLTQ4NSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY3VydmVcIiA6IDAgfSxcclxuXHRcdHsgXCJ4XCIgOiA2NSwgXCJ5XCIgOiAtNTE1LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjdXJ2ZVwiIDogMjIwIH0sXHJcblx0XHR7IFwieFwiIDogNjUsIFwieVwiIDogLTUwMCwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY3VydmVcIiA6IDAgfSxcclxuXHRcdHsgXCJ4XCIgOiA5MCwgXCJ5XCIgOiAtNDg1LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjdXJ2ZVwiIDogMjYwIH0sXHJcblx0XHR7IFwieFwiIDogOTAsIFwieVwiIDogLTUxNSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY3VydmVcIiA6IDIyMCB9LFxyXG5cdFx0eyBcInhcIiA6IDkwLCBcInlcIiA6IC01MDAsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImN1cnZlXCIgOiAyNjAgfSxcclxuXHRcdHsgXCJ4XCIgOiAxMTUsIFwieVwiIDogLTQ4NSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY3VydmVcIiA6IDI2MCB9LFxyXG5cdFx0eyBcInhcIiA6IDExNSwgXCJ5XCIgOiAtNTE1LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjdXJ2ZVwiIDogMjIwIH0sXHJcblx0XHR7IFwieFwiIDogMTE1LCBcInlcIiA6IC01MDAsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImN1cnZlXCIgOiAyNSB9LFxyXG5cdFx0eyBcInhcIiA6IDEyNSwgXCJ5XCIgOiAtNDg1LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjdXJ2ZVwiIDogMjUgfSxcclxuXHRcdHsgXCJ4XCIgOiA4NSwgXCJ5XCIgOiAtNDg1LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjdXJ2ZVwiIDogMCB9LFxyXG5cdFx0eyBcInhcIiA6IDExMCwgXCJ5XCIgOiAtNDg1LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjdXJ2ZVwiIDogMjYwIH0sXHJcblx0XHR7IFwieFwiIDogMTEwLCBcInlcIiA6IC01MDAsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImN1cnZlXCIgOiAyNjAgfSxcclxuXHRcdHsgXCJ4XCIgOiAxMTAsIFwieVwiIDogLTUxNSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY3VydmVcIiA6IDIyMCB9LFxyXG5cdFx0eyBcInhcIiA6IDg1LCBcInlcIiA6IC01MDAsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImN1cnZlXCIgOiAwIH0sXHJcblx0XHR7IFwieFwiIDogOTAsIFwieVwiIDogLTQ4NSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY3VydmVcIiA6IDAgfSxcclxuXHRcdHsgXCJ4XCIgOiA5MSwgXCJ5XCIgOiAtNTE2LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjdXJ2ZVwiIDogMjIwIH0sXHJcblx0XHR7IFwieFwiIDogOTAsIFwieVwiIDogLTUwMCwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY3VydmVcIiA6IDAgfSxcclxuXHRcdHsgXCJ4XCIgOiAxMTUsIFwieVwiIDogLTQ4NSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY3VydmVcIiA6IDI2MCB9LFxyXG5cdFx0eyBcInhcIiA6IDExNSwgXCJ5XCIgOiAtNTE1LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjdXJ2ZVwiIDogMjIwIH0sXHJcblx0XHR7IFwieFwiIDogMTE1LCBcInlcIiA6IC01MDAsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImN1cnZlXCIgOiAyNjAgfSxcclxuXHRcdHsgXCJ4XCIgOiAxMTAsIFwieVwiIDogLTQ4NSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY3VydmVcIiA6IDAgfSxcclxuXHRcdHsgXCJ4XCIgOiAxMTAsIFwieVwiIDogLTUwMCwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY3VydmVcIiA6IDAgfSxcclxuXHRcdHsgXCJ4XCIgOiAxMzUsIFwieVwiIDogLTUxNSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ4XCIgOiAxMzUsIFwieVwiIDogLTQ4NSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY3VydmVcIiA6IDI2MCB9LFxyXG5cdFx0eyBcInhcIiA6IDc2MCwgXCJ5XCIgOiAyMTAsIFwiY01hc2tcIiA6IFsgXSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUgfSxcclxuXHRcdHsgXCJ4XCIgOiAyMzAsIFwieVwiIDogMjEwLCBcImNNYXNrXCIgOiBbIF0sIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiB0cnVlIH0sXHJcblx0XHR7IFwieFwiIDogNzYwLCBcInlcIiA6IC0yMTAsIFwiY01hc2tcIiA6IFsgXSwgXCJ2aXNcIiA6IHRydWUgfSxcclxuXHRcdHsgXCJ4XCIgOiAyMzAsIFwieVwiIDogLTIxMCwgXCJjTWFza1wiIDogWyBdLCBcInZpc1wiIDogdHJ1ZSB9LFxyXG5cdFx0eyBcInhcIiA6IC03NjAsIFwieVwiIDogLTIxMCwgXCJjTWFza1wiIDogWyBdLCBcInZpc1wiIDogdHJ1ZSB9LFxyXG5cdFx0eyBcInhcIiA6IC0yMzAsIFwieVwiIDogLTIxMCwgXCJjTWFza1wiIDogWyBdLCBcInZpc1wiIDogdHJ1ZSB9LFxyXG5cdFx0eyBcInhcIiA6IC03NjAsIFwieVwiIDogMjEwLCBcImNNYXNrXCIgOiBbIF0sIFwidmlzXCIgOiB0cnVlIH0sXHJcblx0XHR7IFwieFwiIDogLTIzMCwgXCJ5XCIgOiAyMTAsIFwiY01hc2tcIiA6IFsgXSwgXCJ2aXNcIiA6IHRydWUgfSxcclxuXHRcdHsgXCJ4XCIgOiA1MDAsIFwieVwiIDogMjExLjUsIFwiY01hc2tcIiA6IFsgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjAwMDA4OFwiIH0sXHJcblx0XHR7IFwieFwiIDogNTAwLCBcInlcIiA6IDIwOC41LCBcImNNYXNrXCIgOiBbIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwMDAwODhcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDUwMCwgXCJ5XCIgOiAyMTMsIFwiY01hc2tcIiA6IFsgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjAwMDA4OFwiIH0sXHJcblx0XHR7IFwieFwiIDogNTAwLCBcInlcIiA6IDIwNywgXCJjTWFza1wiIDogWyBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDAwMDg4XCIgfSxcclxuXHRcdHsgXCJ4XCIgOiA1MDAsIFwieVwiIDogMjE0LCBcImNNYXNrXCIgOiBbIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDUwMCwgXCJ5XCIgOiAyMDYsIFwiY01hc2tcIiA6IFsgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogNTAwLCBcInlcIiA6IC0yMTEuNSwgXCJjTWFza1wiIDogWyBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDAwMDg4XCIgfSxcclxuXHRcdHsgXCJ4XCIgOiA1MDAsIFwieVwiIDogLTIwOC41LCBcImNNYXNrXCIgOiBbIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwMDAwODhcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDUwMCwgXCJ5XCIgOiAtMjEzLCBcImNNYXNrXCIgOiBbIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwMDAwODhcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDUwMCwgXCJ5XCIgOiAtMjA3LCBcImNNYXNrXCIgOiBbIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwMDAwODhcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDUwMCwgXCJ5XCIgOiAtMjE0LCBcImNNYXNrXCIgOiBbIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiB9LFxyXG5cdFx0eyBcInhcIiA6IDUwMCwgXCJ5XCIgOiAtMjA2LCBcImNNYXNrXCIgOiBbIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiB9LFxyXG5cdFx0eyBcInhcIiA6IC01MDAsIFwieVwiIDogMjExLjUsIFwiY01hc2tcIiA6IFsgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjg4MDAwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogLTUwMCwgXCJ5XCIgOiAyMDguNSwgXCJjTWFza1wiIDogWyBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiODgwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNTAwLCBcInlcIiA6IDIxMywgXCJjTWFza1wiIDogWyBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiODgwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNTAwLCBcInlcIiA6IDIwNywgXCJjTWFza1wiIDogWyBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiODgwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNTAwLCBcInlcIiA6IDIxNCwgXCJjTWFza1wiIDogWyBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNTAwLCBcInlcIiA6IDIwNiwgXCJjTWFza1wiIDogWyBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNTAwLCBcInlcIiA6IC0yMTEuNSwgXCJjTWFza1wiIDogWyBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiODgwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNTAwLCBcInlcIiA6IC0yMDguNSwgXCJjTWFza1wiIDogWyBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiODgwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNTAwLCBcInlcIiA6IC0yMTMsIFwiY01hc2tcIiA6IFsgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjg4MDAwMFwiIH0sXHJcblx0XHR7IFwieFwiIDogLTUwMCwgXCJ5XCIgOiAtMjA3LCBcImNNYXNrXCIgOiBbIF0sIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCI4ODAwMDBcIiB9LFxyXG5cdFx0eyBcInhcIiA6IC01MDAsIFwieVwiIDogLTIxNCwgXCJjTWFza1wiIDogWyBdLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIgfSxcclxuXHRcdHsgXCJ4XCIgOiAtNTAwLCBcInlcIiA6IC0yMDYsIFwiY01hc2tcIiA6IFsgXSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiIH1cclxuXHJcblx0XSxcclxuXHJcblx0XCJzZWdtZW50c1wiIDogW1xyXG5cdFx0eyBcInYwXCIgOiAyLCBcInYxXCIgOiAzLCBcInZpc1wiIDogZmFsc2UsIFwiY29sb3JcIiA6IFwiRkYwMDAwXCIsIFwiYkNvZWZcIiA6IC0xLjIsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDE4OSwgXCJ2MVwiIDogMTkwLCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJjTWFza1wiIDogWyBdLCBcInlcIiA6IDIxMCB9LFxyXG5cdFx0eyBcInYwXCIgOiAxOTEsIFwidjFcIiA6IDE5MiwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY01hc2tcIiA6IFsgXSwgXCJ5XCIgOiAtMjEwIH0sXHJcblx0XHR7IFwidjBcIiA6IDE5MywgXCJ2MVwiIDogMTk0LCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJjTWFza1wiIDogWyBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDE5NSwgXCJ2MVwiIDogMTk2LCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJjTWFza1wiIDogWyBdLCBcInlcIiA6IDIxMCB9LFxyXG5cdFx0eyBcInYwXCIgOiA0LCBcInYxXCIgOiA1LCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogZmFsc2UsIFwiY29sb3JcIiA6IFwiRkYwMDAwXCIsIFwiYkNvZWZcIiA6IC0xLjIsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcInhcIiA6IC0xMDAwIH0sXHJcblx0XHR7IFwidjBcIiA6IDYsIFwidjFcIiA6IDcsIFwidmlzXCIgOiBmYWxzZSwgXCJjb2xvclwiIDogXCJGRjAwMDBcIiwgXCJiQ29lZlwiIDogLTEuMiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMCwgXCJ2MVwiIDogNCwgXCJjdXJ2ZVwiIDogLTkwLCBcInZpc1wiIDogZmFsc2UsIFwiY29sb3JcIiA6IFwiRkYwMDAwXCIsIFwiYkNvZWZcIiA6IC0xLjIsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDUsIFwidjFcIiA6IDIsIFwiY3VydmVcIiA6IC05MCwgXCJ2aXNcIiA6IGZhbHNlLCBcImNvbG9yXCIgOiBcIkZGMDAwMFwiLCBcImJDb2VmXCIgOiAtMS4yLCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAzLCBcInYxXCIgOiA3LCBcImN1cnZlXCIgOiAtOTAsIFwidmlzXCIgOiBmYWxzZSwgXCJjb2xvclwiIDogXCJGRjAwMDBcIiwgXCJiQ29lZlwiIDogLTEuMiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMSwgXCJ2MVwiIDogNiwgXCJjdXJ2ZVwiIDogOTAsIFwidmlzXCIgOiBmYWxzZSwgXCJjb2xvclwiIDogXCJGRjAwMDBcIiwgXCJiQ29lZlwiIDogLTEuMiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogOCwgXCJ2MVwiIDogOSwgXCJ2aXNcIiA6IHRydWUsIFwiYkNvZWZcIiA6IC0wLjcsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcInlcIiA6IDk3IH0sXHJcblx0XHR7IFwidjBcIiA6IDEwLCBcInYxXCIgOiAxMSwgXCJ2aXNcIiA6IHRydWUsIFwiYkNvZWZcIiA6IC0wLjcsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcInlcIiA6IC05NyB9LFxyXG5cdFx0eyBcInYwXCIgOiAxMiwgXCJ2MVwiIDogMTMsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImJDb2VmXCIgOiAtMC43LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxMywgXCJ2MVwiIDogOSwgXCJjdXJ2ZVwiIDogLTkwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJiQ29lZlwiIDogLTAuNywgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTIsIFwidjFcIiA6IDExLCBcImN1cnZlXCIgOiA5MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiYkNvZWZcIiA6IC0wLjcsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDE0LCBcInYxXCIgOiAxNSwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDE2LCBcInYxXCIgOiAxNywgXCJ2aXNcIiA6IHRydWUsIFwiYkNvZWZcIiA6IC0wLjcsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcInlcIiA6IC05NyB9LFxyXG5cdFx0eyBcInYwXCIgOiAxOCwgXCJ2MVwiIDogMTksIFwidmlzXCIgOiB0cnVlLCBcImJDb2VmXCIgOiAtMC43LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJ5XCIgOiA5NyB9LFxyXG5cdFx0eyBcInYwXCIgOiAyMCwgXCJ2MVwiIDogMjEsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImJDb2VmXCIgOiAtMC43LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJ4XCIgOiA4MTAgfSxcclxuXHRcdHsgXCJ2MFwiIDogMjEsIFwidjFcIiA6IDE3LCBcImN1cnZlXCIgOiAtOTAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImJDb2VmXCIgOiAtMC43LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAyMCwgXCJ2MVwiIDogMTksIFwiY3VydmVcIiA6IDkwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJiQ29lZlwiIDogLTAuNywgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMjIsIFwidjFcIiA6IDIzLCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwieFwiIDogNzYwIH0sXHJcblx0XHR7IFwidjBcIiA6IDI0LCBcInYxXCIgOiAyNSwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcInhcIiA6IDAgfSxcclxuXHRcdHsgXCJ2MFwiIDogMjYsIFwidjFcIiA6IDI3LCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwieFwiIDogLTIzMCB9LFxyXG5cdFx0eyBcInYwXCIgOiAyOCwgXCJ2MVwiIDogMjksIFwiY3VydmVcIiA6IC0xODAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJ4XCIgOiAtMjMwIH0sXHJcblx0XHR7IFwidjBcIiA6IDI4LCBcInYxXCIgOiAyOSwgXCJjdXJ2ZVwiIDogMTgwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMzAsIFwidjFcIiA6IDMxLCBcImN1cnZlXCIgOiAtMTgwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCIwMDAwODhcIiwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwieFwiIDogLTIzMCB9LFxyXG5cdFx0eyBcInYwXCIgOiAzMCwgXCJ2MVwiIDogMzEsIFwiY3VydmVcIiA6IDE4MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiMDAwMDg4XCIsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDMyLCBcInYxXCIgOiAzMywgXCJjdXJ2ZVwiIDogLTE4MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODgwMDAwXCIsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcInhcIiA6IC0yMzAgfSxcclxuXHRcdHsgXCJ2MFwiIDogMzIsIFwidjFcIiA6IDMzLCBcImN1cnZlXCIgOiAxODAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjg4MDAwMFwiLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAzNCwgXCJ2MVwiIDogMzUsIFwiY3VydmVcIiA6IC0xODAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjg4MDAwMFwiLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJ4XCIgOiAtMjMwIH0sXHJcblx0XHR7IFwidjBcIiA6IDM0LCBcInYxXCIgOiAzNSwgXCJjdXJ2ZVwiIDogMTgwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4ODAwMDBcIiwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMzYsIFwidjFcIiA6IDM3LCBcImN1cnZlXCIgOiAtMTgwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCIwMDAwODhcIiwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwieFwiIDogLTIzMCB9LFxyXG5cdFx0eyBcInYwXCIgOiAzNiwgXCJ2MVwiIDogMzcsIFwiY3VydmVcIiA6IDE4MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiMDAwMDg4XCIsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDM4LCBcInYxXCIgOiAzOSwgXCJjdXJ2ZVwiIDogLTE4MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcInhcIiA6IDAgfSxcclxuXHRcdHsgXCJ2MFwiIDogMzgsIFwidjFcIiA6IDM5LCBcImN1cnZlXCIgOiAxODAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJ4XCIgOiAwIH0sXHJcblx0XHR7IFwidjBcIiA6IDQwLCBcInYxXCIgOiA0MSwgXCJjdXJ2ZVwiIDogLTE4MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcInhcIiA6IDAgfSxcclxuXHRcdHsgXCJ2MFwiIDogNDAsIFwidjFcIiA6IDQxLCBcImN1cnZlXCIgOiAxODAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJ4XCIgOiAwIH0sXHJcblx0XHR7IFwidjBcIiA6IDQyLCBcInYxXCIgOiA0MywgXCJjdXJ2ZVwiIDogLTE4MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY01hc2tcIiA6IFtcIm5vbmVcIiBdLCBcInhcIiA6IDAgfSxcclxuXHRcdHsgXCJ2MFwiIDogNDIsIFwidjFcIiA6IDQzLCBcImN1cnZlXCIgOiAxODAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImNNYXNrXCIgOiBbXCJub25lXCIgXSwgXCJ4XCIgOiAwIH0sXHJcblx0XHR7IFwidjBcIiA6IDczLCBcInYxXCIgOiA3NCwgXCJjdXJ2ZVwiIDogMTgwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCIwMDAwODhcIiwgXCJjTWFza1wiIDogW1wiYzBcIiBdLCBcInhcIiA6IDc1NywgXCJwMFwiIDogWzc2MCwtOTAgXSwgXCJwMVwiIDogWzc2MCw5MCBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDc1LCBcInYxXCIgOiA3NiwgXCJjdXJ2ZVwiIDogOTAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImJDb2VmXCIgOiAwLjUsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogNzcsIFwidjFcIiA6IDc4LCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJiQ29lZlwiIDogMC41LCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDc5LCBcInYxXCIgOiA4MCwgXCJjdXJ2ZVwiIDogLTkwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJiQ29lZlwiIDogMC41LCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDgxLCBcInYxXCIgOiA4MiwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiYkNvZWZcIiA6IDAuNSwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiA4NCwgXCJ2MVwiIDogODMsIFwiY3VydmVcIiA6IC05MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiYkNvZWZcIiA6IDAuNSwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiA4NiwgXCJ2MVwiIDogODcsIFwiY3VydmVcIiA6IC05MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiYkNvZWZcIiA6IDAuNSwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiA4OCwgXCJ2MVwiIDogODksIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiB0cnVlLCBcImJDb2VmXCIgOiAwLCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcInlcIiA6IDk3IH0sXHJcblx0XHR7IFwidjBcIiA6IDkwLCBcInYxXCIgOiA5MSwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwieVwiIDogLTk3IH0sXHJcblx0XHR7IFwidjBcIiA6IDkyLCBcInYxXCIgOiA5MywgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogOTMsIFwidjFcIiA6IDg5LCBcImN1cnZlXCIgOiAtOTAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImJDb2VmXCIgOiAwLCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDkyLCBcInYxXCIgOiA5MSwgXCJjdXJ2ZVwiIDogOTAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImJDb2VmXCIgOiAwLjcsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogOTQsIFwidjFcIiA6IDk1LCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogdHJ1ZSwgXCJiQ29lZlwiIDogMCwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJ5XCIgOiAtOTcgfSxcclxuXHRcdHsgXCJ2MFwiIDogOTYsIFwidjFcIiA6IDk3LCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogdHJ1ZSwgXCJiQ29lZlwiIDogMCwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJ5XCIgOiA5NyB9LFxyXG5cdFx0eyBcInYwXCIgOiA5OCwgXCJ2MVwiIDogOTksIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImJDb2VmXCIgOiAwLCBcImNNYXNrXCIgOiBbXCJyZWRcIixcImJsdWVcIiBdLCBcInhcIiA6IDgxMCB9LFxyXG5cdFx0eyBcInYwXCIgOiA5OSwgXCJ2MVwiIDogOTUsIFwiY3VydmVcIiA6IC05MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogOTgsIFwidjFcIiA6IDk3LCBcImN1cnZlXCIgOiA5MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiYkNvZWZcIiA6IDAuNywgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxMDAsIFwidjFcIiA6IDEwMSwgXCJjdXJ2ZVwiIDogMC41MDY2MTQ1MDkwNzQzOTY4LCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJjTWFza1wiIDogW1wibm9uZVwiIF0sIFwieFwiIDogMjMwIH0sXHJcblx0XHR7IFwidjBcIiA6IDEwMiwgXCJ2MVwiIDogMTAzLCBcImN1cnZlXCIgOiAtMTgwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4ODAwMDBcIiwgXCJjTWFza1wiIDogW1wiYzBcIiBdLCBcInhcIiA6IC03NTcsIFwicDBcIiA6IFs3NjAsLTkwIF0sIFwicDFcIiA6IFs3NjAsOTAgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxMDQsIFwidjFcIiA6IDEwNSwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiYkNvZWZcIiA6IDAuNSwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJ4XCIgOiAtMTAwMCB9LFxyXG5cdFx0eyBcInYwXCIgOiA4MywgXCJ2MVwiIDogMTA2LCBcInZpc1wiIDogZmFsc2UsIFwiY29sb3JcIiA6IFwiRkYwMDAwXCIsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDgyLCBcInYxXCIgOiAxMDcsIFwidmlzXCIgOiBmYWxzZSwgXCJjb2xvclwiIDogXCJGRjAwMDBcIiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMCwgXCJ2MVwiIDogNzUsIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiBmYWxzZSwgXCJjb2xvclwiIDogXCJGRjAwMDBcIiwgXCJiQ29lZlwiIDogLTEuMiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTA5LCBcInYxXCIgOiAxMTAsIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImJDb2VmXCIgOiAwLjUsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTEwLCBcInYxXCIgOiAxMDgsIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImJDb2VmXCIgOiAwLjUsIFwiY01hc2tcIiA6IFtcInJlZFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogODYsIFwidjFcIiA6IDEwOSwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiYkNvZWZcIiA6IDAuNSwgXCJjTWFza1wiIDogW1wiYmx1ZVwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTE3LCBcInYxXCIgOiAxMTgsIFwiY3VydmVcIiA6IDkwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJiQ29lZlwiIDogMCwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxMTgsIFwidjFcIiA6IDExOSwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTE5LCBcInYxXCIgOiAxMjAsIFwiY3VydmVcIiA6IDkwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJiQ29lZlwiIDogMCwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxMjAsIFwidjFcIiA6IDEyMSwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcIndhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDEyMSwgXCJ2MVwiIDogMTA5LCBcImN1cnZlXCIgOiA5MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTIzLCBcInYxXCIgOiAxMjIsIFwiY3VydmVcIiA6IC05MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTI0LCBcInYxXCIgOiAxMjUsIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImJDb2VmXCIgOiAwLCBcImNNYXNrXCIgOiBbXCJ3YWxsXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxMjYsIFwidjFcIiA6IDEyNywgXCJjdXJ2ZVwiIDogLTkwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJiQ29lZlwiIDogMCwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxMjgsIFwidjFcIiA6IDEyOSwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTMwLCBcInYxXCIgOiAxMzEsIFwiY3VydmVcIiA6IC05MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTMyLCBcInYxXCIgOiAxMzMsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImJDb2VmXCIgOiAtMC42LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxMzQsIFwidjFcIiA6IDEzNSwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiYkNvZWZcIiA6IC0wLjYsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDEzNCwgXCJ2MVwiIDogMTM2LCBcImN1cnZlXCIgOiA5MCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiYkNvZWZcIiA6IC0wLjYsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDEzNywgXCJ2MVwiIDogMTM4LCBcImN1cnZlXCIgOiAtOTAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImJDb2VmXCIgOiAtMC42LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxMzYsIFwidjFcIiA6IDEzOSwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiYkNvZWZcIiA6IC0wLjYsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDEzOCwgXCJ2MVwiIDogMTQwLCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJiQ29lZlwiIDogLTAuNiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTM5LCBcInYxXCIgOiAxNDEsIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiBmYWxzZSwgXCJjb2xvclwiIDogXCIwMDY0MDBcIiwgXCJiQ29lZlwiIDogLTAuNiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTQwLCBcInYxXCIgOiAxNDIsIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiBmYWxzZSwgXCJjb2xvclwiIDogXCIwMDY0MDBcIiwgXCJiQ29lZlwiIDogLTAuNiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTQxLCBcInYxXCIgOiAxMzIsIFwiY3VydmVcIiA6IDk3LCBcInZpc1wiIDogZmFsc2UsIFwiY29sb3JcIiA6IFwiRUVERDgyXCIsIFwiYkNvZWZcIiA6IC0wLjYsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDE0MiwgXCJ2MVwiIDogMTMzLCBcImN1cnZlXCIgOiAtOTUsIFwidmlzXCIgOiBmYWxzZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJiQ29lZlwiIDogLTAuNiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTU3LCBcInYxXCIgOiAxNTMsIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiIH0sXHJcblx0XHR7IFwidjBcIiA6IDE1NywgXCJ2MVwiIDogMTQ5LCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiB9LFxyXG5cdFx0eyBcInYwXCIgOiAxNDksIFwidjFcIiA6IDE1OCwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIgfSxcclxuXHRcdHsgXCJ2MFwiIDogMTU5LCBcInYxXCIgOiAxNDUsIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxNjAsIFwidjFcIiA6IDE0NiwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDE1MCwgXCJ2MVwiIDogMTU0LCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCI4MTgxODFcIiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTYzLCBcInYxXCIgOiAxNjIsIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjgxODE4MVwiLCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxNjEsIFwidjFcIiA6IDE1MCwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiODE4MTgxXCIsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDE3MSwgXCJ2MVwiIDogMTcwLCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJ4XCIgOiAxMTUgfSxcclxuXHRcdHsgXCJ2MFwiIDogMTgxLCBcInYxXCIgOiAxODYsIFwiY3VydmVcIiA6IDIyMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDE4MSwgXCJ2MVwiIDogMTc5LCBcImN1cnZlXCIgOiAwLCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTg2LCBcInYxXCIgOiAxODUsIFwiY3VydmVcIiA6IDAsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxODEsIFwidjFcIiA6IDE4NiwgXCJjdXJ2ZVwiIDogMCwgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDE2NSwgXCJ2MVwiIDogMTY0LCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTY0LCBcInYxXCIgOiAxNzQsIFwidmlzXCIgOiB0cnVlLCBcImNvbG9yXCIgOiBcIjAwMDAwMFwiLCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxODQsIFwidjFcIiA6IDE4NywgXCJ2aXNcIiA6IHRydWUsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDE4NCwgXCJ2MVwiIDogMTg4LCBcInZpc1wiIDogdHJ1ZSwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMjAxLCBcInYxXCIgOiAyMDIsIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjTWFza1wiIDogWyBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDIwMiwgXCJ2MVwiIDogMjAxLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY01hc2tcIiA6IFsgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAxOTcsIFwidjFcIiA6IDE5OCwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjAwMDA4OFwiLCBcImNNYXNrXCIgOiBbIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMTk4LCBcInYxXCIgOiAxOTcsIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwMDAwODhcIiwgXCJjTWFza1wiIDogWyBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDE5OSwgXCJ2MVwiIDogMjAwLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDAwMDg4XCIsIFwiY01hc2tcIiA6IFsgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAyMDAsIFwidjFcIiA6IDE5OSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjAwMDA4OFwiLCBcImNNYXNrXCIgOiBbIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMjA3LCBcInYxXCIgOiAyMDgsIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjTWFza1wiIDogWyBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDIwOCwgXCJ2MVwiIDogMjA3LCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY01hc2tcIiA6IFsgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAyMDMsIFwidjFcIiA6IDIwNCwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjAwMDA4OFwiLCBcImNNYXNrXCIgOiBbIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMjA0LCBcInYxXCIgOiAyMDMsIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwMDAwODhcIiwgXCJjTWFza1wiIDogWyBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDIwNSwgXCJ2MVwiIDogMjA2LCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDAwMDg4XCIsIFwiY01hc2tcIiA6IFsgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAyMDYsIFwidjFcIiA6IDIwNSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjAwMDA4OFwiLCBcImNNYXNrXCIgOiBbIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMjEzLCBcInYxXCIgOiAyMTQsIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjTWFza1wiIDogWyBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDIxNCwgXCJ2MVwiIDogMjEzLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY01hc2tcIiA6IFsgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAyMDksIFwidjFcIiA6IDIxMCwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjg4MDAwMFwiLCBcImNNYXNrXCIgOiBbIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMjEwLCBcInYxXCIgOiAyMDksIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCI4ODAwMDBcIiwgXCJjTWFza1wiIDogWyBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDIxMSwgXCJ2MVwiIDogMjEyLCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiODgwMDAwXCIsIFwiY01hc2tcIiA6IFsgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAyMTIsIFwidjFcIiA6IDIxMSwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjg4MDAwMFwiLCBcImNNYXNrXCIgOiBbIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMjE5LCBcInYxXCIgOiAyMjAsIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCIwMDAwMDBcIiwgXCJjTWFza1wiIDogWyBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDIyMCwgXCJ2MVwiIDogMjE5LCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsIFwiY01hc2tcIiA6IFsgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAyMTUsIFwidjFcIiA6IDIxNiwgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjg4MDAwMFwiLCBcImNNYXNrXCIgOiBbIF0gfSxcclxuXHRcdHsgXCJ2MFwiIDogMjE2LCBcInYxXCIgOiAyMTUsIFwiY3VydmVcIiA6IDE4MCwgXCJjb2xvclwiIDogXCI4ODAwMDBcIiwgXCJjTWFza1wiIDogWyBdIH0sXHJcblx0XHR7IFwidjBcIiA6IDIxNywgXCJ2MVwiIDogMjE4LCBcImN1cnZlXCIgOiAxODAsIFwiY29sb3JcIiA6IFwiODgwMDAwXCIsIFwiY01hc2tcIiA6IFsgXSB9LFxyXG5cdFx0eyBcInYwXCIgOiAyMTgsIFwidjFcIiA6IDIxNywgXCJjdXJ2ZVwiIDogMTgwLCBcImNvbG9yXCIgOiBcIjg4MDAwMFwiLCBcImNNYXNrXCIgOiBbIF0gfVxyXG5cclxuXHRdLFxyXG5cclxuXHRcImdvYWxzXCIgOiBbXHJcblx0XHR7IFwicDBcIiA6IFstNzYwLDk1IF0sIFwicDFcIiA6IFstNzYwLC05NSBdLCBcInRlYW1cIiA6IFwicmVkXCIsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImJDb2VmXCIgOiAxLCBcInhcIiA6IC03NTcgfSxcclxuXHRcdHsgXCJwMFwiIDogWzc2MCw5NyBdLCBcInAxXCIgOiBbNzYwLC05NyBdLCBcInRlYW1cIiA6IFwiYmx1ZVwiLCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJiQ29lZlwiIDogMSB9XHJcblxyXG5cdF0sXHJcblxyXG5cdFwiZGlzY3NcIiA6IFtcclxuXHRcdHsgXCJyYWRpdXNcIiA6IDYsIFwiaW52TWFzc1wiIDogMCwgXCJwb3NcIiA6IFstNzYwLC05NyBdLCBcImNvbG9yXCIgOiBcIkMwQzBDMFwiLCBcImJDb2VmXCIgOiAtMC43LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJ4XCIgOiAtNzU3IH0sXHJcblx0XHR7IFwicmFkaXVzXCIgOiA2LCBcImludk1hc3NcIiA6IDAsIFwicG9zXCIgOiBbLTc2MCw5NyBdLCBcImNvbG9yXCIgOiBcIkMwQzBDMFwiLCBcImJDb2VmXCIgOiAtMC43LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJ4XCIgOiAtNzU3IH0sXHJcblx0XHR7IFwicmFkaXVzXCIgOiA2LCBcImludk1hc3NcIiA6IDAsIFwicG9zXCIgOiBbNzYwLDk3IF0sIFwiY29sb3JcIiA6IFwiQzBDMEMwXCIsIFwiYkNvZWZcIiA6IC0wLjcsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwicmFkaXVzXCIgOiA2LCBcImludk1hc3NcIiA6IDAsIFwicG9zXCIgOiBbNzYwLC05NyBdLCBcImNvbG9yXCIgOiBcIkMwQzBDMFwiLCBcImJDb2VmXCIgOiAtMC43LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcInJhZGl1c1wiIDogNiwgXCJpbnZNYXNzXCIgOiAwLCBcInBvc1wiIDogWy03NjAsLTk3IF0sIFwiY29sb3JcIiA6IFwiQzBDMEMwXCIsIFwiYkNvZWZcIiA6IDAuNywgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSwgXCJ4XCIgOiAtNzU3IH0sXHJcblx0XHR7IFwicmFkaXVzXCIgOiA2LCBcImludk1hc3NcIiA6IDAsIFwicG9zXCIgOiBbLTc2MCw5NyBdLCBcImNvbG9yXCIgOiBcIkMwQzBDMFwiLCBcImJDb2VmXCIgOiAwLjcsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0sIFwieFwiIDogLTc1NyB9LFxyXG5cdFx0eyBcInJhZGl1c1wiIDogNiwgXCJpbnZNYXNzXCIgOiAwLCBcInBvc1wiIDogWzc2MCw5NyBdLCBcImNvbG9yXCIgOiBcIkMwQzBDMFwiLCBcImJDb2VmXCIgOiAwLjcsIFwiY01hc2tcIiA6IFtcInJlZFwiLFwiYmx1ZVwiIF0gfSxcclxuXHRcdHsgXCJyYWRpdXNcIiA6IDYsIFwiaW52TWFzc1wiIDogMCwgXCJwb3NcIiA6IFs3NjAsLTk3IF0sIFwiY29sb3JcIiA6IFwiQzBDMEMwXCIsIFwiYkNvZWZcIiA6IDAuNywgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSB9XHJcblxyXG5cdF0sXHJcblxyXG5cdFwicGxhbmVzXCIgOiBbXHJcblx0XHR7IFwibm9ybWFsXCIgOiBbMCwxIF0sIFwiZGlzdFwiIDogLTQ3MywgXCJiQ29lZlwiIDogLTEuMiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiRUVERDgyXCIgfSxcclxuXHRcdHsgXCJub3JtYWxcIiA6IFswLC0xIF0sIFwiZGlzdFwiIDogLTQ3MiwgXCJiQ29lZlwiIDogLTEuMiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0sIFwiY29sb3JcIiA6IFwiRUVERDgyXCIgfSxcclxuXHRcdHsgXCJub3JtYWxcIiA6IFswLC0xIF0sIFwiZGlzdFwiIDogLTU0OSwgXCJiQ29lZlwiIDogLTAuNiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJub3JtYWxcIiA6IFswLDEgXSwgXCJkaXN0XCIgOiAtNTQ3LCBcImJDb2VmXCIgOiAtMC42LCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcIm5vcm1hbFwiIDogWzAuOTk5OTAxNjIxMzQsLTAuMDE0MDI2Njc2MDUwOSBdLCBcImRpc3RcIiA6IC05OTguMDk4MTkxNTYyLCBcImJDb2VmXCIgOiAtMS4yLCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSwgXCJjb2xvclwiIDogXCJFRUREODJcIiB9LFxyXG5cdFx0eyBcIm5vcm1hbFwiIDogWy0xLDAgXSwgXCJkaXN0XCIgOiAtMTAzOSwgXCJiQ29lZlwiIDogLTAuNiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJub3JtYWxcIiA6IFsxLDAgXSwgXCJkaXN0XCIgOiAtMTAzOSwgXCJiQ29lZlwiIDogLTAuNiwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdHsgXCJub3JtYWxcIiA6IFstMSwwIF0sIFwiZGlzdFwiIDogLTEwMDEsIFwiYkNvZWZcIiA6IC0xLjIsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdLCBcImNvbG9yXCIgOiBcIkVFREQ4MlwiIH0sXHJcblx0XHR7IFwibm9ybWFsXCIgOiBbMC41LDAuNSBdLCBcImRpc3RcIiA6IC05NjAsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwibm9ybWFsXCIgOiBbLTAuNSwwLjUgXSwgXCJkaXN0XCIgOiAtOTYwLCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcIm5vcm1hbFwiIDogWy0wLjUsLTAuNSBdLCBcImRpc3RcIiA6IC05NjAsIFwiY01hc2tcIiA6IFtcImJhbGxcIiBdIH0sXHJcblx0XHR7IFwibm9ybWFsXCIgOiBbMC41LC0wLjUgXSwgXCJkaXN0XCIgOiAtOTYwLCBcImNNYXNrXCIgOiBbXCJiYWxsXCIgXSB9LFxyXG5cdFx0eyBcIm5vcm1hbFwiIDogWy0xLDAgXSwgXCJkaXN0XCIgOiA3NjAsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcImMwXCIgXSB9LFxyXG5cdFx0eyBcIm5vcm1hbFwiIDogWzEsMCBdLCBcImRpc3RcIiA6IDc2MCwgXCJiQ29lZlwiIDogMCwgXCJjTWFza1wiIDogW1wiYzFcIiBdIH0sXHJcblx0XHR7IFwibm9ybWFsXCIgOiBbLTEsMCBdLCBcImRpc3RcIiA6IC0yODAsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcImMyXCIgXSB9LFxyXG5cdFx0eyBcIm5vcm1hbFwiIDogWzEsMCBdLCBcImRpc3RcIiA6IC0yODAsIFwiYkNvZWZcIiA6IDAsIFwiY01hc2tcIiA6IFtcImMzXCIgXSB9XHJcblxyXG5cdF0sXHJcblxyXG5cdFwidHJhaXRzXCIgOiB7XHJcblx0XHRcImJhbGxBcmVhXCIgOiB7IFwidmlzXCIgOiBmYWxzZSwgXCJiQ29lZlwiIDogMSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdFwiZ29hbFBvc3RcIiA6IHsgXCJyYWRpdXNcIiA6IDgsIFwiaW52TWFzc1wiIDogMCwgXCJiQ29lZlwiIDogMC41IH0sXHJcblx0XHRcImdvYWxOZXRcIiA6IHsgXCJ2aXNcIiA6IHRydWUsIFwiYkNvZWZcIiA6IDAuMSwgXCJjTWFza1wiIDogW1wiYmFsbFwiIF0gfSxcclxuXHRcdFwia2lja09mZkJhcnJpZXJcIiA6IHsgXCJ2aXNcIiA6IGZhbHNlLCBcImJDb2VmXCIgOiAwLjEsIFwiY0dyb3VwXCIgOiBbXCJyZWRLT1wiLFwiYmx1ZUtPXCIgXSwgXCJjTWFza1wiIDogW1wicmVkXCIsXCJibHVlXCIgXSB9XHJcblxyXG5cdH0sXHJcblxyXG5cdFwiYmFsbFBoeXNpY3NcIiA6IHtcclxuXHRcdFwiY29sb3JcIiA6IFwiMDAwMDAwXCIsXHJcblx0XHRcInJhZGl1c1wiIDogNi41LFxyXG5cdFx0XCJkYW1waW5nXCIgOiAwLjk5NixcclxuXHRcdFwiaW52TWFzc1wiIDogMS41LFxyXG5cdFx0XCJiQ29lZlwiIDogLTAuNVxyXG5cclxuXHR9LFxyXG5cclxuXHRcInBsYXllclBoeXNpY3NcIiA6IHtcclxuXHRcdFwiZGFtcGluZ1wiIDogMC45ODIsXHJcblx0XHRcImtpY2tTdHJlbmd0aFwiIDogMy41LFxyXG5cdFx0XCJraWNraW5nRGFtcGluZ1wiIDogMC45NzQsXHJcblx0XHRcImtpY2tpbmdBY2NlbGVyYXRpb25cIiA6IDAuMDY5LFxyXG5cdFx0XCJiQ29lZlwiIDogMSxcclxuXHRcdFwiYWNjZWxlcmF0aW9uXCIgOiAwLjA3OVxyXG5cclxuXHR9LFxyXG5cclxuXHRcImpvaW50c1wiIDogW1xyXG5cdFx0XHJcblxyXG5cdF0sXHJcblxyXG5cdFwicmVkU3Bhd25Qb2ludHNcIiA6IFtcclxuXHRcdFxyXG5cclxuXHRdLFxyXG5cclxuXHRcImJsdWVTcGF3blBvaW50c1wiIDogW1xyXG5cdFx0XHJcblxyXG5cdF1cclxufSIsImltcG9ydCB7IFBsYXllciwgUm9vbSB9IGZyb20gXCJoYXhiYWxsLWV4dGVuZGVkLXJvb21cIlxyXG5cclxuZXhwb3J0IHZhciBibHVlVGVhbTogUGxheWVyW10gPSBbXVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUJsdWVUZWFtUGxheWVycyhyb29tOiBSb29tKTogdm9pZCB7XHJcbiAgICBibHVlVGVhbSA9IFtdXHJcbiAgICBmb3IgKGNvbnN0IHBsYXllcklkIGluIHJvb20ucGxheWVycy5ibHVlKCkpIHtcclxuICAgICAgICBjb25zdCBwbGF5ZXIgPSByb29tLnBsYXllcnMuYmx1ZSgpW3BsYXllcklkXTtcclxuICAgICAgICBibHVlVGVhbS5wdXNoKHBsYXllcilcclxuICAgIH0gXHJcbn0iLCJpbXBvcnQgeyBQbGF5ZXIgfSBmcm9tIFwiaGF4YmFsbC1leHRlbmRlZC1yb29tXCJcclxuXHJcbmV4cG9ydCB2YXIgcGxheWVyc0xpc3Q6IFBsYXllcltdID0gW11cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVQbGF5ZXIoaWQ6IG51bWJlcikge1xyXG4gICAgcGxheWVyc0xpc3QgPSBwbGF5ZXJzTGlzdC5maWx0ZXIoaXRlbSA9PiBpdGVtLmlkICE9PSBpZCk7XHJcbn0iLCJpbXBvcnQgeyBQbGF5ZXIsIFJvb20gfSBmcm9tIFwiaGF4YmFsbC1leHRlbmRlZC1yb29tXCJcclxuaW1wb3J0IHsgcGxheWVyc0xpc3QgfSBmcm9tIFwiLi9wbGF5ZXJzXCI7XHJcblxyXG5leHBvcnQgdmFyIHJlZFRlYW06IFBsYXllcltdID0gW11cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVSZWRUZWFtUGxheWVycyhyb29tOiBSb29tKTogdm9pZCB7XHJcbiAgICByZWRUZWFtID0gW11cclxuICAgIGZvciAoY29uc3QgcGxheWVySWQgaW4gcm9vbS5wbGF5ZXJzLnJlZCgpKSB7XHJcbiAgICAgICAgY29uc3QgcGxheWVyID0gcm9vbS5wbGF5ZXJzLnJlZCgpW3BsYXllcklkXTtcclxuICAgICAgICByZWRUZWFtLnB1c2gocGxheWVyKVxyXG4gICAgfSBcclxufSJdfQ==
